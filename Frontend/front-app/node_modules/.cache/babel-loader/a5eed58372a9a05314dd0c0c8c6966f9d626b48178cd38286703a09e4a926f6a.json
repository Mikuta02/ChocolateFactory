{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  __name: 'AddComment',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const text = ref('');\n    const rating = ref(5);\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const factoryId = ref(route.params.factoryId); // Dodato za primanje factoryId parametra\n\n    const submitComment = () => {\n      const userId = store.getters.userId;\n      const token = store.state.token;\n      if (!userId) {\n        console.error('User is not defined or user.id is missing');\n        return;\n      }\n      axios.post('http://localhost:3001/api/comments', {\n        userId,\n        factoryId: factoryId.value,\n        // Koristi se factoryId iz parametara rute\n        text: text.value,\n        rating: rating.value\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => {\n        console.log('Comment added:', response.data);\n        router.push('/purchases');\n      }).catch(error => {\n        console.error('Error adding comment:', error);\n      });\n    };\n    const __returned__ = {\n      text,\n      rating,\n      store,\n      router,\n      route,\n      factoryId,\n      submitComment,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useStore","useRouter","useRoute","axios","text","rating","store","router","route","factoryId","params","submitComment","userId","getters","token","state","console","error","post","value","headers","then","response","log","data","push","catch"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/components/AddComment.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-comment\">\r\n    <h2>Add Comment</h2>\r\n    <form @submit.prevent=\"submitComment\">\r\n      <div>\r\n        <label for=\"text\">Comment:</label>\r\n        <textarea id=\"text\" v-model=\"text\" required></textarea>\r\n      </div>\r\n      <div>\r\n        <label for=\"rating\">Rating:</label>\r\n        <input id=\"rating\" type=\"number\" v-model=\"rating\" min=\"1\" max=\"5\" required />\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport axios from 'axios';\r\n\r\nconst text = ref('');\r\nconst rating = ref(5);\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst factoryId = ref(route.params.factoryId); // Dodato za primanje factoryId parametra\r\n\r\nconst submitComment = () => {\r\n  const userId = store.getters.userId;\r\n  const token = store.state.token;\r\n\r\n  if (!userId) {\r\n    console.error('User is not defined or user.id is missing');\r\n    return;\r\n  }\r\n\r\n  axios.post('http://localhost:3001/api/comments', {\r\n    userId,\r\n    factoryId: factoryId.value, // Koristi se factoryId iz parametara rute\r\n    text: text.value,\r\n    rating: rating.value,\r\n  }, {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  .then(response => {\r\n    console.log('Comment added:', response.data);\r\n    router.push('/purchases');\r\n  })\r\n  .catch(error => {\r\n    console.error('Error adding comment:', error);\r\n  });\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.add-comment {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.add-comment h2 {\r\n  text-align: center;\r\n  color: #333;\r\n  font-size: 1.5em;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-comment form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.add-comment label {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.add-comment textarea,\r\n.add-comment input {\r\n  padding: 8px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.add-comment button {\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.add-comment button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";AAkBA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,YAAY;AAChD,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,IAAI,GAAGL,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMM,MAAM,GAAGN,GAAG,CAAC,CAAC,CAAC;IACrB,MAAMO,KAAK,GAAGN,QAAQ,CAAC,CAAC;IACxB,MAAMO,MAAM,GAAGN,SAAS,CAAC,CAAC;IAC1B,MAAMO,KAAK,GAAGN,QAAQ,CAAC,CAAC;IACxB,MAAMO,SAAS,GAAGV,GAAG,CAACS,KAAK,CAACE,MAAM,CAACD,SAAS,CAAC,CAAC,CAAC;;IAE/C,MAAME,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMC,MAAM,GAAGN,KAAK,CAACO,OAAO,CAACD,MAAM;MACnC,MAAME,KAAK,GAAGR,KAAK,CAACS,KAAK,CAACD,KAAK;MAE/B,IAAI,CAACF,MAAM,EAAE;QACXI,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;QAC1D;MACF;MAEAd,KAAK,CAACe,IAAI,CAAC,oCAAoC,EAAE;QAC/CN,MAAM;QACNH,SAAS,EAAEA,SAAS,CAACU,KAAK;QAAE;QAC5Bf,IAAI,EAAEA,IAAI,CAACe,KAAK;QAChBd,MAAM,EAAEA,MAAM,CAACc;MACjB,CAAC,EAAE;QACDC,OAAO,EAAE;UACP,eAAe,EAAG,UAASN,KAAM;QACnC;MACF,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;QAChBN,OAAO,CAACO,GAAG,CAAC,gBAAgB,EAAED,QAAQ,CAACE,IAAI,CAAC;QAC5CjB,MAAM,CAACkB,IAAI,CAAC,YAAY,CAAC;MAC3B,CAAC,CAAC,CACDC,KAAK,CAACT,KAAK,IAAI;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}