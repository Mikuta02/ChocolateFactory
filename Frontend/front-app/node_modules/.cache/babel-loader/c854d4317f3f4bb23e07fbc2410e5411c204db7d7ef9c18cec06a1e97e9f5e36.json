{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: {\n    factoryId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      comments: [],\n      text: '',\n      rating: 1,\n      userId: 1 // Hard-coded user ID for now\n    };\n  },\n  created() {\n    this.fetchComments();\n  },\n  methods: {\n    fetchComments() {\n      axios.get(`http://localhost:3001/api/comments/factory/${this.factoryId}`).then(response => {\n        this.comments = response.data;\n      }).catch(error => {\n        console.error('Error fetching comments:', error);\n      });\n    },\n    addComment() {\n      const newComment = {\n        userId: this.userId,\n        factoryId: this.factoryId,\n        text: this.text,\n        rating: this.rating\n      };\n      axios.post('http://localhost:3001/api/comments', newComment).then(response => {\n        this.comments.push(response.data);\n        this.text = '';\n        this.rating = 1;\n      }).catch(error => {\n        console.error('Error adding comment:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","props","factoryId","type","Number","required","data","comments","text","rating","userId","created","fetchComments","methods","get","then","response","catch","error","console","addComment","newComment","post","push"],"sources":["C:\\Programiranje\\veb\\projekat\\chocolate-factoryapp\\Frontend\\front-app\\src\\components\\Comments.vue"],"sourcesContent":["<template>\r\n  <div class=\"comments-section\">\r\n    <h2>Comments</h2>\r\n    <ul v-if=\"comments.length\">\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\">\r\n        <p><strong>{{ comment.user.username }}:</strong> {{ comment.text }}</p>\r\n        <p>Rating: {{ comment.rating }}</p>\r\n      </li>\r\n    </ul>\r\n    <p v-else>No comments available.</p>\r\n    <form @submit.prevent=\"addComment\">\r\n      <h3>Add a Comment</h3>\r\n      <div>\r\n        <label for=\"text\">Comment:</label>\r\n        <textarea v-model=\"text\" id=\"text\" required></textarea>\r\n      </div>\r\n      <div>\r\n        <label for=\"rating\">Rating:</label>\r\n        <select v-model=\"rating\" id=\"rating\" required>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n          <option value=\"4\">4</option>\r\n          <option value=\"5\">5</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: {\r\n    factoryId: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      comments: [],\r\n      text: '',\r\n      rating: 1,\r\n      userId: 1 // Hard-coded user ID for now\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchComments();\r\n  },\r\n  methods: {\r\n    fetchComments() {\r\n      axios.get(`http://localhost:3001/api/comments/factory/${this.factoryId}`)\r\n        .then(response => {\r\n          this.comments = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching comments:', error);\r\n        });\r\n    },\r\n    addComment() {\r\n      const newComment = {\r\n        userId: this.userId,\r\n        factoryId: this.factoryId,\r\n        text: this.text,\r\n        rating: this.rating\r\n      };\r\n      axios.post('http://localhost:3001/api/comments', newComment)\r\n        .then(response => {\r\n          this.comments.push(response.data);\r\n          this.text = '';\r\n          this.rating = 1;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error adding comment:', error);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.comments-section {\r\n  margin: 20px;\r\n}\r\n.comments-section h2,\r\n.comments-section h3 {\r\n  margin-bottom: 10px;\r\n}\r\n.comments-section ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n.comments-section li {\r\n  border-bottom: 1px solid #ccc;\r\n  padding: 10px 0;\r\n}\r\n.comments-section form {\r\n  margin-top: 20px;\r\n}\r\n.comments-section form div {\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":";AAgCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPD,aAAaA,CAAA,EAAG;MACdZ,KAAK,CAACc,GAAG,CAAE,8CAA6C,IAAI,CAACZ,SAAU,EAAC,EACrEa,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACT,QAAO,GAAIS,QAAQ,CAACV,IAAI;MAC/B,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,MAAMC,UAAS,GAAI;QACjBX,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBR,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBM,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,MAAM,EAAE,IAAI,CAACA;MACf,CAAC;MACDT,KAAK,CAACsB,IAAI,CAAC,oCAAoC,EAAED,UAAU,EACxDN,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACT,QAAQ,CAACgB,IAAI,CAACP,QAAQ,CAACV,IAAI,CAAC;QACjC,IAAI,CAACE,IAAG,GAAI,EAAE;QACd,IAAI,CAACC,MAAK,GAAI,CAAC;MACjB,CAAC,EACAQ,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}