{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'ManagerComments',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const comments = ref([]);\n    onMounted(() => {\n      loadComments();\n    });\n    function loadComments() {\n      axios.get('http://localhost:3001/api/comments/factory/all', {\n        headers: {\n          'Authorization': `Bearer ${store.state.token}`\n        }\n      }).then(response => {\n        comments.value = response.data;\n      }).catch(error => {\n        console.error('Error fetching comments:', error);\n      });\n    }\n    function updateCommentStatus(comment, status) {\n      axios.post('http://localhost:3001/api/comments/update-status', {\n        commentId: comment.id,\n        status\n      }, {\n        headers: {\n          'Authorization': `Bearer ${store.state.token}`\n        }\n      }).then(response => {\n        console.log('Comment status updated:', response.data);\n        loadComments();\n      }).catch(error => {\n        console.error('Error updating comment status:', error);\n      });\n    }\n    const __returned__ = {\n      store,\n      comments,\n      loadComments,\n      updateCommentStatus,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","useStore","store","comments","loadComments","get","headers","state","token","then","response","value","data","catch","error","console","updateCommentStatus","comment","status","post","commentId","id","log"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/components/ManagerComments.vue"],"sourcesContent":["<template>\r\n  <div class=\"manager-comments\">\r\n    <h1>Manage Comments</h1>\r\n    <div v-if=\"comments.length\">\r\n      <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment-item\">\r\n        <p><strong>User:</strong> {{ comment.user.username }}</p>\r\n        <p><strong>Factory:</strong> {{ comment.factory.name }}</p>\r\n        <p><strong>Comment:</strong> {{ comment.text }}</p>\r\n        <p><strong>Rating:</strong> {{ comment.rating }}</p>\r\n        <p><strong>Status:</strong> {{ comment.status }}</p>\r\n        <div v-if=\"comment.status === 'pending'\" class=\"comment-actions\">\r\n          <button @click=\"updateCommentStatus(comment, 'approved')\">Approve</button>\r\n          <button @click=\"updateCommentStatus(comment, 'rejected')\">Reject</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <p v-else>No comments found.</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\nconst comments = ref([]);\r\n\r\nonMounted(() => {\r\n  loadComments();\r\n});\r\n\r\nfunction loadComments() {\r\n  axios.get('http://localhost:3001/api/comments/factory/all', {\r\n    headers: {\r\n      'Authorization': `Bearer ${store.state.token}`\r\n    }\r\n  })\r\n    .then(response => {\r\n      comments.value = response.data;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching comments:', error);\r\n    });\r\n}\r\n\r\nfunction updateCommentStatus(comment, status) {\r\n  axios.post('http://localhost:3001/api/comments/update-status', {\r\n    commentId: comment.id,\r\n    status\r\n  }, {\r\n    headers: {\r\n      'Authorization': `Bearer ${store.state.token}`\r\n    }\r\n  })\r\n    .then(response => {\r\n      console.log('Comment status updated:', response.data);\r\n      loadComments();\r\n    })\r\n    .catch(error => {\r\n      console.error('Error updating comment status:', error);\r\n    });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.manager-comments {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.comment-item {\r\n  margin: 20px 0;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.comment-actions {\r\n  margin-top: 10px;\r\n}\r\n\r\n.comment-actions button {\r\n  margin-right: 10px;\r\n  padding: 10px 15px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.comment-actions button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>"],"mappings":"AAqBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAME,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IAExBC,SAAS,CAAC,MAAM;MACdK,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC;IAEF,SAASA,YAAYA,CAAA,EAAG;MACtBJ,KAAK,CAACK,GAAG,CAAC,gDAAgD,EAAE;QAC1DC,OAAO,EAAE;UACP,eAAe,EAAG,UAASJ,KAAK,CAACK,KAAK,CAACC,KAAM;QAC/C;MACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;QAChBP,QAAQ,CAACQ,KAAK,GAAGD,QAAQ,CAACE,IAAI;MAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN;IAEA,SAASE,mBAAmBA,CAACC,OAAO,EAAEC,MAAM,EAAE;MAC5ClB,KAAK,CAACmB,IAAI,CAAC,kDAAkD,EAAE;QAC7DC,SAAS,EAAEH,OAAO,CAACI,EAAE;QACrBH;MACF,CAAC,EAAE;QACDZ,OAAO,EAAE;UACP,eAAe,EAAG,UAASJ,KAAK,CAACK,KAAK,CAACC,KAAM;QAC/C;MACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;QAChBK,OAAO,CAACO,GAAG,CAAC,yBAAyB,EAAEZ,QAAQ,CAACE,IAAI,CAAC;QACrDR,YAAY,CAAC,CAAC;MAChB,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD,CAAC,CAAC;IACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}