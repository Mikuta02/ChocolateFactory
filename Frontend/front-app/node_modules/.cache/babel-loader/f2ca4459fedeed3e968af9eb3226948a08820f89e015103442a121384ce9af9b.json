{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  __name: 'EditAmount',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const amount = ref(0);\n    const successMessage = ref('');\n    const errorMessage = ref('');\n    onMounted(() => {\n      loadChocolate();\n    });\n    function loadChocolate() {\n      const chocolateId = route.params.id;\n      axios.get(`http://localhost:3001/api/chocolates/${chocolateId}`).then(response => {\n        amount.value = response.data.amount;\n      }).catch(error => {\n        console.error('Error fetching chocolate details:', error);\n      });\n    }\n    function updateAmount() {\n      const chocolateId = route.params.id;\n      axios.put(`http://localhost:3001/api/chocolates/${chocolateId}`, {\n        amount: amount.value\n      }).then(() => {\n        successMessage.value = 'Amount updated successfully';\n        errorMessage.value = ''; // Clear any previous errors\n        // Optionally, reset the form or navigate to another route after successful update\n        // router.push({ name: 'FactoryDetailed', params: { id: route.params.factoryId } });\n      }).catch(error => {\n        errorMessage.value = 'Failed to update amount'; // Display error message\n        console.error('Error updating amount:', error);\n      });\n    }\n    const __returned__ = {\n      route,\n      router,\n      amount,\n      successMessage,\n      errorMessage,\n      loadChocolate,\n      updateAmount,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","axios","route","router","amount","successMessage","errorMessage","loadChocolate","chocolateId","params","id","get","then","response","value","data","catch","error","console","updateAmount","put"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/components/EditAmount.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-amount\">\r\n    <h1>Edit Chocolate Amount</h1>\r\n    <form @submit.prevent=\"updateAmount\">\r\n      <div>\r\n        <label for=\"amount\">Amount:</label>\r\n        <input type=\"number\" id=\"amount\" v-model.number=\"amount\" required min=\"1\" />\r\n        <!-- Dodajte min=\"1\" kako bi se obezbedilo da je amount pozitivan broj -->\r\n      </div>\r\n      <button type=\"submit\">Update Amount</button>\r\n    </form>\r\n    <!-- Prikaz korisničkih poruka o uspehu ili grešci -->\r\n    <div v-if=\"successMessage\" class=\"success-message\">{{ successMessage }}</div>\r\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst amount = ref(0);\r\nconst successMessage = ref('');\r\nconst errorMessage = ref('');\r\n\r\nonMounted(() => {\r\n  loadChocolate();\r\n});\r\n\r\nfunction loadChocolate() {\r\n  const chocolateId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/chocolates/${chocolateId}`)\r\n    .then(response => {\r\n      amount.value = response.data.amount;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching chocolate details:', error);\r\n    });\r\n}\r\n\r\nfunction updateAmount() {\r\n  const chocolateId = route.params.id;\r\n  axios.put(`http://localhost:3001/api/chocolates/${chocolateId}`, { amount: amount.value })\r\n    .then(() => {\r\n      successMessage.value = 'Amount updated successfully';\r\n      errorMessage.value = ''; // Clear any previous errors\r\n      // Optionally, reset the form or navigate to another route after successful update\r\n      // router.push({ name: 'FactoryDetailed', params: { id: route.params.factoryId } });\r\n    })\r\n    .catch(error => {\r\n      errorMessage.value = 'Failed to update amount'; // Display error message\r\n      console.error('Error updating amount:', error);\r\n    });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.edit-amount {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.success-message, .error-message {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.success-message {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n}\r\n\r\n.error-message {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n}\r\n</style>\r\n"],"mappings":"AAkBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,MAAM,GAAGP,GAAG,CAAC,CAAC,CAAC;IACrB,MAAMQ,cAAc,GAAGR,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMS,YAAY,GAAGT,GAAG,CAAC,EAAE,CAAC;IAE5BC,SAAS,CAAC,MAAM;MACdS,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,SAASA,aAAaA,CAAA,EAAG;MACvB,MAAMC,WAAW,GAAGN,KAAK,CAACO,MAAM,CAACC,EAAE;MACnCT,KAAK,CAACU,GAAG,CAAE,wCAAuCH,WAAY,EAAC,CAAC,CAC7DI,IAAI,CAACC,QAAQ,IAAI;QAChBT,MAAM,CAACU,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACX,MAAM;MACrC,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,CAAC;IACN;IAEA,SAASE,YAAYA,CAAA,EAAG;MACtB,MAAMX,WAAW,GAAGN,KAAK,CAACO,MAAM,CAACC,EAAE;MACnCT,KAAK,CAACmB,GAAG,CAAE,wCAAuCZ,WAAY,EAAC,EAAE;QAAEJ,MAAM,EAAEA,MAAM,CAACU;MAAM,CAAC,CAAC,CACvFF,IAAI,CAAC,MAAM;QACVP,cAAc,CAACS,KAAK,GAAG,6BAA6B;QACpDR,YAAY,CAACQ,KAAK,GAAG,EAAE,CAAC,CAAC;QACzB;QACA;MACF,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;QACdX,YAAY,CAACQ,KAAK,GAAG,yBAAyB,CAAC,CAAC;QAChDI,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}