{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-530ad160\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"cart\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Your Cart\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"src\", \"alt\"];\nconst _hoisted_5 = {\n  class: \"cart-details\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"quantity\"\n}, \"Quantity:\", -1 /* HOISTED */));\nconst _hoisted_7 = [\"onUpdate:modelValue\", \"onChange\", \"max\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $setup.cart.chocolates.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.cart.chocolates, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.chocolate.id,\n      class: \"cart-item\"\n    }, [_createElementVNode(\"img\", {\n      src: $setup.getChocolatePictureUrl(item.chocolate.picturePath),\n      alt: item.chocolate.name,\n      class: \"chocolate-picture\"\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h3\", null, _toDisplayString(item.chocolate.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Type: \" + _toDisplayString(item.chocolate.chocolateType), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Variety: \" + _toDisplayString(item.chocolate.chocolateVariety), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Price: \" + _toDisplayString(item.chocolate.price), 1 /* TEXT */), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.quantity = $event,\n      onChange: $event => $setup.updateQuantity(item),\n      min: \"1\",\n      max: item.chocolate.amount\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), [[_vModelText, item.quantity, void 0, {\n      number: true\n    }]])]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.removeFromCart(item.chocolate.id)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_8)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", null, \"Total Price: \" + _toDisplayString($setup.cart.totalPrice), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.clearCart\n  }, \"Clear Cart\")])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"Your cart is empty.\"))]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","for","_createElementBlock","_hoisted_1","_hoisted_2","$setup","cart","chocolates","length","_hoisted_3","_Fragment","_renderList","item","chocolate","id","src","getChocolatePictureUrl","picturePath","alt","name","_hoisted_4","_hoisted_5","_toDisplayString","chocolateType","chocolateVariety","price","_hoisted_6","type","$event","quantity","onChange","updateQuantity","min","max","amount","_hoisted_7","number","onClick","removeFromCart","_hoisted_8","totalPrice","clearCart","_hoisted_9"],"sources":["C:\\Programiranje\\veb\\projekat\\chocolate-factoryapp\\Frontend\\front-app\\src\\components\\Cart.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart\">\r\n    <h1>Your Cart</h1>\r\n    <div v-if=\"cart.chocolates.length > 0\">\r\n      <ul>\r\n        <li v-for=\"item in cart.chocolates\" :key=\"item.chocolate.id\" class=\"cart-item\">\r\n          <img :src=\"getChocolatePictureUrl(item.chocolate.picturePath)\" :alt=\"item.chocolate.name\" class=\"chocolate-picture\" />\r\n          <div class=\"cart-details\">\r\n            <h3>{{ item.chocolate.name }}</h3>\r\n            <p>Type: {{ item.chocolate.chocolateType }}</p>\r\n            <p>Variety: {{ item.chocolate.chocolateVariety }}</p>\r\n            <p>Price: {{ item.chocolate.price }}</p>\r\n            <div>\r\n              <label for=\"quantity\">Quantity:</label>\r\n              <input type=\"number\" v-model.number=\"item.quantity\" @change=\"updateQuantity(item)\" min=\"1\" :max=\"item.chocolate.amount\" />\r\n            </div>\r\n            <button @click=\"removeFromCart(item.chocolate.id)\">Remove</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <p>Total Price: {{ cart.totalPrice }}</p>\r\n      <button @click=\"clearCart\">Clear Cart</button>\r\n    </div>\r\n    <p v-else>Your cart is empty.</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\nconst cart = ref({\r\n  chocolates: [],\r\n  totalPrice: 0\r\n});\r\n\r\nonMounted(() => {\r\n  loadCart();\r\n});\r\n\r\nfunction loadCart() {\r\n  const userId = store.getters.userId;\r\n  axios.get(`http://localhost:3001/api/cart/${userId}`)\r\n    .then(response => {\r\n      cart.value = response.data;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching cart:', error);\r\n    });\r\n}\r\n\r\nfunction removeFromCart(chocolateId) {\r\n  const userId = store.getters.userId;\r\n  axios.post('http://localhost:3001/api/cart/remove', { userId, chocolateId })\r\n    .then(response => {\r\n      cart.value = response.data;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error removing chocolate from cart:', error);\r\n    });\r\n}\r\n\r\nfunction clearCart() {\r\n  const userId = store.getters.userId;\r\n  axios.post(`http://localhost:3001/api/cart/clear/${userId}`)\r\n    .then(response => {\r\n      cart.value = response.data;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error clearing cart:', error);\r\n    });\r\n}\r\n\r\nfunction updateQuantity(item) {\r\n  const userId = store.getters.userId;\r\n  const quantity = item.quantity;\r\n  if (quantity > item.chocolate.amount) {\r\n    item.quantity = item.chocolate.amount;\r\n    alert(`Quantity exceeds available stock. Maximum available: ${item.chocolate.amount}`);\r\n    return;\r\n  }\r\n  axios.post('http://localhost:3001/api/cart/update-quantity', { userId, chocolateId: item.chocolate.id, quantity })\r\n    .then(response => {\r\n      cart.value = response.data;\r\n      alert('Quantity updated successfully');\r\n    })\r\n    .catch(error => {\r\n      console.error('Error updating quantity:', error);\r\n      if (error.response && error.response.data && error.response.data.error) {\r\n        alert(error.response.data.error);\r\n      } else {\r\n        alert('Failed to update quantity');\r\n      }\r\n    });\r\n}\r\n\r\nfunction getChocolatePictureUrl(path) {\r\n  return `http://localhost:3001/images/${path}`;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.cart {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n.cart-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 20px 0;\r\n  border: 1px solid #000;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  position: relative;\r\n}\r\n.chocolate-picture {\r\n  width: 100px;\r\n  height: auto;\r\n  margin-right: 20px;\r\n}\r\n.cart-details {\r\n  flex-grow: 1;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAM;gEACfC,mBAAA,CAAkB,YAAd,WAAS;;EAFjBC,GAAA;AAAA;mBAAA;;EAOeF,KAAK,EAAC;AAAc;gEAMrBC,mBAAA,CAAuC;EAAhCE,GAAG,EAAC;AAAU,GAAC,WAAS;mBAb7C;mBAAA;;EAAAD,GAAA;AAAA;;uBACEE,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,UAAkB,EACPC,MAAA,CAAAC,IAAI,CAACC,UAAU,CAACC,MAAM,Q,cAAjCN,mBAAA,CAmBM,OAtBVO,UAAA,GAIMV,mBAAA,CAeK,c,kBAdHG,mBAAA,CAaKQ,SAAA,QAlBbC,WAAA,CAK2BN,MAAA,CAAAC,IAAI,CAACC,UAAU,EAAvBK,IAAI;yBAAfV,mBAAA,CAaK;MAbgCF,GAAG,EAAEY,IAAI,CAACC,SAAS,CAACC,EAAE;MAAEhB,KAAK,EAAC;QACjEC,mBAAA,CAAsH;MAAhHgB,GAAG,EAAEV,MAAA,CAAAW,sBAAsB,CAACJ,IAAI,CAACC,SAAS,CAACI,WAAW;MAAIC,GAAG,EAAEN,IAAI,CAACC,SAAS,CAACM,IAAI;MAAErB,KAAK,EAAC;4BAN1GsB,UAAA,GAOUrB,mBAAA,CAUM,OAVNsB,UAUM,GATJtB,mBAAA,CAAkC,YAAAuB,gBAAA,CAA3BV,IAAI,CAACC,SAAS,CAACM,IAAI,kBAC1BpB,mBAAA,CAA+C,WAA5C,QAAM,GAAAuB,gBAAA,CAAGV,IAAI,CAACC,SAAS,CAACU,aAAa,kBACxCxB,mBAAA,CAAqD,WAAlD,WAAS,GAAAuB,gBAAA,CAAGV,IAAI,CAACC,SAAS,CAACW,gBAAgB,kBAC9CzB,mBAAA,CAAwC,WAArC,SAAO,GAAAuB,gBAAA,CAAGV,IAAI,CAACC,SAAS,CAACY,KAAK,kBACjC1B,mBAAA,CAGM,cAFJ2B,UAAuC,E,gBACvC3B,mBAAA,CAA0H;MAAnH4B,IAAI,EAAC,QAAQ;MAdlC,uBAAAC,MAAA,IAcmDhB,IAAI,CAACiB,QAAQ,GAAAD,MAAA;MAAGE,QAAM,EAAAF,MAAA,IAAEvB,MAAA,CAAA0B,cAAc,CAACnB,IAAI;MAAGoB,GAAG,EAAC,GAAG;MAAEC,GAAG,EAAErB,IAAI,CAACC,SAAS,CAACqB;6CAd9HC,UAAA,I,cAcmDvB,IAAI,CAACiB,QAAQ,E;MAdhEO,MAAA,EAcmC;IAA8B,E,MAErDrC,mBAAA,CAAkE;MAAzDsC,OAAK,EAAAT,MAAA,IAAEvB,MAAA,CAAAiC,cAAc,CAAC1B,IAAI,CAACC,SAAS,CAACC,EAAE;OAAG,QAAM,iBAhBrEyB,UAAA,E;oCAoBMxC,mBAAA,CAAyC,WAAtC,eAAa,GAAAuB,gBAAA,CAAGjB,MAAA,CAAAC,IAAI,CAACkC,UAAU,kBAClCzC,mBAAA,CAA8C;IAArCsC,OAAK,EAAEhC,MAAA,CAAAoC;EAAS,GAAE,YAAU,E,oBAEvCvC,mBAAA,CAAiC,KAvBrCwC,UAAA,EAuBc,qBAAmB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}