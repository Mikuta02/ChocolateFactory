{"ast":null,"code":"/**\r\n * @module ol/console\r\n */\n\n/**\r\n * @typedef {'info'|'warn'|'error'|'none'} Level\r\n */\n\n/**\r\n * @type {Object<Level, number>}\r\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4\n};\n\n/**\r\n * @type {number}\r\n */\nlet level = levels.info;\n\n/**\r\n * Set the logging level.  By default, the level is set to 'info' and all\r\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\r\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\r\n *\r\n * @param {Level} l The new level.\r\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\r\n * @param  {...any} args Arguments to log\r\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\r\n * @param  {...any} args Arguments to log\r\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\r\n * @param  {...any} args Arguments to log\r\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}","map":{"version":3,"names":["levels","info","warn","error","none","level","setLevel","l","log","args","console"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/node_modules/ol/console.js"],"sourcesContent":["/**\r\n * @module ol/console\r\n */\r\n\r\n/**\r\n * @typedef {'info'|'warn'|'error'|'none'} Level\r\n */\r\n\r\n/**\r\n * @type {Object<Level, number>}\r\n */\r\nconst levels = {\r\n  info: 1,\r\n  warn: 2,\r\n  error: 3,\r\n  none: 4,\r\n};\r\n\r\n/**\r\n * @type {number}\r\n */\r\nlet level = levels.info;\r\n\r\n/**\r\n * Set the logging level.  By default, the level is set to 'info' and all\r\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\r\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\r\n *\r\n * @param {Level} l The new level.\r\n */\r\nexport function setLevel(l) {\r\n  level = levels[l];\r\n}\r\n\r\n/**\r\n * @param  {...any} args Arguments to log\r\n */\r\nexport function log(...args) {\r\n  if (level > levels.info) {\r\n    return;\r\n  }\r\n  console.log(...args); // eslint-disable-line no-console\r\n}\r\n\r\n/**\r\n * @param  {...any} args Arguments to log\r\n */\r\nexport function warn(...args) {\r\n  if (level > levels.warn) {\r\n    return;\r\n  }\r\n  console.warn(...args); // eslint-disable-line no-console\r\n}\r\n\r\n/**\r\n * @param  {...any} args Arguments to log\r\n */\r\nexport function error(...args) {\r\n  if (level > levels.error) {\r\n    return;\r\n  }\r\n  console.error(...args); // eslint-disable-line no-console\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,MAAM,GAAG;EACbC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE;AACR,CAAC;;AAED;AACA;AACA;AACA,IAAIC,KAAK,GAAGL,MAAM,CAACC,IAAI;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,QAAQA,CAACC,CAAC,EAAE;EAC1BF,KAAK,GAAGL,MAAM,CAACO,CAAC,CAAC;AACnB;;AAEA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAAC,GAAGC,IAAI,EAAE;EAC3B,IAAIJ,KAAK,GAAGL,MAAM,CAACC,IAAI,EAAE;IACvB;EACF;EACAS,OAAO,CAACF,GAAG,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC;AACxB;;AAEA;AACA;AACA;AACA,OAAO,SAASP,IAAIA,CAAC,GAAGO,IAAI,EAAE;EAC5B,IAAIJ,KAAK,GAAGL,MAAM,CAACE,IAAI,EAAE;IACvB;EACF;EACAQ,OAAO,CAACR,IAAI,CAAC,GAAGO,IAAI,CAAC,CAAC,CAAC;AACzB;;AAEA;AACA;AACA;AACA,OAAO,SAASN,KAAKA,CAAC,GAAGM,IAAI,EAAE;EAC7B,IAAIJ,KAAK,GAAGL,MAAM,CAACG,KAAK,EAAE;IACxB;EACF;EACAO,OAAO,CAACP,KAAK,CAAC,GAAGM,IAAI,CAAC,CAAC,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}