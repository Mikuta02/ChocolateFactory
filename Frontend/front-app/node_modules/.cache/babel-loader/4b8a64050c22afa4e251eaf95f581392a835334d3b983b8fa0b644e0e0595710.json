{"ast":null,"code":"/**\r\n * @module ol/render/canvas/Immediate\r\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { toFixed } from '../../math.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n\n/**\r\n * @classdesc\r\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\r\n * direct rendering of features and geometries to an HTML5 Canvas context.\r\n * Instances of this class are created internally by the library and\r\n * provided to application code as vectorContext member of the\r\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\r\n * render events emitted by layers and maps.\r\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\r\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\r\n   */\n  constructor(context, pixelRatio, extent, transform, viewRotation, squaredTolerance, userTransform) {\n    super();\n\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\n    this.context_ = context;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\n    this.extent_ = extent;\n\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\n    this.transform_ = transform;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.transformRotation_ = transform ? toFixed(Math.atan2(transform[1], transform[0]), 10) : 0;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\r\n     * @private\r\n     * @type {import(\"../../proj.js\").TransformFunction}\r\n     */\n    this.userTransform_ = userTransform;\n\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\n    this.contextFillState_ = null;\n\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\n    this.contextStrokeState_ = null;\n\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\n    this.contextTextState_ = null;\n\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\n    this.fillState_ = null;\n\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\n    this.strokeState_ = null;\n\n    /**\r\n     * @private\r\n     * @type {import('../../DataTile.js').ImageLike}\r\n     */\n    this.image_ = null;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.imageHeight_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.imageOpacity_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.imageOriginX_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.imageOriginY_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.imageRotation_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size}\r\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.imageWidth_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\n    this.text_ = '';\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.textOffsetX_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.textOffsetY_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\n    this.textRotateWithView_ = false;\n\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\n    this.textRotation_ = 0;\n\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size}\r\n     */\n    this.textScale_ = [0, 0];\n\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\n    this.textFillState_ = null;\n\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\n    this.textStrokeState_ = null;\n\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\n    this.textState_ = null;\n\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_[0] != 1 || this.imageScale_[1] != 1) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n        context.restore();\n      } else {\n        context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_[0] != 1 || this.textScale_[1] != 1) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} close Close.\r\n   * @private\r\n   * @return {number} end End.\r\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  }\n\n  /**\r\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\r\n   * the current fill and stroke styles.\r\n   *\r\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\r\n   * @api\r\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\r\n   * Set the rendering style.  Note that since this is an immediate rendering API,\r\n   * any `zIndex` on the provided style will be ignored.\r\n   *\r\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\r\n   * @api\r\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\r\n   * Render a geometry into the canvas.  Call\r\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\r\n   *\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\r\n   * @api\r\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint( /** @type {import(\"../../geom/Point.js\").default} */geometry);\n        break;\n      case 'LineString':\n        this.drawLineString( /** @type {import(\"../../geom/LineString.js\").default} */geometry);\n        break;\n      case 'Polygon':\n        this.drawPolygon( /** @type {import(\"../../geom/Polygon.js\").default} */geometry);\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint( /** @type {import(\"../../geom/MultiPoint.js\").default} */geometry);\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString( /** @type {import(\"../../geom/MultiLineString.js\").default} */\n        geometry);\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon( /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n        geometry);\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection( /** @type {import(\"../../geom/GeometryCollection.js\").default} */\n        geometry);\n        break;\n      case 'Circle':\n        this.drawCircle( /** @type {import(\"../../geom/Circle.js\").default} */geometry);\n        break;\n      default:\n    }\n  }\n\n  /**\r\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\r\n   * style will be ignored - features are rendered immediately in the order that\r\n   * this method is called.  If you need `zIndex` support, you should be using an\r\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\r\n   *\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../../style/Style.js\").default} style Style.\r\n   * @api\r\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\r\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\r\n   * uses the current styles appropriate for each geometry in the collection.\r\n   *\r\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\r\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\r\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\r\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\r\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\r\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\r\n   * Render a LineString into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\r\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\r\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\r\n   * and uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\r\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */geometry.getEnds();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\r\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\r\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\r\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n      geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\r\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\r\n   * @private\r\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\r\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\r\n   * @private\r\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\r\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\r\n   * @private\r\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign ? textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\r\n   * Set the fill and stroke style for subsequent draw operations.  To clear\r\n   * either fill or stroke styles, pass null for the appropriate parameter.\r\n   *\r\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash;\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap,\n        lineDash: this.pixelRatio_ === 1 ? lineDash : lineDash.map(n => n * this.pixelRatio_),\n        lineDashOffset: (strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin: strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: (strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth) * this.pixelRatio_,\n        miterLimit: strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  }\n\n  /**\r\n   * Set the image style for subsequent draw operations.  Pass null to remove\r\n   * the image style.\r\n   *\r\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\r\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [imageScale[0] * this.pixelRatio_ / imagePixelRatio, imageScale[1] * this.pixelRatio_ / imagePixelRatio];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\r\n   * Set the text style for subsequent draw operations.  Pass null to\r\n   * remove the text style.\r\n   *\r\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\r\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle)\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ? textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ? textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ? textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ? textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ? textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ? textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ? textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? Array.isArray(textText) ? textText.reduce((acc, t, i) => acc += i % 2 ? ' ' : t, '') : textText : '';\n      this.textOffsetX_ = textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ = textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [this.pixelRatio_ * textScale[0], this.pixelRatio_ * textScale[1]];\n    }\n  }\n}\nexport default CanvasImmediateRenderer;","map":{"version":3,"names":["VectorContext","asColorLike","compose","composeTransform","create","createTransform","defaultFillStyle","defaultFont","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","equals","intersects","toFixed","transform2D","transformGeom2D","CanvasImmediateRenderer","constructor","context","pixelRatio","extent","transform","viewRotation","squaredTolerance","userTransform","context_","pixelRatio_","extent_","transform_","transformRotation_","Math","atan2","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","flatCoordinates","offset","end","stride","pixelCoordinates","localTransform","alpha","globalAlpha","rotation","i","ii","length","x","y","centerX","centerY","save","apply","translate","scale","drawImage","restore","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","rotate","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","ends","drawCircle","geometry","simplifyTransformed","getExtent","dx","dy","radius","sqrt","beginPath","arc","PI","fill","stroke","getCenter","setStyle","style","setFillStrokeStyle","getFill","getStroke","setImageStyle","getImage","setTextStyle","getText","setTransform","drawGeometry","type","getType","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawFeature","feature","getGeometryFunction","geometries","getGeometriesArray","getFlatCoordinates","getStride","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","getFlatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","fillStyle","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","strokeStyle","textState","contextTextState","textAlign","font","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","undefined","map","n","imageStyle","imageSize","getSize","imagePixelRatio","getPixelRatio","imageAnchor","getAnchor","imageOrigin","getOrigin","getOpacity","getRotateWithView","getRotation","imageScale","getScaleArray","textStyle","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Array","isArray","reduce","acc","t"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/node_modules/ol/render/canvas/Immediate.js"],"sourcesContent":["/**\r\n * @module ol/render/canvas/Immediate\r\n */\r\n// FIXME test, especially polygons with holes and multipolygons\r\n// FIXME need to handle large thick features (where pixel size matters)\r\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\r\n\r\nimport VectorContext from '../VectorContext.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n} from '../../transform.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultFont,\r\n  defaultLineCap,\r\n  defaultLineDash,\r\n  defaultLineDashOffset,\r\n  defaultLineJoin,\r\n  defaultLineWidth,\r\n  defaultMiterLimit,\r\n  defaultStrokeStyle,\r\n  defaultTextAlign,\r\n  defaultTextBaseline,\r\n} from '../canvas.js';\r\nimport {equals} from '../../array.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {toFixed} from '../../math.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\r\n\r\n/**\r\n * @classdesc\r\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\r\n * direct rendering of features and geometries to an HTML5 Canvas context.\r\n * Instances of this class are created internally by the library and\r\n * provided to application code as vectorContext member of the\r\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\r\n * render events emitted by layers and maps.\r\n */\r\nclass CanvasImmediateRenderer extends VectorContext {\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\r\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\r\n   */\r\n  constructor(\r\n    context,\r\n    pixelRatio,\r\n    extent,\r\n    transform,\r\n    viewRotation,\r\n    squaredTolerance,\r\n    userTransform,\r\n  ) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context_ = context;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.extent_ = extent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.transform_ = transform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.transformRotation_ = transform\r\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\r\n      : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = viewRotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.squaredTolerance_ = squaredTolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../proj.js\").TransformFunction}\r\n     */\r\n    this.userTransform_ = userTransform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.contextFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.contextStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.contextTextState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.fillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.strokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import('../../DataTile.js').ImageLike}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageHeight_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOpacity_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.imageRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size}\r\n     */\r\n    this.imageScale_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageWidth_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.textRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size}\r\n     */\r\n    this.textScale_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.textFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.textStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.textState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.tmpLocalTransform_ = createTransform();\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  drawImages_(flatCoordinates, offset, end, stride) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      this.transform_,\r\n      this.pixelCoordinates_,\r\n    );\r\n    const context = this.context_;\r\n    const localTransform = this.tmpLocalTransform_;\r\n    const alpha = context.globalAlpha;\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha * this.imageOpacity_;\r\n    }\r\n    let rotation = this.imageRotation_;\r\n    if (this.transformRotation_ === 0) {\r\n      rotation -= this.viewRotation_;\r\n    }\r\n    if (this.imageRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\r\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\r\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\r\n      if (\r\n        rotation !== 0 ||\r\n        this.imageScale_[0] != 1 ||\r\n        this.imageScale_[1] != 1\r\n      ) {\r\n        const centerX = x + this.imageAnchorX_;\r\n        const centerY = y + this.imageAnchorY_;\r\n        composeTransform(\r\n          localTransform,\r\n          centerX,\r\n          centerY,\r\n          1,\r\n          1,\r\n          rotation,\r\n          -centerX,\r\n          -centerY,\r\n        );\r\n        context.save();\r\n        context.transform.apply(context, localTransform);\r\n        context.translate(centerX, centerY);\r\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\r\n        context.drawImage(\r\n          this.image_,\r\n          this.imageOriginX_,\r\n          this.imageOriginY_,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n          -this.imageAnchorX_,\r\n          -this.imageAnchorY_,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n        );\r\n        context.restore();\r\n      } else {\r\n        context.drawImage(\r\n          this.image_,\r\n          this.imageOriginX_,\r\n          this.imageOriginY_,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n          x,\r\n          y,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n        );\r\n      }\r\n    }\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  drawText_(flatCoordinates, offset, end, stride) {\r\n    if (!this.textState_ || this.text_ === '') {\r\n      return;\r\n    }\r\n    if (this.textFillState_) {\r\n      this.setContextFillState_(this.textFillState_);\r\n    }\r\n    if (this.textStrokeState_) {\r\n      this.setContextStrokeState_(this.textStrokeState_);\r\n    }\r\n    this.setContextTextState_(this.textState_);\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      this.transform_,\r\n      this.pixelCoordinates_,\r\n    );\r\n    const context = this.context_;\r\n    let rotation = this.textRotation_;\r\n    if (this.transformRotation_ === 0) {\r\n      rotation -= this.viewRotation_;\r\n    }\r\n    if (this.textRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (; offset < end; offset += stride) {\r\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\r\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\r\n      if (\r\n        rotation !== 0 ||\r\n        this.textScale_[0] != 1 ||\r\n        this.textScale_[1] != 1\r\n      ) {\r\n        context.save();\r\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\r\n        context.rotate(rotation);\r\n        context.translate(this.textOffsetX_, this.textOffsetY_);\r\n        context.scale(this.textScale_[0], this.textScale_[1]);\r\n        if (this.textStrokeState_) {\r\n          context.strokeText(this.text_, 0, 0);\r\n        }\r\n        if (this.textFillState_) {\r\n          context.fillText(this.text_, 0, 0);\r\n        }\r\n        context.restore();\r\n      } else {\r\n        if (this.textStrokeState_) {\r\n          context.strokeText(this.text_, x, y);\r\n        }\r\n        if (this.textFillState_) {\r\n          context.fillText(this.text_, x, y);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} close Close.\r\n   * @private\r\n   * @return {number} end End.\r\n   */\r\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\r\n    const context = this.context_;\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      this.transform_,\r\n      this.pixelCoordinates_,\r\n    );\r\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\r\n    let length = pixelCoordinates.length;\r\n    if (close) {\r\n      length -= 2;\r\n    }\r\n    for (let i = 2; i < length; i += 2) {\r\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\r\n    }\r\n    if (close) {\r\n      context.closePath();\r\n    }\r\n    return end;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\r\n  drawRings_(flatCoordinates, offset, ends, stride) {\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      offset = this.moveToLineTo_(\r\n        flatCoordinates,\r\n        offset,\r\n        ends[i],\r\n        stride,\r\n        true,\r\n      );\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\r\n   * the current fill and stroke styles.\r\n   *\r\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\r\n   * @api\r\n   */\r\n  drawCircle(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.fillState_ || this.strokeState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const pixelCoordinates = transformGeom2D(\r\n        geometry,\r\n        this.transform_,\r\n        this.pixelCoordinates_,\r\n      );\r\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\r\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\r\n      const radius = Math.sqrt(dx * dx + dy * dy);\r\n      const context = this.context_;\r\n      context.beginPath();\r\n      context.arc(\r\n        pixelCoordinates[0],\r\n        pixelCoordinates[1],\r\n        radius,\r\n        0,\r\n        2 * Math.PI,\r\n      );\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the rendering style.  Note that since this is an immediate rendering API,\r\n   * any `zIndex` on the provided style will be ignored.\r\n   *\r\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\r\n   * @api\r\n   */\r\n  setStyle(style) {\r\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\r\n    this.setImageStyle(style.getImage());\r\n    this.setTextStyle(style.getText());\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\r\n  setTransform(transform) {\r\n    this.transform_ = transform;\r\n  }\r\n\r\n  /**\r\n   * Render a geometry into the canvas.  Call\r\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\r\n   *\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\r\n   * @api\r\n   */\r\n  drawGeometry(geometry) {\r\n    const type = geometry.getType();\r\n    switch (type) {\r\n      case 'Point':\r\n        this.drawPoint(\r\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      case 'LineString':\r\n        this.drawLineString(\r\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      case 'Polygon':\r\n        this.drawPolygon(\r\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      case 'MultiPoint':\r\n        this.drawMultiPoint(\r\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      case 'MultiLineString':\r\n        this.drawMultiLineString(\r\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n            geometry\r\n          ),\r\n        );\r\n        break;\r\n      case 'MultiPolygon':\r\n        this.drawMultiPolygon(\r\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n            geometry\r\n          ),\r\n        );\r\n        break;\r\n      case 'GeometryCollection':\r\n        this.drawGeometryCollection(\r\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\r\n            geometry\r\n          ),\r\n        );\r\n        break;\r\n      case 'Circle':\r\n        this.drawCircle(\r\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\r\n        );\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\r\n   * style will be ignored - features are rendered immediately in the order that\r\n   * this method is called.  If you need `zIndex` support, you should be using an\r\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\r\n   *\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../../style/Style.js\").default} style Style.\r\n   * @api\r\n   */\r\n  drawFeature(feature, style) {\r\n    const geometry = style.getGeometryFunction()(feature);\r\n    if (!geometry) {\r\n      return;\r\n    }\r\n    this.setStyle(style);\r\n    this.drawGeometry(geometry);\r\n  }\r\n\r\n  /**\r\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\r\n   * uses the current styles appropriate for each geometry in the collection.\r\n   *\r\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\r\n   */\r\n  drawGeometryCollection(geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      this.drawGeometry(geometries[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\r\n   */\r\n  drawPoint(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    const flatCoordinates = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\r\n   */\r\n  drawMultiPoint(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    const flatCoordinates = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a LineString into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\r\n   */\r\n  drawLineString(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getFlatCoordinates();\r\n      context.beginPath();\r\n      this.moveToLineTo_(\r\n        flatCoordinates,\r\n        0,\r\n        flatCoordinates.length,\r\n        geometry.getStride(),\r\n        false,\r\n      );\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatMidpoint = geometry.getFlatMidpoint();\r\n      this.drawText_(flatMidpoint, 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\r\n   * and uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\r\n   */\r\n  drawMultiLineString(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry =\r\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n          geometry.simplifyTransformed(\r\n            this.squaredTolerance_,\r\n            this.userTransform_,\r\n          )\r\n        );\r\n    }\r\n    const geometryExtent = geometry.getExtent();\r\n    if (!intersects(this.extent_, geometryExtent)) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getFlatCoordinates();\r\n      let offset = 0;\r\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\r\n      const stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        offset = this.moveToLineTo_(\r\n          flatCoordinates,\r\n          offset,\r\n          ends[i],\r\n          stride,\r\n          false,\r\n        );\r\n      }\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatMidpoints = geometry.getFlatMidpoints();\r\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\r\n   */\r\n  drawPolygon(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const context = this.context_;\r\n      context.beginPath();\r\n      this.drawRings_(\r\n        geometry.getOrientedFlatCoordinates(),\r\n        0,\r\n        /** @type {Array<number>} */ (geometry.getEnds()),\r\n        geometry.getStride(),\r\n      );\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\r\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n   */\r\n  drawMultiPolygon(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_,\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n      let offset = 0;\r\n      const endss = geometry.getEndss();\r\n      const stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n        const ends = endss[i];\r\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\r\n      }\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\r\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\r\n   * @private\r\n   */\r\n  setContextFillState_(fillState) {\r\n    const context = this.context_;\r\n    const contextFillState = this.contextFillState_;\r\n    if (!contextFillState) {\r\n      context.fillStyle = fillState.fillStyle;\r\n      this.contextFillState_ = {\r\n        fillStyle: fillState.fillStyle,\r\n      };\r\n    } else {\r\n      if (contextFillState.fillStyle != fillState.fillStyle) {\r\n        contextFillState.fillStyle = fillState.fillStyle;\r\n        context.fillStyle = fillState.fillStyle;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\r\n   * @private\r\n   */\r\n  setContextStrokeState_(strokeState) {\r\n    const context = this.context_;\r\n    const contextStrokeState = this.contextStrokeState_;\r\n    if (!contextStrokeState) {\r\n      context.lineCap = strokeState.lineCap;\r\n      context.setLineDash(strokeState.lineDash);\r\n      context.lineDashOffset = strokeState.lineDashOffset;\r\n      context.lineJoin = strokeState.lineJoin;\r\n      context.lineWidth = strokeState.lineWidth;\r\n      context.miterLimit = strokeState.miterLimit;\r\n      context.strokeStyle = strokeState.strokeStyle;\r\n      this.contextStrokeState_ = {\r\n        lineCap: strokeState.lineCap,\r\n        lineDash: strokeState.lineDash,\r\n        lineDashOffset: strokeState.lineDashOffset,\r\n        lineJoin: strokeState.lineJoin,\r\n        lineWidth: strokeState.lineWidth,\r\n        miterLimit: strokeState.miterLimit,\r\n        strokeStyle: strokeState.strokeStyle,\r\n      };\r\n    } else {\r\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\r\n        contextStrokeState.lineCap = strokeState.lineCap;\r\n        context.lineCap = strokeState.lineCap;\r\n      }\r\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\r\n        context.setLineDash(\r\n          (contextStrokeState.lineDash = strokeState.lineDash),\r\n        );\r\n      }\r\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\r\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\r\n        context.lineDashOffset = strokeState.lineDashOffset;\r\n      }\r\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\r\n        contextStrokeState.lineJoin = strokeState.lineJoin;\r\n        context.lineJoin = strokeState.lineJoin;\r\n      }\r\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\r\n        contextStrokeState.lineWidth = strokeState.lineWidth;\r\n        context.lineWidth = strokeState.lineWidth;\r\n      }\r\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\r\n        contextStrokeState.miterLimit = strokeState.miterLimit;\r\n        context.miterLimit = strokeState.miterLimit;\r\n      }\r\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\r\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\r\n        context.strokeStyle = strokeState.strokeStyle;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\r\n   * @private\r\n   */\r\n  setContextTextState_(textState) {\r\n    const context = this.context_;\r\n    const contextTextState = this.contextTextState_;\r\n    const textAlign = textState.textAlign\r\n      ? textState.textAlign\r\n      : defaultTextAlign;\r\n    if (!contextTextState) {\r\n      context.font = textState.font;\r\n      context.textAlign = textAlign;\r\n      context.textBaseline = textState.textBaseline;\r\n      this.contextTextState_ = {\r\n        font: textState.font,\r\n        textAlign: textAlign,\r\n        textBaseline: textState.textBaseline,\r\n      };\r\n    } else {\r\n      if (contextTextState.font != textState.font) {\r\n        contextTextState.font = textState.font;\r\n        context.font = textState.font;\r\n      }\r\n      if (contextTextState.textAlign != textAlign) {\r\n        contextTextState.textAlign = textAlign;\r\n        context.textAlign = textAlign;\r\n      }\r\n      if (contextTextState.textBaseline != textState.textBaseline) {\r\n        contextTextState.textBaseline = textState.textBaseline;\r\n        context.textBaseline = textState.textBaseline;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the fill and stroke style for subsequent draw operations.  To clear\r\n   * either fill or stroke styles, pass null for the appropriate parameter.\r\n   *\r\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {\r\n    if (!fillStyle) {\r\n      this.fillState_ = null;\r\n    } else {\r\n      const fillStyleColor = fillStyle.getColor();\r\n      this.fillState_ = {\r\n        fillStyle: asColorLike(\r\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\r\n        ),\r\n      };\r\n    }\r\n    if (!strokeStyle) {\r\n      this.strokeState_ = null;\r\n    } else {\r\n      const strokeStyleColor = strokeStyle.getColor();\r\n      const strokeStyleLineCap = strokeStyle.getLineCap();\r\n      const strokeStyleLineDash = strokeStyle.getLineDash();\r\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      const strokeStyleWidth = strokeStyle.getWidth();\r\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      const lineDash = strokeStyleLineDash\r\n        ? strokeStyleLineDash\r\n        : defaultLineDash;\r\n      this.strokeState_ = {\r\n        lineCap:\r\n          strokeStyleLineCap !== undefined\r\n            ? strokeStyleLineCap\r\n            : defaultLineCap,\r\n        lineDash:\r\n          this.pixelRatio_ === 1\r\n            ? lineDash\r\n            : lineDash.map((n) => n * this.pixelRatio_),\r\n        lineDashOffset:\r\n          (strokeStyleLineDashOffset\r\n            ? strokeStyleLineDashOffset\r\n            : defaultLineDashOffset) * this.pixelRatio_,\r\n        lineJoin:\r\n          strokeStyleLineJoin !== undefined\r\n            ? strokeStyleLineJoin\r\n            : defaultLineJoin,\r\n        lineWidth:\r\n          (strokeStyleWidth !== undefined\r\n            ? strokeStyleWidth\r\n            : defaultLineWidth) * this.pixelRatio_,\r\n        miterLimit:\r\n          strokeStyleMiterLimit !== undefined\r\n            ? strokeStyleMiterLimit\r\n            : defaultMiterLimit,\r\n        strokeStyle: asColorLike(\r\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\r\n        ),\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the image style for subsequent draw operations.  Pass null to remove\r\n   * the image style.\r\n   *\r\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\r\n   */\r\n  setImageStyle(imageStyle) {\r\n    let imageSize;\r\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\r\n      this.image_ = null;\r\n      return;\r\n    }\r\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\r\n    const imageAnchor = imageStyle.getAnchor();\r\n    const imageOrigin = imageStyle.getOrigin();\r\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\r\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\r\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\r\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\r\n    this.imageOpacity_ = imageStyle.getOpacity();\r\n    this.imageOriginX_ = imageOrigin[0];\r\n    this.imageOriginY_ = imageOrigin[1];\r\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\r\n    this.imageRotation_ = imageStyle.getRotation();\r\n    const imageScale = imageStyle.getScaleArray();\r\n    this.imageScale_ = [\r\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\r\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\r\n    ];\r\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\r\n  }\r\n\r\n  /**\r\n   * Set the text style for subsequent draw operations.  Pass null to\r\n   * remove the text style.\r\n   *\r\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\r\n   */\r\n  setTextStyle(textStyle) {\r\n    if (!textStyle) {\r\n      this.text_ = '';\r\n    } else {\r\n      const textFillStyle = textStyle.getFill();\r\n      if (!textFillStyle) {\r\n        this.textFillState_ = null;\r\n      } else {\r\n        const textFillStyleColor = textFillStyle.getColor();\r\n        this.textFillState_ = {\r\n          fillStyle: asColorLike(\r\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\r\n          ),\r\n        };\r\n      }\r\n      const textStrokeStyle = textStyle.getStroke();\r\n      if (!textStrokeStyle) {\r\n        this.textStrokeState_ = null;\r\n      } else {\r\n        const textStrokeStyleColor = textStrokeStyle.getColor();\r\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\r\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\r\n        const textStrokeStyleLineDashOffset =\r\n          textStrokeStyle.getLineDashOffset();\r\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\r\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\r\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\r\n        this.textStrokeState_ = {\r\n          lineCap:\r\n            textStrokeStyleLineCap !== undefined\r\n              ? textStrokeStyleLineCap\r\n              : defaultLineCap,\r\n          lineDash: textStrokeStyleLineDash\r\n            ? textStrokeStyleLineDash\r\n            : defaultLineDash,\r\n          lineDashOffset: textStrokeStyleLineDashOffset\r\n            ? textStrokeStyleLineDashOffset\r\n            : defaultLineDashOffset,\r\n          lineJoin:\r\n            textStrokeStyleLineJoin !== undefined\r\n              ? textStrokeStyleLineJoin\r\n              : defaultLineJoin,\r\n          lineWidth:\r\n            textStrokeStyleWidth !== undefined\r\n              ? textStrokeStyleWidth\r\n              : defaultLineWidth,\r\n          miterLimit:\r\n            textStrokeStyleMiterLimit !== undefined\r\n              ? textStrokeStyleMiterLimit\r\n              : defaultMiterLimit,\r\n          strokeStyle: asColorLike(\r\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\r\n          ),\r\n        };\r\n      }\r\n      const textFont = textStyle.getFont();\r\n      const textOffsetX = textStyle.getOffsetX();\r\n      const textOffsetY = textStyle.getOffsetY();\r\n      const textRotateWithView = textStyle.getRotateWithView();\r\n      const textRotation = textStyle.getRotation();\r\n      const textScale = textStyle.getScaleArray();\r\n      const textText = textStyle.getText();\r\n      const textTextAlign = textStyle.getTextAlign();\r\n      const textTextBaseline = textStyle.getTextBaseline();\r\n      this.textState_ = {\r\n        font: textFont !== undefined ? textFont : defaultFont,\r\n        textAlign:\r\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\r\n        textBaseline:\r\n          textTextBaseline !== undefined\r\n            ? textTextBaseline\r\n            : defaultTextBaseline,\r\n      };\r\n      this.text_ =\r\n        textText !== undefined\r\n          ? Array.isArray(textText)\r\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\r\n            : textText\r\n          : '';\r\n      this.textOffsetX_ =\r\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\r\n      this.textOffsetY_ =\r\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\r\n      this.textRotateWithView_ =\r\n        textRotateWithView !== undefined ? textRotateWithView : false;\r\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\r\n      this.textScale_ = [\r\n        this.pixelRatio_ * textScale[0],\r\n        this.pixelRatio_ * textScale[1],\r\n      ];\r\n    }\r\n  }\r\n}\r\n\r\nexport default CanvasImmediateRenderer;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,aAAa,MAAM,qBAAqB;AAC/C,SAAQC,WAAW,QAAO,oBAAoB;AAC9C,SACEC,OAAO,IAAIC,gBAAgB,EAC3BC,MAAM,IAAIC,eAAe,QACpB,oBAAoB;AAC3B,SACEC,gBAAgB,EAChBC,WAAW,EACXC,cAAc,EACdC,eAAe,EACfC,qBAAqB,EACrBC,eAAe,EACfC,gBAAgB,EAChBC,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,EAChBC,mBAAmB,QACd,cAAc;AACrB,SAAQC,MAAM,QAAO,gBAAgB;AACrC,SAAQC,UAAU,QAAO,iBAAiB;AAC1C,SAAQC,OAAO,QAAO,eAAe;AACrC,SAAQC,WAAW,QAAO,8BAA8B;AACxD,SAAQC,eAAe,QAAO,8BAA8B;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,SAAStB,aAAa,CAAC;EAClD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEuB,WAAWA,CACTC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,SAAS,EACTC,YAAY,EACZC,gBAAgB,EAChBC,aAAa,EACb;IACA,KAAK,CAAC,CAAC;;IAEP;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGP,OAAO;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACQ,WAAW,GAAGP,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACQ,OAAO,GAAGP,MAAM;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACQ,UAAU,GAAGP,SAAS;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAACQ,kBAAkB,GAAGR,SAAS,GAC/BR,OAAO,CAACiB,IAAI,CAACC,KAAK,CAACV,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GACnD,CAAC;;IAEL;AACJ;AACA;AACA;IACI,IAAI,CAACW,aAAa,GAAGV,YAAY;;IAEjC;AACJ;AACA;AACA;IACI,IAAI,CAACW,iBAAiB,GAAGV,gBAAgB;;IAEzC;AACJ;AACA;AACA;IACI,IAAI,CAACW,cAAc,GAAGV,aAAa;;IAEnC;AACJ;AACA;AACA;IACI,IAAI,CAACW,iBAAiB,GAAG,IAAI;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACC,mBAAmB,GAAG,IAAI;;IAE/B;AACJ;AACA;AACA;IACI,IAAI,CAACC,iBAAiB,GAAG,IAAI;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAG,IAAI;;IAExB;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,oBAAoB,GAAG,KAAK;;IAEjC;AACJ;AACA;AACA;IACI,IAAI,CAACC,cAAc,GAAG,CAAC;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAEzB;AACJ;AACA;AACA;IACI,IAAI,CAACC,WAAW,GAAG,CAAC;;IAEpB;AACJ;AACA;AACA;IACI,IAAI,CAACC,KAAK,GAAG,EAAE;;IAEf;AACJ;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACC,mBAAmB,GAAG,KAAK;;IAEhC;AACJ;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,CAAC;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAExB;AACJ;AACA;AACA;IACI,IAAI,CAACC,cAAc,GAAG,IAAI;;IAE1B;AACJ;AACA;AACA;IACI,IAAI,CAACC,gBAAgB,GAAG,IAAI;;IAE5B;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,iBAAiB,GAAG,EAAE;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAACC,kBAAkB,GAAG9D,eAAe,CAAC,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE+D,WAAWA,CAACC,eAAe,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAE;IAChD,IAAI,CAAC,IAAI,CAAC1B,MAAM,EAAE;MAChB;IACF;IACA,MAAM2B,gBAAgB,GAAGrD,WAAW,CAClCiD,eAAe,EACfC,MAAM,EACNC,GAAG,EACHC,MAAM,EACN,IAAI,CAACtC,UAAU,EACf,IAAI,CAACgC,iBACP,CAAC;IACD,MAAM1C,OAAO,GAAG,IAAI,CAACO,QAAQ;IAC7B,MAAM2C,cAAc,GAAG,IAAI,CAACP,kBAAkB;IAC9C,MAAMQ,KAAK,GAAGnD,OAAO,CAACoD,WAAW;IACjC,IAAI,IAAI,CAAC1B,aAAa,IAAI,CAAC,EAAE;MAC3B1B,OAAO,CAACoD,WAAW,GAAGD,KAAK,GAAG,IAAI,CAACzB,aAAa;IAClD;IACA,IAAI2B,QAAQ,GAAG,IAAI,CAACvB,cAAc;IAClC,IAAI,IAAI,CAACnB,kBAAkB,KAAK,CAAC,EAAE;MACjC0C,QAAQ,IAAI,IAAI,CAACvC,aAAa;IAChC;IACA,IAAI,IAAI,CAACe,oBAAoB,EAAE;MAC7BwB,QAAQ,IAAI,IAAI,CAACvC,aAAa;IAChC;IACA,KAAK,IAAIwC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGN,gBAAgB,CAACO,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,IAAI,CAAC,EAAE;MAC5D,MAAMG,CAAC,GAAGR,gBAAgB,CAACK,CAAC,CAAC,GAAG,IAAI,CAAC/B,aAAa;MAClD,MAAMmC,CAAC,GAAGT,gBAAgB,CAACK,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC9B,aAAa;MACtD,IACE6B,QAAQ,KAAK,CAAC,IACd,IAAI,CAACtB,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IACxB,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,EACxB;QACA,MAAM4B,OAAO,GAAGF,CAAC,GAAG,IAAI,CAAClC,aAAa;QACtC,MAAMqC,OAAO,GAAGF,CAAC,GAAG,IAAI,CAAClC,aAAa;QACtC7C,gBAAgB,CACduE,cAAc,EACdS,OAAO,EACPC,OAAO,EACP,CAAC,EACD,CAAC,EACDP,QAAQ,EACR,CAACM,OAAO,EACR,CAACC,OACH,CAAC;QACD5D,OAAO,CAAC6D,IAAI,CAAC,CAAC;QACd7D,OAAO,CAACG,SAAS,CAAC2D,KAAK,CAAC9D,OAAO,EAAEkD,cAAc,CAAC;QAChDlD,OAAO,CAAC+D,SAAS,CAACJ,OAAO,EAAEC,OAAO,CAAC;QACnC5D,OAAO,CAACgE,KAAK,CAAC,IAAI,CAACjC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC,CAAC;QACvD/B,OAAO,CAACiE,SAAS,CACf,IAAI,CAAC3C,MAAM,EACX,IAAI,CAACK,aAAa,EAClB,IAAI,CAACC,aAAa,EAClB,IAAI,CAACI,WAAW,EAChB,IAAI,CAACP,YAAY,EACjB,CAAC,IAAI,CAACF,aAAa,EACnB,CAAC,IAAI,CAACC,aAAa,EACnB,IAAI,CAACQ,WAAW,EAChB,IAAI,CAACP,YACP,CAAC;QACDzB,OAAO,CAACkE,OAAO,CAAC,CAAC;MACnB,CAAC,MAAM;QACLlE,OAAO,CAACiE,SAAS,CACf,IAAI,CAAC3C,MAAM,EACX,IAAI,CAACK,aAAa,EAClB,IAAI,CAACC,aAAa,EAClB,IAAI,CAACI,WAAW,EAChB,IAAI,CAACP,YAAY,EACjBgC,CAAC,EACDC,CAAC,EACD,IAAI,CAAC1B,WAAW,EAChB,IAAI,CAACP,YACP,CAAC;MACH;IACF;IACA,IAAI,IAAI,CAACC,aAAa,IAAI,CAAC,EAAE;MAC3B1B,OAAO,CAACoD,WAAW,GAAGD,KAAK;IAC7B;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEgB,SAASA,CAACtB,eAAe,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAE;IAC9C,IAAI,CAAC,IAAI,CAACP,UAAU,IAAI,IAAI,CAACR,KAAK,KAAK,EAAE,EAAE;MACzC;IACF;IACA,IAAI,IAAI,CAACM,cAAc,EAAE;MACvB,IAAI,CAAC6B,oBAAoB,CAAC,IAAI,CAAC7B,cAAc,CAAC;IAChD;IACA,IAAI,IAAI,CAACC,gBAAgB,EAAE;MACzB,IAAI,CAAC6B,sBAAsB,CAAC,IAAI,CAAC7B,gBAAgB,CAAC;IACpD;IACA,IAAI,CAAC8B,oBAAoB,CAAC,IAAI,CAAC7B,UAAU,CAAC;IAC1C,MAAMQ,gBAAgB,GAAGrD,WAAW,CAClCiD,eAAe,EACfC,MAAM,EACNC,GAAG,EACHC,MAAM,EACN,IAAI,CAACtC,UAAU,EACf,IAAI,CAACgC,iBACP,CAAC;IACD,MAAM1C,OAAO,GAAG,IAAI,CAACO,QAAQ;IAC7B,IAAI8C,QAAQ,GAAG,IAAI,CAAChB,aAAa;IACjC,IAAI,IAAI,CAAC1B,kBAAkB,KAAK,CAAC,EAAE;MACjC0C,QAAQ,IAAI,IAAI,CAACvC,aAAa;IAChC;IACA,IAAI,IAAI,CAACsB,mBAAmB,EAAE;MAC5BiB,QAAQ,IAAI,IAAI,CAACvC,aAAa;IAChC;IACA,OAAOgC,MAAM,GAAGC,GAAG,EAAED,MAAM,IAAIE,MAAM,EAAE;MACrC,MAAMS,CAAC,GAAGR,gBAAgB,CAACH,MAAM,CAAC,GAAG,IAAI,CAACZ,YAAY;MACtD,MAAMwB,CAAC,GAAGT,gBAAgB,CAACH,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAACX,YAAY;MAC1D,IACEkB,QAAQ,KAAK,CAAC,IACd,IAAI,CAACf,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IACvB,IAAI,CAACA,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,EACvB;QACAtC,OAAO,CAAC6D,IAAI,CAAC,CAAC;QACd7D,OAAO,CAAC+D,SAAS,CAACN,CAAC,GAAG,IAAI,CAACvB,YAAY,EAAEwB,CAAC,GAAG,IAAI,CAACvB,YAAY,CAAC;QAC/DnC,OAAO,CAACuE,MAAM,CAAClB,QAAQ,CAAC;QACxBrD,OAAO,CAAC+D,SAAS,CAAC,IAAI,CAAC7B,YAAY,EAAE,IAAI,CAACC,YAAY,CAAC;QACvDnC,OAAO,CAACgE,KAAK,CAAC,IAAI,CAAC1B,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,UAAU,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,IAAI,CAACE,gBAAgB,EAAE;UACzBxC,OAAO,CAACwE,UAAU,CAAC,IAAI,CAACvC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACtC;QACA,IAAI,IAAI,CAACM,cAAc,EAAE;UACvBvC,OAAO,CAACyE,QAAQ,CAAC,IAAI,CAACxC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACpC;QACAjC,OAAO,CAACkE,OAAO,CAAC,CAAC;MACnB,CAAC,MAAM;QACL,IAAI,IAAI,CAAC1B,gBAAgB,EAAE;UACzBxC,OAAO,CAACwE,UAAU,CAAC,IAAI,CAACvC,KAAK,EAAEwB,CAAC,EAAEC,CAAC,CAAC;QACtC;QACA,IAAI,IAAI,CAACnB,cAAc,EAAE;UACvBvC,OAAO,CAACyE,QAAQ,CAAC,IAAI,CAACxC,KAAK,EAAEwB,CAAC,EAAEC,CAAC,CAAC;QACpC;MACF;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEgB,aAAaA,CAAC7B,eAAe,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAE2B,KAAK,EAAE;IACzD,MAAM3E,OAAO,GAAG,IAAI,CAACO,QAAQ;IAC7B,MAAM0C,gBAAgB,GAAGrD,WAAW,CAClCiD,eAAe,EACfC,MAAM,EACNC,GAAG,EACHC,MAAM,EACN,IAAI,CAACtC,UAAU,EACf,IAAI,CAACgC,iBACP,CAAC;IACD1C,OAAO,CAAC4E,MAAM,CAAC3B,gBAAgB,CAAC,CAAC,CAAC,EAAEA,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACxD,IAAIO,MAAM,GAAGP,gBAAgB,CAACO,MAAM;IACpC,IAAImB,KAAK,EAAE;MACTnB,MAAM,IAAI,CAAC;IACb;IACA,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;MAClCtD,OAAO,CAAC6E,MAAM,CAAC5B,gBAAgB,CAACK,CAAC,CAAC,EAAEL,gBAAgB,CAACK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9D;IACA,IAAIqB,KAAK,EAAE;MACT3E,OAAO,CAAC8E,SAAS,CAAC,CAAC;IACrB;IACA,OAAO/B,GAAG;EACZ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEgC,UAAUA,CAAClC,eAAe,EAAEC,MAAM,EAAEkC,IAAI,EAAEhC,MAAM,EAAE;IAChD,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGyB,IAAI,CAACxB,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;MAC7CR,MAAM,GAAG,IAAI,CAAC4B,aAAa,CACzB7B,eAAe,EACfC,MAAM,EACNkC,IAAI,CAAC1B,CAAC,CAAC,EACPN,MAAM,EACN,IACF,CAAC;IACH;IACA,OAAOF,MAAM;EACf;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEmC,UAAUA,CAACC,QAAQ,EAAE;IACnB,IAAI,IAAI,CAACnE,iBAAiB,EAAE;MAC1BmE,QAAQ,GAAG;MACTA,QAAQ,CAACC,mBAAmB,CAC1B,IAAI,CAACpE,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;IACH;IACA,IAAI,CAACtB,UAAU,CAAC,IAAI,CAACe,OAAO,EAAEyE,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE;MACnD;IACF;IACA,IAAI,IAAI,CAAChE,UAAU,IAAI,IAAI,CAACC,YAAY,EAAE;MACxC,IAAI,IAAI,CAACD,UAAU,EAAE;QACnB,IAAI,CAACgD,oBAAoB,CAAC,IAAI,CAAChD,UAAU,CAAC;MAC5C;MACA,IAAI,IAAI,CAACC,YAAY,EAAE;QACrB,IAAI,CAACgD,sBAAsB,CAAC,IAAI,CAAChD,YAAY,CAAC;MAChD;MACA,MAAM4B,gBAAgB,GAAGpD,eAAe,CACtCqF,QAAQ,EACR,IAAI,CAACxE,UAAU,EACf,IAAI,CAACgC,iBACP,CAAC;MACD,MAAM2C,EAAE,GAAGpC,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC;MACpD,MAAMqC,EAAE,GAAGrC,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC;MACpD,MAAMsC,MAAM,GAAG3E,IAAI,CAAC4E,IAAI,CAACH,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;MAC3C,MAAMtF,OAAO,GAAG,IAAI,CAACO,QAAQ;MAC7BP,OAAO,CAACyF,SAAS,CAAC,CAAC;MACnBzF,OAAO,CAAC0F,GAAG,CACTzC,gBAAgB,CAAC,CAAC,CAAC,EACnBA,gBAAgB,CAAC,CAAC,CAAC,EACnBsC,MAAM,EACN,CAAC,EACD,CAAC,GAAG3E,IAAI,CAAC+E,EACX,CAAC;MACD,IAAI,IAAI,CAACvE,UAAU,EAAE;QACnBpB,OAAO,CAAC4F,IAAI,CAAC,CAAC;MAChB;MACA,IAAI,IAAI,CAACvE,YAAY,EAAE;QACrBrB,OAAO,CAAC6F,MAAM,CAAC,CAAC;MAClB;IACF;IACA,IAAI,IAAI,CAAC5D,KAAK,KAAK,EAAE,EAAE;MACrB,IAAI,CAACkC,SAAS,CAACe,QAAQ,CAACY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQA,CAACC,KAAK,EAAE;IACd,IAAI,CAACC,kBAAkB,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC,EAAEF,KAAK,CAACG,SAAS,CAAC,CAAC,CAAC;IAC3D,IAAI,CAACC,aAAa,CAACJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC;IACpC,IAAI,CAACC,YAAY,CAACN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;EACpC;;EAEA;AACF;AACA;EACEC,YAAYA,CAACrG,SAAS,EAAE;IACtB,IAAI,CAACO,UAAU,GAAGP,SAAS;EAC7B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEsG,YAAYA,CAACvB,QAAQ,EAAE;IACrB,MAAMwB,IAAI,GAAGxB,QAAQ,CAACyB,OAAO,CAAC,CAAC;IAC/B,QAAQD,IAAI;MACV,KAAK,OAAO;QACV,IAAI,CAACE,SAAS,EACZ,oDAAsD1B,QACxD,CAAC;QACD;MACF,KAAK,YAAY;QACf,IAAI,CAAC2B,cAAc,EACjB,yDAA2D3B,QAC7D,CAAC;QACD;MACF,KAAK,SAAS;QACZ,IAAI,CAAC4B,WAAW,EACd,sDAAwD5B,QAC1D,CAAC;QACD;MACF,KAAK,YAAY;QACf,IAAI,CAAC6B,cAAc,EACjB,yDAA2D7B,QAC7D,CAAC;QACD;MACF,KAAK,iBAAiB;QACpB,IAAI,CAAC8B,mBAAmB,EACtB;QACE9B,QAEJ,CAAC;QACD;MACF,KAAK,cAAc;QACjB,IAAI,CAAC+B,gBAAgB,EACnB;QACE/B,QAEJ,CAAC;QACD;MACF,KAAK,oBAAoB;QACvB,IAAI,CAACgC,sBAAsB,EACzB;QACEhC,QAEJ,CAAC;QACD;MACF,KAAK,QAAQ;QACX,IAAI,CAACD,UAAU,EACb,qDAAuDC,QACzD,CAAC;QACD;MACF;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEiC,WAAWA,CAACC,OAAO,EAAEpB,KAAK,EAAE;IAC1B,MAAMd,QAAQ,GAAGc,KAAK,CAACqB,mBAAmB,CAAC,CAAC,CAACD,OAAO,CAAC;IACrD,IAAI,CAAClC,QAAQ,EAAE;MACb;IACF;IACA,IAAI,CAACa,QAAQ,CAACC,KAAK,CAAC;IACpB,IAAI,CAACS,YAAY,CAACvB,QAAQ,CAAC;EAC7B;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEgC,sBAAsBA,CAAChC,QAAQ,EAAE;IAC/B,MAAMoC,UAAU,GAAGpC,QAAQ,CAACqC,kBAAkB,CAAC,CAAC;IAChD,KAAK,IAAIjE,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAG+D,UAAU,CAAC9D,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;MACnD,IAAI,CAACmD,YAAY,CAACa,UAAU,CAAChE,CAAC,CAAC,CAAC;IAClC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEsD,SAASA,CAAC1B,QAAQ,EAAE;IAClB,IAAI,IAAI,CAACnE,iBAAiB,EAAE;MAC1BmE,QAAQ,GAAG;MACTA,QAAQ,CAACC,mBAAmB,CAC1B,IAAI,CAACpE,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;IACH;IACA,MAAM6B,eAAe,GAAGqC,QAAQ,CAACsC,kBAAkB,CAAC,CAAC;IACrD,MAAMxE,MAAM,GAAGkC,QAAQ,CAACuC,SAAS,CAAC,CAAC;IACnC,IAAI,IAAI,CAACnG,MAAM,EAAE;MACf,IAAI,CAACsB,WAAW,CAACC,eAAe,EAAE,CAAC,EAAEA,eAAe,CAACW,MAAM,EAAER,MAAM,CAAC;IACtE;IACA,IAAI,IAAI,CAACf,KAAK,KAAK,EAAE,EAAE;MACrB,IAAI,CAACkC,SAAS,CAACtB,eAAe,EAAE,CAAC,EAAEA,eAAe,CAACW,MAAM,EAAER,MAAM,CAAC;IACpE;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE+D,cAAcA,CAAC7B,QAAQ,EAAE;IACvB,IAAI,IAAI,CAACnE,iBAAiB,EAAE;MAC1BmE,QAAQ,GAAG;MACTA,QAAQ,CAACC,mBAAmB,CAC1B,IAAI,CAACpE,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;IACH;IACA,MAAM6B,eAAe,GAAGqC,QAAQ,CAACsC,kBAAkB,CAAC,CAAC;IACrD,MAAMxE,MAAM,GAAGkC,QAAQ,CAACuC,SAAS,CAAC,CAAC;IACnC,IAAI,IAAI,CAACnG,MAAM,EAAE;MACf,IAAI,CAACsB,WAAW,CAACC,eAAe,EAAE,CAAC,EAAEA,eAAe,CAACW,MAAM,EAAER,MAAM,CAAC;IACtE;IACA,IAAI,IAAI,CAACf,KAAK,KAAK,EAAE,EAAE;MACrB,IAAI,CAACkC,SAAS,CAACtB,eAAe,EAAE,CAAC,EAAEA,eAAe,CAACW,MAAM,EAAER,MAAM,CAAC;IACpE;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE6D,cAAcA,CAAC3B,QAAQ,EAAE;IACvB,IAAI,IAAI,CAACnE,iBAAiB,EAAE;MAC1BmE,QAAQ,GAAG;MACTA,QAAQ,CAACC,mBAAmB,CAC1B,IAAI,CAACpE,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;IACH;IACA,IAAI,CAACtB,UAAU,CAAC,IAAI,CAACe,OAAO,EAAEyE,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE;MACnD;IACF;IACA,IAAI,IAAI,CAAC/D,YAAY,EAAE;MACrB,IAAI,CAACgD,sBAAsB,CAAC,IAAI,CAAChD,YAAY,CAAC;MAC9C,MAAMrB,OAAO,GAAG,IAAI,CAACO,QAAQ;MAC7B,MAAMsC,eAAe,GAAGqC,QAAQ,CAACsC,kBAAkB,CAAC,CAAC;MACrDxH,OAAO,CAACyF,SAAS,CAAC,CAAC;MACnB,IAAI,CAACf,aAAa,CAChB7B,eAAe,EACf,CAAC,EACDA,eAAe,CAACW,MAAM,EACtB0B,QAAQ,CAACuC,SAAS,CAAC,CAAC,EACpB,KACF,CAAC;MACDzH,OAAO,CAAC6F,MAAM,CAAC,CAAC;IAClB;IACA,IAAI,IAAI,CAAC5D,KAAK,KAAK,EAAE,EAAE;MACrB,MAAMyF,YAAY,GAAGxC,QAAQ,CAACyC,eAAe,CAAC,CAAC;MAC/C,IAAI,CAACxD,SAAS,CAACuD,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEV,mBAAmBA,CAAC9B,QAAQ,EAAE;IAC5B,IAAI,IAAI,CAACnE,iBAAiB,EAAE;MAC1BmE,QAAQ,GACN;MACEA,QAAQ,CAACC,mBAAmB,CAC1B,IAAI,CAACpE,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;IACL;IACA,MAAM4G,cAAc,GAAG1C,QAAQ,CAACE,SAAS,CAAC,CAAC;IAC3C,IAAI,CAAC1F,UAAU,CAAC,IAAI,CAACe,OAAO,EAAEmH,cAAc,CAAC,EAAE;MAC7C;IACF;IACA,IAAI,IAAI,CAACvG,YAAY,EAAE;MACrB,IAAI,CAACgD,sBAAsB,CAAC,IAAI,CAAChD,YAAY,CAAC;MAC9C,MAAMrB,OAAO,GAAG,IAAI,CAACO,QAAQ;MAC7B,MAAMsC,eAAe,GAAGqC,QAAQ,CAACsC,kBAAkB,CAAC,CAAC;MACrD,IAAI1E,MAAM,GAAG,CAAC;MACd,MAAMkC,IAAI,GAAG,4BAA8BE,QAAQ,CAAC2C,OAAO,CAAC,CAAE;MAC9D,MAAM7E,MAAM,GAAGkC,QAAQ,CAACuC,SAAS,CAAC,CAAC;MACnCzH,OAAO,CAACyF,SAAS,CAAC,CAAC;MACnB,KAAK,IAAInC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGyB,IAAI,CAACxB,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;QAC7CR,MAAM,GAAG,IAAI,CAAC4B,aAAa,CACzB7B,eAAe,EACfC,MAAM,EACNkC,IAAI,CAAC1B,CAAC,CAAC,EACPN,MAAM,EACN,KACF,CAAC;MACH;MACAhD,OAAO,CAAC6F,MAAM,CAAC,CAAC;IAClB;IACA,IAAI,IAAI,CAAC5D,KAAK,KAAK,EAAE,EAAE;MACrB,MAAM6F,aAAa,GAAG5C,QAAQ,CAAC6C,gBAAgB,CAAC,CAAC;MACjD,IAAI,CAAC5D,SAAS,CAAC2D,aAAa,EAAE,CAAC,EAAEA,aAAa,CAACtE,MAAM,EAAE,CAAC,CAAC;IAC3D;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEsD,WAAWA,CAAC5B,QAAQ,EAAE;IACpB,IAAI,IAAI,CAACnE,iBAAiB,EAAE;MAC1BmE,QAAQ,GAAG;MACTA,QAAQ,CAACC,mBAAmB,CAC1B,IAAI,CAACpE,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;IACH;IACA,IAAI,CAACtB,UAAU,CAAC,IAAI,CAACe,OAAO,EAAEyE,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE;MACnD;IACF;IACA,IAAI,IAAI,CAAC/D,YAAY,IAAI,IAAI,CAACD,UAAU,EAAE;MACxC,IAAI,IAAI,CAACA,UAAU,EAAE;QACnB,IAAI,CAACgD,oBAAoB,CAAC,IAAI,CAAChD,UAAU,CAAC;MAC5C;MACA,IAAI,IAAI,CAACC,YAAY,EAAE;QACrB,IAAI,CAACgD,sBAAsB,CAAC,IAAI,CAAChD,YAAY,CAAC;MAChD;MACA,MAAMrB,OAAO,GAAG,IAAI,CAACO,QAAQ;MAC7BP,OAAO,CAACyF,SAAS,CAAC,CAAC;MACnB,IAAI,CAACV,UAAU,CACbG,QAAQ,CAAC8C,0BAA0B,CAAC,CAAC,EACrC,CAAC,EACD,4BAA8B9C,QAAQ,CAAC2C,OAAO,CAAC,CAAC,EAChD3C,QAAQ,CAACuC,SAAS,CAAC,CACrB,CAAC;MACD,IAAI,IAAI,CAACrG,UAAU,EAAE;QACnBpB,OAAO,CAAC4F,IAAI,CAAC,CAAC;MAChB;MACA,IAAI,IAAI,CAACvE,YAAY,EAAE;QACrBrB,OAAO,CAAC6F,MAAM,CAAC,CAAC;MAClB;IACF;IACA,IAAI,IAAI,CAAC5D,KAAK,KAAK,EAAE,EAAE;MACrB,MAAMgG,iBAAiB,GAAG/C,QAAQ,CAACgD,oBAAoB,CAAC,CAAC;MACzD,IAAI,CAAC/D,SAAS,CAAC8D,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5C;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEhB,gBAAgBA,CAAC/B,QAAQ,EAAE;IACzB,IAAI,IAAI,CAACnE,iBAAiB,EAAE;MAC1BmE,QAAQ,GAAG;MACTA,QAAQ,CAACC,mBAAmB,CAC1B,IAAI,CAACpE,iBAAiB,EACtB,IAAI,CAACC,cACP,CACD;IACH;IACA,IAAI,CAACtB,UAAU,CAAC,IAAI,CAACe,OAAO,EAAEyE,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE;MACnD;IACF;IACA,IAAI,IAAI,CAAC/D,YAAY,IAAI,IAAI,CAACD,UAAU,EAAE;MACxC,IAAI,IAAI,CAACA,UAAU,EAAE;QACnB,IAAI,CAACgD,oBAAoB,CAAC,IAAI,CAAChD,UAAU,CAAC;MAC5C;MACA,IAAI,IAAI,CAACC,YAAY,EAAE;QACrB,IAAI,CAACgD,sBAAsB,CAAC,IAAI,CAAChD,YAAY,CAAC;MAChD;MACA,MAAMrB,OAAO,GAAG,IAAI,CAACO,QAAQ;MAC7B,MAAMsC,eAAe,GAAGqC,QAAQ,CAAC8C,0BAA0B,CAAC,CAAC;MAC7D,IAAIlF,MAAM,GAAG,CAAC;MACd,MAAMqF,KAAK,GAAGjD,QAAQ,CAACkD,QAAQ,CAAC,CAAC;MACjC,MAAMpF,MAAM,GAAGkC,QAAQ,CAACuC,SAAS,CAAC,CAAC;MACnCzH,OAAO,CAACyF,SAAS,CAAC,CAAC;MACnB,KAAK,IAAInC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAG4E,KAAK,CAAC3E,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;QAC9C,MAAM0B,IAAI,GAAGmD,KAAK,CAAC7E,CAAC,CAAC;QACrBR,MAAM,GAAG,IAAI,CAACiC,UAAU,CAAClC,eAAe,EAAEC,MAAM,EAAEkC,IAAI,EAAEhC,MAAM,CAAC;MACjE;MACA,IAAI,IAAI,CAAC5B,UAAU,EAAE;QACnBpB,OAAO,CAAC4F,IAAI,CAAC,CAAC;MAChB;MACA,IAAI,IAAI,CAACvE,YAAY,EAAE;QACrBrB,OAAO,CAAC6F,MAAM,CAAC,CAAC;MAClB;IACF;IACA,IAAI,IAAI,CAAC5D,KAAK,KAAK,EAAE,EAAE;MACrB,MAAMoG,kBAAkB,GAAGnD,QAAQ,CAACoD,qBAAqB,CAAC,CAAC;MAC3D,IAAI,CAACnE,SAAS,CAACkE,kBAAkB,EAAE,CAAC,EAAEA,kBAAkB,CAAC7E,MAAM,EAAE,CAAC,CAAC;IACrE;EACF;;EAEA;AACF;AACA;AACA;EACEY,oBAAoBA,CAACmE,SAAS,EAAE;IAC9B,MAAMvI,OAAO,GAAG,IAAI,CAACO,QAAQ;IAC7B,MAAMiI,gBAAgB,GAAG,IAAI,CAACvH,iBAAiB;IAC/C,IAAI,CAACuH,gBAAgB,EAAE;MACrBxI,OAAO,CAACyI,SAAS,GAAGF,SAAS,CAACE,SAAS;MACvC,IAAI,CAACxH,iBAAiB,GAAG;QACvBwH,SAAS,EAAEF,SAAS,CAACE;MACvB,CAAC;IACH,CAAC,MAAM;MACL,IAAID,gBAAgB,CAACC,SAAS,IAAIF,SAAS,CAACE,SAAS,EAAE;QACrDD,gBAAgB,CAACC,SAAS,GAAGF,SAAS,CAACE,SAAS;QAChDzI,OAAO,CAACyI,SAAS,GAAGF,SAAS,CAACE,SAAS;MACzC;IACF;EACF;;EAEA;AACF;AACA;AACA;EACEpE,sBAAsBA,CAACqE,WAAW,EAAE;IAClC,MAAM1I,OAAO,GAAG,IAAI,CAACO,QAAQ;IAC7B,MAAMoI,kBAAkB,GAAG,IAAI,CAACzH,mBAAmB;IACnD,IAAI,CAACyH,kBAAkB,EAAE;MACvB3I,OAAO,CAAC4I,OAAO,GAAGF,WAAW,CAACE,OAAO;MACrC5I,OAAO,CAAC6I,WAAW,CAACH,WAAW,CAACI,QAAQ,CAAC;MACzC9I,OAAO,CAAC+I,cAAc,GAAGL,WAAW,CAACK,cAAc;MACnD/I,OAAO,CAACgJ,QAAQ,GAAGN,WAAW,CAACM,QAAQ;MACvChJ,OAAO,CAACiJ,SAAS,GAAGP,WAAW,CAACO,SAAS;MACzCjJ,OAAO,CAACkJ,UAAU,GAAGR,WAAW,CAACQ,UAAU;MAC3ClJ,OAAO,CAACmJ,WAAW,GAAGT,WAAW,CAACS,WAAW;MAC7C,IAAI,CAACjI,mBAAmB,GAAG;QACzB0H,OAAO,EAAEF,WAAW,CAACE,OAAO;QAC5BE,QAAQ,EAAEJ,WAAW,CAACI,QAAQ;QAC9BC,cAAc,EAAEL,WAAW,CAACK,cAAc;QAC1CC,QAAQ,EAAEN,WAAW,CAACM,QAAQ;QAC9BC,SAAS,EAAEP,WAAW,CAACO,SAAS;QAChCC,UAAU,EAAER,WAAW,CAACQ,UAAU;QAClCC,WAAW,EAAET,WAAW,CAACS;MAC3B,CAAC;IACH,CAAC,MAAM;MACL,IAAIR,kBAAkB,CAACC,OAAO,IAAIF,WAAW,CAACE,OAAO,EAAE;QACrDD,kBAAkB,CAACC,OAAO,GAAGF,WAAW,CAACE,OAAO;QAChD5I,OAAO,CAAC4I,OAAO,GAAGF,WAAW,CAACE,OAAO;MACvC;MACA,IAAI,CAACnJ,MAAM,CAACkJ,kBAAkB,CAACG,QAAQ,EAAEJ,WAAW,CAACI,QAAQ,CAAC,EAAE;QAC9D9I,OAAO,CAAC6I,WAAW,CAChBF,kBAAkB,CAACG,QAAQ,GAAGJ,WAAW,CAACI,QAC7C,CAAC;MACH;MACA,IAAIH,kBAAkB,CAACI,cAAc,IAAIL,WAAW,CAACK,cAAc,EAAE;QACnEJ,kBAAkB,CAACI,cAAc,GAAGL,WAAW,CAACK,cAAc;QAC9D/I,OAAO,CAAC+I,cAAc,GAAGL,WAAW,CAACK,cAAc;MACrD;MACA,IAAIJ,kBAAkB,CAACK,QAAQ,IAAIN,WAAW,CAACM,QAAQ,EAAE;QACvDL,kBAAkB,CAACK,QAAQ,GAAGN,WAAW,CAACM,QAAQ;QAClDhJ,OAAO,CAACgJ,QAAQ,GAAGN,WAAW,CAACM,QAAQ;MACzC;MACA,IAAIL,kBAAkB,CAACM,SAAS,IAAIP,WAAW,CAACO,SAAS,EAAE;QACzDN,kBAAkB,CAACM,SAAS,GAAGP,WAAW,CAACO,SAAS;QACpDjJ,OAAO,CAACiJ,SAAS,GAAGP,WAAW,CAACO,SAAS;MAC3C;MACA,IAAIN,kBAAkB,CAACO,UAAU,IAAIR,WAAW,CAACQ,UAAU,EAAE;QAC3DP,kBAAkB,CAACO,UAAU,GAAGR,WAAW,CAACQ,UAAU;QACtDlJ,OAAO,CAACkJ,UAAU,GAAGR,WAAW,CAACQ,UAAU;MAC7C;MACA,IAAIP,kBAAkB,CAACQ,WAAW,IAAIT,WAAW,CAACS,WAAW,EAAE;QAC7DR,kBAAkB,CAACQ,WAAW,GAAGT,WAAW,CAACS,WAAW;QACxDnJ,OAAO,CAACmJ,WAAW,GAAGT,WAAW,CAACS,WAAW;MAC/C;IACF;EACF;;EAEA;AACF;AACA;AACA;EACE7E,oBAAoBA,CAAC8E,SAAS,EAAE;IAC9B,MAAMpJ,OAAO,GAAG,IAAI,CAACO,QAAQ;IAC7B,MAAM8I,gBAAgB,GAAG,IAAI,CAAClI,iBAAiB;IAC/C,MAAMmI,SAAS,GAAGF,SAAS,CAACE,SAAS,GACjCF,SAAS,CAACE,SAAS,GACnB/J,gBAAgB;IACpB,IAAI,CAAC8J,gBAAgB,EAAE;MACrBrJ,OAAO,CAACuJ,IAAI,GAAGH,SAAS,CAACG,IAAI;MAC7BvJ,OAAO,CAACsJ,SAAS,GAAGA,SAAS;MAC7BtJ,OAAO,CAACwJ,YAAY,GAAGJ,SAAS,CAACI,YAAY;MAC7C,IAAI,CAACrI,iBAAiB,GAAG;QACvBoI,IAAI,EAAEH,SAAS,CAACG,IAAI;QACpBD,SAAS,EAAEA,SAAS;QACpBE,YAAY,EAAEJ,SAAS,CAACI;MAC1B,CAAC;IACH,CAAC,MAAM;MACL,IAAIH,gBAAgB,CAACE,IAAI,IAAIH,SAAS,CAACG,IAAI,EAAE;QAC3CF,gBAAgB,CAACE,IAAI,GAAGH,SAAS,CAACG,IAAI;QACtCvJ,OAAO,CAACuJ,IAAI,GAAGH,SAAS,CAACG,IAAI;MAC/B;MACA,IAAIF,gBAAgB,CAACC,SAAS,IAAIA,SAAS,EAAE;QAC3CD,gBAAgB,CAACC,SAAS,GAAGA,SAAS;QACtCtJ,OAAO,CAACsJ,SAAS,GAAGA,SAAS;MAC/B;MACA,IAAID,gBAAgB,CAACG,YAAY,IAAIJ,SAAS,CAACI,YAAY,EAAE;QAC3DH,gBAAgB,CAACG,YAAY,GAAGJ,SAAS,CAACI,YAAY;QACtDxJ,OAAO,CAACwJ,YAAY,GAAGJ,SAAS,CAACI,YAAY;MAC/C;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEvD,kBAAkBA,CAACwC,SAAS,EAAEU,WAAW,EAAE;IACzC,IAAI,CAACV,SAAS,EAAE;MACd,IAAI,CAACrH,UAAU,GAAG,IAAI;IACxB,CAAC,MAAM;MACL,MAAMqI,cAAc,GAAGhB,SAAS,CAACiB,QAAQ,CAAC,CAAC;MAC3C,IAAI,CAACtI,UAAU,GAAG;QAChBqH,SAAS,EAAEhK,WAAW,CACpBgL,cAAc,GAAGA,cAAc,GAAG3K,gBACpC;MACF,CAAC;IACH;IACA,IAAI,CAACqK,WAAW,EAAE;MAChB,IAAI,CAAC9H,YAAY,GAAG,IAAI;IAC1B,CAAC,MAAM;MACL,MAAMsI,gBAAgB,GAAGR,WAAW,CAACO,QAAQ,CAAC,CAAC;MAC/C,MAAME,kBAAkB,GAAGT,WAAW,CAACU,UAAU,CAAC,CAAC;MACnD,MAAMC,mBAAmB,GAAGX,WAAW,CAACY,WAAW,CAAC,CAAC;MACrD,MAAMC,yBAAyB,GAAGb,WAAW,CAACc,iBAAiB,CAAC,CAAC;MACjE,MAAMC,mBAAmB,GAAGf,WAAW,CAACgB,WAAW,CAAC,CAAC;MACrD,MAAMC,gBAAgB,GAAGjB,WAAW,CAACkB,QAAQ,CAAC,CAAC;MAC/C,MAAMC,qBAAqB,GAAGnB,WAAW,CAACoB,aAAa,CAAC,CAAC;MACzD,MAAMzB,QAAQ,GAAGgB,mBAAmB,GAChCA,mBAAmB,GACnB7K,eAAe;MACnB,IAAI,CAACoC,YAAY,GAAG;QAClBuH,OAAO,EACLgB,kBAAkB,KAAKY,SAAS,GAC5BZ,kBAAkB,GAClB5K,cAAc;QACpB8J,QAAQ,EACN,IAAI,CAACtI,WAAW,KAAK,CAAC,GAClBsI,QAAQ,GACRA,QAAQ,CAAC2B,GAAG,CAAEC,CAAC,IAAKA,CAAC,GAAG,IAAI,CAAClK,WAAW,CAAC;QAC/CuI,cAAc,EACZ,CAACiB,yBAAyB,GACtBA,yBAAyB,GACzB9K,qBAAqB,IAAI,IAAI,CAACsB,WAAW;QAC/CwI,QAAQ,EACNkB,mBAAmB,KAAKM,SAAS,GAC7BN,mBAAmB,GACnB/K,eAAe;QACrB8J,SAAS,EACP,CAACmB,gBAAgB,KAAKI,SAAS,GAC3BJ,gBAAgB,GAChBhL,gBAAgB,IAAI,IAAI,CAACoB,WAAW;QAC1C0I,UAAU,EACRoB,qBAAqB,KAAKE,SAAS,GAC/BF,qBAAqB,GACrBjL,iBAAiB;QACvB8J,WAAW,EAAE1K,WAAW,CACtBkL,gBAAgB,GAAGA,gBAAgB,GAAGrK,kBACxC;MACF,CAAC;IACH;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE8G,aAAaA,CAACuE,UAAU,EAAE;IACxB,IAAIC,SAAS;IACb,IAAI,CAACD,UAAU,IAAI,EAAEC,SAAS,GAAGD,UAAU,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE;MACtD,IAAI,CAACvJ,MAAM,GAAG,IAAI;MAClB;IACF;IACA,MAAMwJ,eAAe,GAAGH,UAAU,CAACI,aAAa,CAAC,IAAI,CAACvK,WAAW,CAAC;IAClE,MAAMwK,WAAW,GAAGL,UAAU,CAACM,SAAS,CAAC,CAAC;IAC1C,MAAMC,WAAW,GAAGP,UAAU,CAACQ,SAAS,CAAC,CAAC;IAC1C,IAAI,CAAC7J,MAAM,GAAGqJ,UAAU,CAACtE,QAAQ,CAAC,IAAI,CAAC7F,WAAW,CAAC;IACnD,IAAI,CAACe,aAAa,GAAGyJ,WAAW,CAAC,CAAC,CAAC,GAAGF,eAAe;IACrD,IAAI,CAACtJ,aAAa,GAAGwJ,WAAW,CAAC,CAAC,CAAC,GAAGF,eAAe;IACrD,IAAI,CAACrJ,YAAY,GAAGmJ,SAAS,CAAC,CAAC,CAAC,GAAGE,eAAe;IAClD,IAAI,CAACpJ,aAAa,GAAGiJ,UAAU,CAACS,UAAU,CAAC,CAAC;IAC5C,IAAI,CAACzJ,aAAa,GAAGuJ,WAAW,CAAC,CAAC,CAAC;IACnC,IAAI,CAACtJ,aAAa,GAAGsJ,WAAW,CAAC,CAAC,CAAC;IACnC,IAAI,CAACrJ,oBAAoB,GAAG8I,UAAU,CAACU,iBAAiB,CAAC,CAAC;IAC1D,IAAI,CAACvJ,cAAc,GAAG6I,UAAU,CAACW,WAAW,CAAC,CAAC;IAC9C,MAAMC,UAAU,GAAGZ,UAAU,CAACa,aAAa,CAAC,CAAC;IAC7C,IAAI,CAACzJ,WAAW,GAAG,CAChBwJ,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC/K,WAAW,GAAIsK,eAAe,EACnDS,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC/K,WAAW,GAAIsK,eAAe,CACrD;IACD,IAAI,CAAC9I,WAAW,GAAG4I,SAAS,CAAC,CAAC,CAAC,GAAGE,eAAe;EACnD;;EAEA;AACF;AACA;AACA;AACA;AACA;EACExE,YAAYA,CAACmF,SAAS,EAAE;IACtB,IAAI,CAACA,SAAS,EAAE;MACd,IAAI,CAACxJ,KAAK,GAAG,EAAE;IACjB,CAAC,MAAM;MACL,MAAMyJ,aAAa,GAAGD,SAAS,CAACvF,OAAO,CAAC,CAAC;MACzC,IAAI,CAACwF,aAAa,EAAE;QAClB,IAAI,CAACnJ,cAAc,GAAG,IAAI;MAC5B,CAAC,MAAM;QACL,MAAMoJ,kBAAkB,GAAGD,aAAa,CAAChC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAACnH,cAAc,GAAG;UACpBkG,SAAS,EAAEhK,WAAW,CACpBkN,kBAAkB,GAAGA,kBAAkB,GAAG7M,gBAC5C;QACF,CAAC;MACH;MACA,MAAM8M,eAAe,GAAGH,SAAS,CAACtF,SAAS,CAAC,CAAC;MAC7C,IAAI,CAACyF,eAAe,EAAE;QACpB,IAAI,CAACpJ,gBAAgB,GAAG,IAAI;MAC9B,CAAC,MAAM;QACL,MAAMqJ,oBAAoB,GAAGD,eAAe,CAAClC,QAAQ,CAAC,CAAC;QACvD,MAAMoC,sBAAsB,GAAGF,eAAe,CAAC/B,UAAU,CAAC,CAAC;QAC3D,MAAMkC,uBAAuB,GAAGH,eAAe,CAAC7B,WAAW,CAAC,CAAC;QAC7D,MAAMiC,6BAA6B,GACjCJ,eAAe,CAAC3B,iBAAiB,CAAC,CAAC;QACrC,MAAMgC,uBAAuB,GAAGL,eAAe,CAACzB,WAAW,CAAC,CAAC;QAC7D,MAAM+B,oBAAoB,GAAGN,eAAe,CAACvB,QAAQ,CAAC,CAAC;QACvD,MAAM8B,yBAAyB,GAAGP,eAAe,CAACrB,aAAa,CAAC,CAAC;QACjE,IAAI,CAAC/H,gBAAgB,GAAG;UACtBoG,OAAO,EACLkD,sBAAsB,KAAKtB,SAAS,GAChCsB,sBAAsB,GACtB9M,cAAc;UACpB8J,QAAQ,EAAEiD,uBAAuB,GAC7BA,uBAAuB,GACvB9M,eAAe;UACnB8J,cAAc,EAAEiD,6BAA6B,GACzCA,6BAA6B,GAC7B9M,qBAAqB;UACzB8J,QAAQ,EACNiD,uBAAuB,KAAKzB,SAAS,GACjCyB,uBAAuB,GACvB9M,eAAe;UACrB8J,SAAS,EACPiD,oBAAoB,KAAK1B,SAAS,GAC9B0B,oBAAoB,GACpB9M,gBAAgB;UACtB8J,UAAU,EACRiD,yBAAyB,KAAK3B,SAAS,GACnC2B,yBAAyB,GACzB9M,iBAAiB;UACvB8J,WAAW,EAAE1K,WAAW,CACtBoN,oBAAoB,GAAGA,oBAAoB,GAAGvM,kBAChD;QACF,CAAC;MACH;MACA,MAAM8M,QAAQ,GAAGX,SAAS,CAACY,OAAO,CAAC,CAAC;MACpC,MAAMC,WAAW,GAAGb,SAAS,CAACc,UAAU,CAAC,CAAC;MAC1C,MAAMC,WAAW,GAAGf,SAAS,CAACgB,UAAU,CAAC,CAAC;MAC1C,MAAMC,kBAAkB,GAAGjB,SAAS,CAACJ,iBAAiB,CAAC,CAAC;MACxD,MAAMsB,YAAY,GAAGlB,SAAS,CAACH,WAAW,CAAC,CAAC;MAC5C,MAAMsB,SAAS,GAAGnB,SAAS,CAACD,aAAa,CAAC,CAAC;MAC3C,MAAMqB,QAAQ,GAAGpB,SAAS,CAAClF,OAAO,CAAC,CAAC;MACpC,MAAMuG,aAAa,GAAGrB,SAAS,CAACsB,YAAY,CAAC,CAAC;MAC9C,MAAMC,gBAAgB,GAAGvB,SAAS,CAACwB,eAAe,CAAC,CAAC;MACpD,IAAI,CAACxK,UAAU,GAAG;QAChB8G,IAAI,EAAE6C,QAAQ,KAAK5B,SAAS,GAAG4B,QAAQ,GAAGrN,WAAW;QACrDuK,SAAS,EACPwD,aAAa,KAAKtC,SAAS,GAAGsC,aAAa,GAAGvN,gBAAgB;QAChEiK,YAAY,EACVwD,gBAAgB,KAAKxC,SAAS,GAC1BwC,gBAAgB,GAChBxN;MACR,CAAC;MACD,IAAI,CAACyC,KAAK,GACR4K,QAAQ,KAAKrC,SAAS,GAClB0C,KAAK,CAACC,OAAO,CAACN,QAAQ,CAAC,GACrBA,QAAQ,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,EAAEhK,CAAC,KAAM+J,GAAG,IAAI/J,CAAC,GAAG,CAAC,GAAG,GAAG,GAAGgK,CAAE,EAAE,EAAE,CAAC,GAC5DT,QAAQ,GACV,EAAE;MACR,IAAI,CAAC3K,YAAY,GACfoK,WAAW,KAAK9B,SAAS,GAAG,IAAI,CAAChK,WAAW,GAAG8L,WAAW,GAAG,CAAC;MAChE,IAAI,CAACnK,YAAY,GACfqK,WAAW,KAAKhC,SAAS,GAAG,IAAI,CAAChK,WAAW,GAAGgM,WAAW,GAAG,CAAC;MAChE,IAAI,CAACpK,mBAAmB,GACtBsK,kBAAkB,KAAKlC,SAAS,GAAGkC,kBAAkB,GAAG,KAAK;MAC/D,IAAI,CAACrK,aAAa,GAAGsK,YAAY,KAAKnC,SAAS,GAAGmC,YAAY,GAAG,CAAC;MAClE,IAAI,CAACrK,UAAU,GAAG,CAChB,IAAI,CAAC9B,WAAW,GAAGoM,SAAS,CAAC,CAAC,CAAC,EAC/B,IAAI,CAACpM,WAAW,GAAGoM,SAAS,CAAC,CAAC,CAAC,CAChC;IACH;EACF;AACF;AAEA,eAAe9M,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}