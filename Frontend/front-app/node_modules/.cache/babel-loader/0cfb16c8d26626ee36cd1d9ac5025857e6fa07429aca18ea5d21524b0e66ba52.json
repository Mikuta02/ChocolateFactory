{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport Comments from './Comments.vue';\nimport { useStore } from 'vuex';\nimport 'ol/ol.css';\nimport { Map, View } from 'ol';\nimport { Tile as TileLayer } from 'ol/layer';\nimport { OSM } from 'ol/source';\nimport { Vector as VectorLayer } from 'ol/layer'; // Import VectorLayer\nimport { Vector as VectorSource } from 'ol/source'; // Import VectorSource\nimport { Point } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Icon, Style } from 'ol/style';\nimport { fromLonLat } from 'ol/proj';\nexport default {\n  __name: 'FactoryDetails',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const factory = ref(null);\n    const chocolates = ref([]);\n    const approvedComments = ref([]);\n    const comments = ref([]);\n    const managerId = ref('');\n    const workers = ref([]);\n    const loadingChocolates = ref(false);\n    const showModal = ref(false);\n    const chocolateToDelete = ref(null);\n    const showDeleteFactoryModal = ref(false);\n    const showRegisterForm = ref(false);\n    const workerUsername = ref('');\n    const workerPassword = ref('');\n    const workerName = ref('');\n    const workerLastName = ref('');\n    const workerGender = ref('');\n    const workerBirthDate = ref('');\n    const isManagerOrAdmin = computed(() => {\n      const role = store.getters.userRole;\n      return role === 'Manager' || role === 'Administrator';\n    });\n    const isCustomer = computed(() => {\n      return store.getters.userRole === 'Customer';\n    });\n    onMounted(() => {\n      loadFactory();\n      loadComments();\n    });\n    function initializeMap() {\n      if (!factory.value) {\n        console.error('Factory data not available');\n        return;\n      }\n      console.log('Initializing map with factory data:', factory.value);\n      const factoryCoordinates = [factory.value.location.longitude, factory.value.location.latitude];\n      console.log('Factory coordinates:', factoryCoordinates);\n      const map = new Map({\n        target: 'map',\n        layers: [new TileLayer({\n          source: new OSM()\n        })],\n        view: new View({\n          center: fromLonLat(factoryCoordinates),\n          zoom: 16\n        })\n      });\n      const marker = new Feature({\n        geometry: new Point(fromLonLat(factoryCoordinates))\n      });\n      marker.setStyle(new Style({\n        image: new Icon({\n          src: 'https://openlayers.org/en/latest/examples/data/icon.png',\n          anchor: [0.5, 1]\n        })\n      }));\n      const vectorSource = new VectorSource({\n        features: [marker]\n      });\n      const vectorLayer = new VectorLayer({\n        source: vectorSource\n      });\n      map.addLayer(vectorLayer);\n      console.log('Map initialized');\n    }\n    function registerWorker() {\n      const userToRegister = {\n        username: workerUsername.value,\n        password: workerPassword.value,\n        name: workerName.value,\n        lastName: workerLastName.value,\n        gender: workerGender.value,\n        birthDate: workerBirthDate.value,\n        worksAtFactoryId: route.params.id\n      };\n      axios.post(`http://localhost:3001/api/signupworker`, userToRegister).then(response => {\n        showRegisterForm.value = false;\n      }).catch(error => {\n        console.error('There was an error registering the worker!', error);\n      });\n    }\n    function loadFactory() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/factories/${factoryId}`).then(response => {\n        factory.value = response.data;\n        loadChocolates(factoryId);\n        initializeMap();\n      }).catch(error => {\n        console.error('Error fetching factory details:', error);\n      });\n    }\n    function loadComments() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/comments/factory/${factoryId}`).then(response => {\n        comments.value = response.data;\n        approvedComments.value = comments.value.filter(comment => comment.status === 'approved');\n        console.log('Fetched comments:', comments.value);\n        console.log('Filtered approved comments:', approvedComments.value);\n      }).catch(error => {\n        console.error('Error fetching comments:', error);\n      });\n    }\n    function loadManager() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/users/managers/${factoryId}`).then(response => {\n        managerId.value = response.data.id;\n      }).catch(error => {\n        console.error('Error fetching manager details:', error);\n      });\n    }\n    function loadWorkers() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/users/workers/${factoryId}`).then(response => {\n        workers.value = response.data;\n      }).catch(error => {\n        console.error('Error fetching worker details:', error);\n      });\n    }\n    function loadChocolates(factoryId) {\n      loadingChocolates.value = true;\n      axios.get(`http://localhost:3001/api/chocolates?factoryId=${factoryId}`).then(response => {\n        chocolates.value = response.data.map(chocolate => ({\n          ...chocolate,\n          quantity: 1\n        }));\n        loadingChocolates.value = false;\n      }).catch(error => {\n        console.error('Error fetching chocolates:', error);\n        loadingChocolates.value = false;\n      });\n    }\n    function addNewChocolate() {\n      const factoryId = route.params.id;\n      router.push({\n        name: 'AddChocolate',\n        query: {\n          factoryId\n        }\n      });\n    }\n    function editChocolate(chocolateId) {\n      router.push({\n        name: 'EditChocolate',\n        params: {\n          factoryId: factory.value.id,\n          chocolateId\n        }\n      });\n    }\n    function editAmount(chocolateId) {\n      router.push({\n        name: 'EditAmount',\n        params: {\n          id: chocolateId,\n          factoryId: factory.value.id\n        }\n      });\n    }\n    function confirmDelete(id) {\n      chocolateToDelete.value = id;\n      showModal.value = true;\n    }\n    function deleteChocolate() {\n      axios.delete(`http://localhost:3001/api/chocolates/${chocolateToDelete.value}`).then(() => {\n        chocolates.value = chocolates.value.filter(chocolate => chocolate.id !== chocolateToDelete.value);\n        showModal.value = false;\n        chocolateToDelete.value = null;\n      }).catch(error => {\n        console.error('Error deleting chocolate:', error);\n      });\n    }\n    function cancelDelete() {\n      showModal.value = false;\n      chocolateToDelete.value = null;\n    }\n    function addToCart(chocolateId, quantity) {\n      const chocolate = chocolates.value.find(choc => choc.id === chocolateId);\n      if (quantity > chocolate.amount) {\n        alert(`Cannot add more than ${chocolate.amount} of this chocolate. Please adjust the quantity.`);\n        chocolate.quantity = chocolate.amount; // Reset quantity to max available\n        return;\n      }\n      const userId = store.getters.userId;\n      const tokenPayload = store.state.token ? JSON.parse(atob(store.state.token.split('.')[1])) : {};\n      const username = tokenPayload.username || '';\n      axios.post('http://localhost:3001/api/cart/add', {\n        userId,\n        username,\n        chocolateId,\n        quantity\n      }, {\n        headers: {\n          'Authorization': `Bearer ${store.state.token}`\n        }\n      }).then(response => {\n        console.log('Added to cart:', response.data);\n        alert('Chocolate successfully added to the cart.');\n        loadChocolates(route.params.id); // Ponovo učitaj čokolade nakon dodavanja u korpu\n      }).catch(error => {\n        console.error('Error adding to cart:', error);\n        alert('Failed to add chocolate to the cart.');\n      });\n    }\n    function getFactoryLogoUrl(path) {\n      return `http://localhost:3001/images/${path}`;\n    }\n    function getChocolatePictureUrl(path) {\n      return `http://localhost:3001/images/${path}`;\n    }\n    function goToAddComment() {\n      const factoryId = route.params.id;\n      router.push({\n        name: 'AddComment',\n        params: {\n          factoryId\n        }\n      });\n    }\n    function canEditAmount(chocolate) {\n      loadWorkers();\n      const loggedInUserId = store.getters.userId;\n      const role = store.getters.userRole;\n      const isWorker = workers.value.some(worker => worker.id === loggedInUserId);\n      return role === 'Worker' && isWorker;\n    }\n    function canEditChocolate(chocolate) {\n      loadManager();\n      const loggedInUserId = store.getters.userId;\n      const role = store.getters.userRole;\n      return role === 'Manager' && managerId.value === loggedInUserId;\n    }\n    function canDeleteFactory() {\n      const role = store.getters.userRole;\n      return role === 'Administrator';\n    }\n    function confirmDeleteFactory() {\n      showDeleteFactoryModal.value = true;\n    }\n    function cancelDeleteFactory() {\n      showDeleteFactoryModal.value = false;\n    }\n    function deleteFactory() {\n      const factoryId = route.params.id;\n      axios.delete(`http://localhost:3001/api/factories/${factoryId}`).then(() => {\n        showDeleteFactoryModal.value = false;\n        router.push('/factories');\n      }).catch(error => {});\n    }\n    const __returned__ = {\n      store,\n      route,\n      router,\n      factory,\n      chocolates,\n      approvedComments,\n      comments,\n      managerId,\n      workers,\n      loadingChocolates,\n      showModal,\n      chocolateToDelete,\n      showDeleteFactoryModal,\n      showRegisterForm,\n      workerUsername,\n      workerPassword,\n      workerName,\n      workerLastName,\n      workerGender,\n      workerBirthDate,\n      isManagerOrAdmin,\n      isCustomer,\n      initializeMap,\n      registerWorker,\n      loadFactory,\n      loadComments,\n      loadManager,\n      loadWorkers,\n      loadChocolates,\n      addNewChocolate,\n      editChocolate,\n      editAmount,\n      confirmDelete,\n      deleteChocolate,\n      cancelDelete,\n      addToCart,\n      getFactoryLogoUrl,\n      getChocolatePictureUrl,\n      goToAddComment,\n      canEditAmount,\n      canEditChocolate,\n      canDeleteFactory,\n      confirmDeleteFactory,\n      cancelDeleteFactory,\n      deleteFactory,\n      ref,\n      computed,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      Comments,\n      get useStore() {\n        return useStore;\n      },\n      get Map() {\n        return Map;\n      },\n      get View() {\n        return View;\n      },\n      get TileLayer() {\n        return TileLayer;\n      },\n      get OSM() {\n        return OSM;\n      },\n      get VectorLayer() {\n        return VectorLayer;\n      },\n      get VectorSource() {\n        return VectorSource;\n      },\n      get Point() {\n        return Point;\n      },\n      get Feature() {\n        return Feature;\n      },\n      get Icon() {\n        return Icon;\n      },\n      get Style() {\n        return Style;\n      },\n      get fromLonLat() {\n        return fromLonLat;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRoute","useRouter","axios","Comments","useStore","Map","View","Tile","TileLayer","OSM","Vector","VectorLayer","VectorSource","Point","Feature","Icon","Style","fromLonLat","store","route","router","factory","chocolates","approvedComments","comments","managerId","workers","loadingChocolates","showModal","chocolateToDelete","showDeleteFactoryModal","showRegisterForm","workerUsername","workerPassword","workerName","workerLastName","workerGender","workerBirthDate","isManagerOrAdmin","role","getters","userRole","isCustomer","loadFactory","loadComments","initializeMap","value","console","error","log","factoryCoordinates","location","longitude","latitude","map","target","layers","source","view","center","zoom","marker","geometry","setStyle","image","src","anchor","vectorSource","features","vectorLayer","addLayer","registerWorker","userToRegister","username","password","name","lastName","gender","birthDate","worksAtFactoryId","params","id","post","then","response","catch","factoryId","get","data","loadChocolates","filter","comment","status","loadManager","loadWorkers","chocolate","quantity","addNewChocolate","push","query","editChocolate","chocolateId","editAmount","confirmDelete","deleteChocolate","delete","cancelDelete","addToCart","find","choc","amount","alert","userId","tokenPayload","state","token","JSON","parse","atob","split","headers","getFactoryLogoUrl","path","getChocolatePictureUrl","goToAddComment","canEditAmount","loggedInUserId","isWorker","some","worker","canEditChocolate","canDeleteFactory","confirmDeleteFactory","cancelDeleteFactory","deleteFactory"],"sources":["C:/FTN/treca/drugi_sem/veb/chocolate-factoryapp/Frontend/front-app/src/components/FactoryDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"factory-details\" v-if=\"factory\">\r\n    <h1>DETAILED VIEW</h1>\r\n    <h2>{{ factory.name }}</h2>\r\n    <img :src=\"getFactoryLogoUrl(factory.logoPath)\" :alt=\"factory.name + ' logo'\" class=\"factory-logo\" />\r\n    <p>Working Hours: {{ factory.workingHours }}</p>\r\n    <p>Status: {{ factory.status }}</p>\r\n    <p>Location: {{ factory.location.address }}</p>\r\n    <p>Latitude: {{ factory.location.latitude }}</p>\r\n    <p>Longitude: {{ factory.location.longitude }}</p>\r\n    <p>Rating: {{ factory.rating }}</p>\r\n    <div id=\"map\" class=\"map\"></div>\r\n  \r\n    <h2>Chocolates</h2>\r\n    <ul v-if=\"chocolates.length\">\r\n      <li v-for=\"chocolate in chocolates\" :key=\"chocolate.id\" class=\"chocolate-item\">\r\n        <button @click=\"editChocolate(chocolate.id)\" v-if=\"canEditChocolate(chocolate)\" class=\"edit-button\">Edit</button>\r\n        <button @click=\"editAmount(chocolate.id)\" v-if=\"canEditAmount(chocolate)\" class=\"edit-amount-button\">Edit Amount</button>\r\n        <button @click=\"confirmDelete(chocolate.id)\" v-if=\"canEditChocolate(chocolate)\" class=\"delete-button\">X</button>\r\n        <img :src=\"getChocolatePictureUrl(chocolate.picturePath)\" :alt=\"chocolate.name + ' picture'\" class=\"chocolate-picture\" />\r\n        <div class=\"chocolate-details\">\r\n          <h3 class=\"chocolate-name\">{{ chocolate.name }}</h3>\r\n          <p>Type: {{ chocolate.chocolateType }}</p>\r\n          <p>Variety: {{ chocolate.chocolateVariety }}</p>\r\n          <p>Price: {{ chocolate.price }}</p>\r\n          <p>Grams: {{ chocolate.grams }}</p>\r\n          <p class=\"chocolate-description\">Description: {{ chocolate.description }}</p>\r\n          <p>Status: {{ chocolate.status }}</p>\r\n          <p>Amount: {{ chocolate.amount }}</p>\r\n          <div  v-if=\"isCustomer\">\r\n            <label for=\"quantity\">Quantity:</label>\r\n            <input type=\"number\" v-model.number=\"chocolate.quantity\" :max=\"chocolate.amount\" min=\"1\" />\r\n          </div>\r\n          <button v-if=\"isCustomer\" @click=\"addToCart(chocolate.id, chocolate.quantity)\" class=\"add-to-cart-button\">Add to Cart</button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <p v-else>No chocolates available for this factory.</p>\r\n      \r\n    <button @click.prevent=\"showRegisterForm = true\" v-if=\"canEditChocolate()\" class=\"add-button\">Register New Worker</button>\r\n\r\n    <div v-if=\"showRegisterForm\" class=\"register-worker-form\">\r\n      <h3>Register New Worker</h3>\r\n      <div>\r\n        <label>Username:</label>\r\n        <input type=\"text\" v-model=\"workerUsername\" placeholder=\"Username\" />\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input type=\"password\" v-model=\"workerPassword\" placeholder=\"Password\" />\r\n      </div>\r\n      <div>\r\n        <label>First Name:</label>\r\n        <input type=\"text\" v-model=\"workerName\" placeholder=\"First Name\" />\r\n      </div>\r\n      <div>\r\n        <label>Last Name:</label>\r\n        <input type=\"text\" v-model=\"workerLastName\" placeholder=\"Last Name\" />\r\n      </div>\r\n      <div>\r\n        <label>Gender:</label>\r\n        <input type=\"text\" v-model=\"workerGender\" placeholder=\"Gender\" />\r\n      </div>\r\n      <div>\r\n        <label>Birth Date:</label>\r\n        <input type=\"date\" v-model=\"workerBirthDate\" />\r\n      </div>\r\n      <button @click.prevent=\"registerWorker\" class=\"register-button\">Register Worker</button>\r\n    </div>\r\n\r\n\r\n    <button @click=\"addNewChocolate\" v-if=\"canEditChocolate()\" class=\"add-button\">Add New Chocolate</button>\r\n\r\n\r\n    <div v-if=\"showModal\" class=\"modal-overlay\">\r\n      <div class=\"modal\">\r\n        <p>Are you sure you want to remove this chocolate from the system?</p>\r\n        <button @click=\"deleteChocolate\" class=\"confirm-button\">Yes</button>\r\n        <button @click=\"cancelDelete\" class=\"cancel-button\">No</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <button v-if=\"canDeleteFactory()\" @click=\"confirmDeleteFactory\" class=\"delete-factory-button\">Delete Factory</button>\r\n\r\n    \r\n    <div v-if=\"showDeleteFactoryModal\" class=\"modal-overlay\">\r\n      <div class=\"modal\">\r\n        <p>Are you sure you want to delete this factory?</p>\r\n        <button @click=\"deleteFactory\" class=\"confirm-button\">Yes</button>\r\n        <button @click=\"cancelDeleteFactory\" class=\"cancel-button\">No</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n   \r\n    <Comments v-if=\"isManagerOrAdmin\" :factoryId=\"factory.id\" />\r\n    <p v-else>You do not have permission to view comments.</p>\r\n\r\n    <h2>Approved Comments</h2>\r\n    <div v-if=\"approvedComments.length\">\r\n      <div v-for=\"comment in approvedComments\" :key=\"comment.id\" class=\"comment-item\">\r\n        <p><strong>User:</strong> {{ comment.user.username }}</p>\r\n        <p><strong>Comment:</strong> {{ comment.text }}</p>\r\n        <p><strong>Rating:</strong> {{ comment.rating }}</p>\r\n      </div>\r\n    </div>\r\n    <p v-else>No approved comments available for this factory.</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref,computed,onMounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\nimport Comments from './Comments.vue'; \r\nimport { useStore } from 'vuex';\r\n\r\nimport 'ol/ol.css';\r\nimport { Map, View } from 'ol';\r\nimport { Tile as TileLayer } from 'ol/layer';\r\nimport { OSM } from 'ol/source';\r\nimport { Vector as VectorLayer } from 'ol/layer'; // Import VectorLayer\r\nimport { Vector as VectorSource } from 'ol/source'; // Import VectorSource\r\nimport { Point } from 'ol/geom';\r\nimport { Feature } from 'ol';\r\nimport { Icon, Style } from 'ol/style';\r\nimport { fromLonLat } from 'ol/proj';\r\n\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst factory = ref(null);\r\nconst chocolates = ref([]);\r\nconst approvedComments = ref([]);\r\nconst comments = ref([]);  \r\nconst managerId = ref('');\r\nconst workers = ref([]);\r\nconst loadingChocolates = ref(false);\r\nconst showModal = ref(false);\r\nconst chocolateToDelete = ref(null);\r\nconst showDeleteFactoryModal = ref(false);\r\n\r\nconst showRegisterForm = ref(false);\r\nconst workerUsername = ref('');\r\nconst workerPassword = ref('');\r\nconst workerName = ref('');\r\nconst workerLastName = ref('');\r\nconst workerGender = ref('');\r\nconst workerBirthDate = ref('');\r\n\r\nconst isManagerOrAdmin = computed(() => {\r\n  const role = store.getters.userRole;\r\n  return role === 'Manager' || role === 'Administrator';\r\n});\r\n\r\nconst isCustomer = computed(() => {\r\n  return store.getters.userRole === 'Customer';\r\n});\r\n\r\nonMounted(() => {\r\n  loadFactory();\r\n  loadComments();\r\n  \r\n});\r\n\r\nfunction initializeMap() {\r\n  if (!factory.value) {\r\n    console.error('Factory data not available');\r\n    return;\r\n  }\r\n  console.log('Initializing map with factory data:', factory.value);\r\n\r\n  const factoryCoordinates = [factory.value.location.longitude, factory.value.location.latitude];\r\n  console.log('Factory coordinates:', factoryCoordinates);\r\n\r\n  const map = new Map({\r\n    target: 'map',\r\n    layers: [\r\n      new TileLayer({\r\n        source: new OSM(),\r\n      }),\r\n    ],\r\n    view: new View({\r\n      center: fromLonLat(factoryCoordinates),\r\n      zoom: 16,\r\n    }),\r\n  });\r\n\r\n  const marker = new Feature({\r\n    geometry: new Point(fromLonLat(factoryCoordinates)),\r\n  });\r\n\r\n  marker.setStyle(new Style({\r\n    image: new Icon({\r\n      src: 'https://openlayers.org/en/latest/examples/data/icon.png',\r\n      anchor: [0.5, 1],\r\n    }),\r\n  }));\r\n\r\n  const vectorSource = new VectorSource({\r\n    features: [marker],\r\n  });\r\n\r\n  const vectorLayer = new VectorLayer({\r\n    source: vectorSource,\r\n  });\r\n\r\n  map.addLayer(vectorLayer);\r\n\r\n  console.log('Map initialized');\r\n}\r\n\r\nfunction registerWorker() {\r\n  const userToRegister = {\r\n    username: workerUsername.value,\r\n    password: workerPassword.value,\r\n    name: workerName.value,\r\n    lastName: workerLastName.value,\r\n    gender: workerGender.value,\r\n    birthDate: workerBirthDate.value,\r\n    worksAtFactoryId: route.params.id\r\n  };\r\n\r\n  axios.post(`http://localhost:3001/api/signupworker`, userToRegister)\r\n    .then(response => {\r\n      showRegisterForm.value = false;\r\n    })\r\n    .catch(error => {\r\n      console.error('There was an error registering the worker!', error);\r\n    });\r\n}\r\n\r\nfunction loadFactory() {\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/factories/${factoryId}`)\r\n    .then(response => {\r\n      factory.value = response.data;\r\n      loadChocolates(factoryId);\r\n      initializeMap();\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching factory details:', error);\r\n    });\r\n}\r\n\r\nfunction loadComments() {\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/comments/factory/${factoryId}`)\r\n    .then(response => {\r\n      comments.value = response.data;\r\n      approvedComments.value = comments.value.filter(comment => comment.status === 'approved');\r\n      console.log('Fetched comments:', comments.value);\r\n      console.log('Filtered approved comments:', approvedComments.value);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching comments:', error);\r\n    });\r\n}\r\n\r\n\r\nfunction loadManager(){\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/users/managers/${factoryId}`)\r\n  .then(response => {\r\n    managerId.value = response.data.id;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching manager details:', error);\r\n    });\r\n}\r\n\r\nfunction loadWorkers(){\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/users/workers/${factoryId}`)\r\n  .then(response => {\r\n    workers.value = response.data;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching worker details:', error);\r\n    });\r\n}\r\n\r\nfunction loadChocolates(factoryId) {\r\n  loadingChocolates.value = true;\r\n  axios.get(`http://localhost:3001/api/chocolates?factoryId=${factoryId}`)\r\n    .then(response => {\r\n      chocolates.value = response.data.map(chocolate => ({ ...chocolate, quantity: 1 }));\r\n      loadingChocolates.value = false;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching chocolates:', error);\r\n      loadingChocolates.value = false;\r\n    });\r\n}\r\n\r\nfunction addNewChocolate() {\r\n  const factoryId = route.params.id;\r\n  router.push({ name: 'AddChocolate', query: { factoryId } });\r\n}\r\n\r\nfunction editChocolate(chocolateId) {\r\n  router.push({ name: 'EditChocolate', params: { factoryId: factory.value.id, chocolateId } });\r\n}\r\n\r\nfunction editAmount(chocolateId) {\r\n  router.push({ name: 'EditAmount', params: { id: chocolateId, factoryId: factory.value.id } });\r\n}\r\n\r\nfunction confirmDelete(id) {\r\n  chocolateToDelete.value = id;\r\n  showModal.value = true;\r\n}\r\n\r\nfunction deleteChocolate() {\r\n  axios.delete(`http://localhost:3001/api/chocolates/${chocolateToDelete.value}`)\r\n    .then(() => {\r\n      chocolates.value = chocolates.value.filter(chocolate => chocolate.id !== chocolateToDelete.value);\r\n      showModal.value = false;\r\n      chocolateToDelete.value = null;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error deleting chocolate:', error);\r\n    });\r\n}\r\n\r\nfunction cancelDelete() {\r\n  showModal.value = false;\r\n  chocolateToDelete.value = null;\r\n}\r\n\r\nfunction addToCart(chocolateId, quantity) {\r\n  const chocolate = chocolates.value.find(choc => choc.id === chocolateId);\r\n  if (quantity > chocolate.amount) {\r\n    alert(`Cannot add more than ${chocolate.amount} of this chocolate. Please adjust the quantity.`);\r\n    chocolate.quantity = chocolate.amount; // Reset quantity to max available\r\n    return;\r\n  }\r\n\r\n  const userId = store.getters.userId;\r\n  const tokenPayload = store.state.token ? JSON.parse(atob(store.state.token.split('.')[1])) : {};\r\n  const username = tokenPayload.username || '';\r\n\r\n  axios.post('http://localhost:3001/api/cart/add', { userId, username, chocolateId, quantity }, {\r\n    headers: {\r\n      'Authorization': `Bearer ${store.state.token}`\r\n    }\r\n  })\r\n    .then(response => {\r\n      console.log('Added to cart:', response.data);\r\n      alert('Chocolate successfully added to the cart.');\r\n      loadChocolates(route.params.id); // Ponovo učitaj čokolade nakon dodavanja u korpu\r\n    })\r\n    .catch(error => {\r\n      console.error('Error adding to cart:', error);\r\n      alert('Failed to add chocolate to the cart.');\r\n    });\r\n}\r\n\r\nfunction getFactoryLogoUrl(path) {\r\n  return `http://localhost:3001/images/${path}`;\r\n}\r\n\r\nfunction getChocolatePictureUrl(path) {\r\n  return `http://localhost:3001/images/${path}`;\r\n}\r\n\r\nfunction goToAddComment() {\r\n  const factoryId = route.params.id;\r\n  router.push({ name: 'AddComment', params: { factoryId } });\r\n}\r\n\r\nfunction canEditAmount(chocolate) {\r\n  loadWorkers(); \r\n  const loggedInUserId = store.getters.userId;\r\n  const role = store.getters.userRole;\r\n  \r\n  const isWorker = workers.value.some(worker => worker.id === loggedInUserId);\r\n  \r\n  return role === 'Worker' && isWorker;\r\n}\r\n\r\nfunction canEditChocolate(chocolate) {\r\n  loadManager();\r\n  const loggedInUserId = store.getters.userId;\r\n  const role = store.getters.userRole;\r\n  return role === 'Manager' && managerId.value === loggedInUserId;\r\n}\r\n\r\nfunction canDeleteFactory(){\r\n  const role = store.getters.userRole;\r\n  return role === 'Administrator';\r\n}\r\n\r\n\r\nfunction confirmDeleteFactory() {\r\n  showDeleteFactoryModal.value = true;\r\n}\r\n\r\nfunction cancelDeleteFactory() {\r\n  showDeleteFactoryModal.value = false;\r\n}\r\n\r\nfunction deleteFactory() {\r\n  const factoryId = route.params.id;\r\n  axios.delete(`http://localhost:3001/api/factories/${factoryId}`)\r\n    .then(() => {\r\n      showDeleteFactoryModal.value = false;\r\n      router.push('/factories'); \r\n    })\r\n    .catch(error => {\r\n\r\n    });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.factory-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 20px;\r\n}\r\n.factory-logo {\r\n  width: 500px;\r\n  height: auto;\r\n  margin: 20px 0;\r\n}\r\n.chocolate-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 20px 0;\r\n  border: 1px solid #000;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n}\r\n.chocolate-picture {\r\n  width: 300px;\r\n  height: auto;\r\n  margin-right: 20px;\r\n}\r\n.chocolate-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n}\r\n.chocolate-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n.chocolate-description {\r\n  white-space: pre-line;\r\n}\r\n.delete-button, .edit-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  width: 30px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  color: white;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n.delete-button {\r\n  right: 45px;\r\n  background-color: red;\r\n}\r\n.edit-button {\r\n  right: 10px;\r\n  background-color: blue;\r\n}\r\n.add-button {\r\n  background-color: green;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n}\r\n.add-to-cart-button {\r\n  background-color: orange;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n.add-comment-button {\r\n  background-color: blue;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n}\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n.confirm-button, .cancel-button {\r\n  margin: 10px;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.confirm-button {\r\n  background-color: red;\r\n  color: white;\r\n}\r\n.cancel-button {\r\n  background-color: gray;\r\n  color: white;\r\n}\r\n\r\n.register-worker-form {\r\n  margin-top: 20px;\r\n  background-color: #e9ecef;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.register-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.register-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.edit-amount-button {\r\n  position: absolute;\r\n  top: 10px; \r\n  right: 10px; \r\n  background-color: purple;\r\n  width: 100px; \r\n  height: 30px; \r\n  border: none;\r\n  border-radius: 5px; \r\n  color: white;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.comment-item {\r\n  margin: 15px 0;\r\n  padding: 15px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  background-color: #ffffff; \r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); \r\n  transition: transform 0.2s, box-shadow 0.2s; \r\n}\r\n\r\n.comment-item:hover {\r\n  transform: translateY(-5px); \r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); \r\n}\r\n\r\n.comment-item p {\r\n  margin: 0;\r\n  padding: 5px 0;\r\n  color: #333333; \r\n  font-family: 'Arial', sans-serif; \r\n}\r\n\r\n.comment-item p strong {\r\n  color: #007bff; \r\n}\r\n\r\n.comment-item p:first-of-type {\r\n  font-size: 1.1em;\r\n  font-weight: bold; \r\n}\r\n\r\n.comment-item p:nth-of-type(2) {\r\n  font-size: 1em;\r\n  color: #555555; \r\n}\r\n\r\n.comment-item p:last-of-type {\r\n  font-size: 0.9em;\r\n  color: #777777; \r\n}\r\n\r\n\r\n.delete-factory-button {\r\n  background-color: red;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n}\r\n.map {\r\n  width: 100%;\r\n  height: 400px;\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}