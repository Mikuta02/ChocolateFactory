{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nconst role = \"Manager\";\nexport default {\n  __name: 'AddFactory',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const name = ref('');\n    const workingHours = ref('');\n    const status = ref('');\n    const latitude = ref('');\n    const longitude = ref('');\n    const address = ref('');\n    const logoPath = ref('');\n    const managerId = ref(0);\n    const rating = ref(0);\n    const managerUsername = ref('');\n    const managerPassword = ref('');\n    const managerName = ref('');\n    const managerLastName = ref('');\n    const managerGender = ref('');\n    const managerBirthDate = ref('');\n    const freeManagers = ref([]);\n    const latitudeError = ref('');\n    const longitudeError = ref('');\n    const addressError = ref('');\n    function validateAddress(address) {\n      const regex = /^[a-zA-Z0-9\\s,.'-]+, [a-zA-Z\\s]+ ?\\d{5}$/;\n      return regex.test(address);\n    }\n    function registerManager() {\n      axios.post(`http://localhost:3001/api/signup/${role}`, userToRegister).then(response => {\n        router.push('/login');\n      }).catch(error => {\n        console.error('There was an error registering!', error);\n      });\n    }\n    function loadManagers() {\n      axios.get('http://localhost:3001/api/users/freeManagers').then(response => {\n        console.log('Users fetched:', response.data);\n        freeManagers.value = response.data;\n      }).catch(error => {\n        console.error('There was an error fetching the users!', error);\n      });\n    }\n    function handleSubmit() {\n      latitudeError.value = '';\n      longitudeError.value = '';\n      addressError.value = '';\n      if (isNaN(latitude.value) || latitude.value === '') {\n        latitudeError.value = 'Latitude must be a number';\n        return;\n      }\n      if (isNaN(longitude.value) || longitude.value === '') {\n        longitudeError.value = 'Longitude must be a number';\n        return;\n      }\n      if (!validateAddress(address.value)) {\n        addressError.value = 'Invalid address format (e.g., Ulica 123, Grad, 11000 or Ulica 123, Grad 11000)';\n        return;\n      }\n      const newFactory = {\n        name: name.value,\n        workingHours: workingHours.value,\n        status: status.value,\n        latitude: parseFloat(latitude.value),\n        longitude: parseFloat(longitude.value),\n        address: address.value,\n        logoPath: logoPath.value,\n        rating: rating.value,\n        managerId: managerId.value\n      };\n      axios.post('http://localhost:3001/api/factories', newFactory).then(response => {\n        console.log('Factory successfully added:', response.data);\n        router.push('/factories');\n      }).catch(error => {\n        console.error('There was an error adding the factory!', error);\n      });\n    }\n    const __returned__ = {\n      router,\n      name,\n      workingHours,\n      status,\n      latitude,\n      longitude,\n      address,\n      logoPath,\n      managerId,\n      rating,\n      role,\n      managerUsername,\n      managerPassword,\n      managerName,\n      managerLastName,\n      managerGender,\n      managerBirthDate,\n      freeManagers,\n      latitudeError,\n      longitudeError,\n      addressError,\n      validateAddress,\n      registerManager,\n      loadManagers,\n      handleSubmit,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","role","router","name","workingHours","status","latitude","longitude","address","logoPath","managerId","rating","managerUsername","managerPassword","managerName","managerLastName","managerGender","managerBirthDate","freeManagers","latitudeError","longitudeError","addressError","validateAddress","regex","test","registerManager","post","userToRegister","then","response","push","catch","error","console","loadManagers","get","log","data","value","handleSubmit","isNaN","newFactory","parseFloat"],"sources":["C:/FTN/treca/drugi_sem/veb/chocolate-factoryapp/Frontend/front-app/src/components/AddFactory.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"handleSubmit\" class=\"add-factory-form\">\r\n    <h2>Add New Factory</h2>\r\n    <div>\r\n      <label>Name:</label>\r\n      <input type=\"text\" v-model=\"name\" placeholder=\"Factory Name\"/>\r\n    </div>\r\n    <div>\r\n      <label>Working Hours:</label>\r\n      <input type=\"text\" v-model=\"workingHours\" placeholder=\"e.g., 9am-5pm\"/>\r\n    </div>\r\n    <div>\r\n      <label>Status:</label>\r\n      <input type=\"text\" v-model=\"status\" placeholder=\"e.g., open/closed\"/>\r\n    </div>\r\n    <div>\r\n      <label>Latitude:</label>\r\n      <input type=\"number\" v-model=\"latitude\" step=\"any\" placeholder=\"e.g., 44.7866\"/>\r\n      <span v-if=\"latitudeError\" class=\"error\">{{ latitudeError }}</span>\r\n    </div>\r\n    <div>\r\n      <label>Longitude:</label>\r\n      <input type=\"number\" v-model=\"longitude\" step=\"any\" placeholder=\"e.g., 20.4489\"/>\r\n      <span v-if=\"longitudeError\" class=\"error\">{{ longitudeError }}</span>\r\n    </div>\r\n    <div>\r\n      <label>Address:</label>\r\n      <input type=\"text\" v-model=\"address\" placeholder=\"e.g., Ulica 123, Grad, 11000 or Ulica 123, Grad 11000\"/>\r\n      <span v-if=\"addressError\" class=\"error\">{{ addressError }}</span>\r\n    </div>\r\n    <div>\r\n      <label>Logo URL:</label>\r\n      <input type=\"text\" v-model=\"logoPath\" placeholder=\"e.g., http://example.com/logo.jpg\"/>\r\n    </div>\r\n    <div>\r\n      <label>Rating:</label>\r\n      <input type=\"number\" v-model=\"rating\" step=\"any\" placeholder=\"e.g., 4.5\"/>\r\n    </div>\r\n    <button type=\"submit\">Add Factory</button>\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst name = ref('');\r\nconst workingHours = ref('');\r\nconst status = ref('');\r\nconst latitude = ref('');\r\nconst longitude = ref('');\r\nconst address = ref('');\r\nconst logoPath = ref('');\r\nconst managerId = ref(0);\r\nconst rating = ref(0);\r\n\r\nconst role = \"Manager\";\r\n\r\nconst managerUsername = ref('');\r\nconst managerPassword = ref('');\r\nconst managerName = ref('');\r\nconst managerLastName = ref('');\r\nconst managerGender = ref('');\r\nconst managerBirthDate = ref('');\r\nconst freeManagers = ref([]);\r\n\r\nconst latitudeError = ref('');\r\nconst longitudeError = ref('');\r\nconst addressError = ref('');\r\n\r\nfunction validateAddress(address) {\r\n  const regex = /^[a-zA-Z0-9\\s,.'-]+, [a-zA-Z\\s]+ ?\\d{5}$/;\r\n  return regex.test(address);\r\n}\r\n\r\nfunction registerManager(){\r\n  axios.post(`http://localhost:3001/api/signup/${role}`, userToRegister)\r\n      .then(response => {\r\n        router.push('/login');\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error registering!', error);\r\n      });\r\n  }\r\n\r\nfunction loadManagers(){\r\n  axios.get('http://localhost:3001/api/users/freeManagers')\r\n      .then(response => {\r\n        console.log('Users fetched:', response.data);\r\n        freeManagers.value = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error fetching the users!', error);\r\n      });\r\n}\r\n\r\nfunction handleSubmit() {\r\n  latitudeError.value = '';\r\n  longitudeError.value = '';\r\n  addressError.value = '';\r\n\r\n  if (isNaN(latitude.value) || latitude.value === '') {\r\n    latitudeError.value = 'Latitude must be a number';\r\n    return;\r\n  }\r\n\r\n  if (isNaN(longitude.value) || longitude.value === '') {\r\n    longitudeError.value = 'Longitude must be a number';\r\n    return;\r\n  }\r\n\r\n  if (!validateAddress(address.value)) {\r\n    addressError.value = 'Invalid address format (e.g., Ulica 123, Grad, 11000 or Ulica 123, Grad 11000)';\r\n    return;\r\n  }\r\n\r\n  const newFactory = {\r\n    name: name.value,\r\n    workingHours: workingHours.value,\r\n    status: status.value,\r\n    latitude: parseFloat(latitude.value),\r\n    longitude: parseFloat(longitude.value),\r\n    address: address.value,\r\n    logoPath: logoPath.value,\r\n    rating: rating.value,\r\n    managerId: managerId.value\r\n  };\r\n\r\n  axios.post('http://localhost:3001/api/factories', newFactory)\r\n    .then(response => {\r\n      console.log('Factory successfully added:', response.data);\r\n      router.push('/factories');\r\n    })\r\n    .catch(error => {\r\n      console.error('There was an error adding the factory!', error);\r\n    });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.add-factory-form {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.add-factory-form h2 {\r\n  text-align: center;\r\n  color: #4b3832;\r\n  font-family: 'Arial', sans-serif;\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n  text-transform: uppercase; \r\n  font-style: italic;\r\n}\r\n\r\n.add-factory-form div {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.add-factory-form label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.add-factory-form input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.add-factory-form button {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n}\r\n\r\n.add-factory-form button:hover {\r\n  background-color: #3a9d70;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 0.8em;\r\n}\r\n</style>\r\n"],"mappings":";AA2CA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AAatC,MAAMC,IAAI,GAAG,SAAS;;;;;;;IAXtB,MAAMC,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,IAAI,GAAGL,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMM,YAAY,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMO,MAAM,GAAGP,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMQ,QAAQ,GAAGR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,SAAS,GAAGT,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMU,OAAO,GAAGV,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMW,QAAQ,GAAGX,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMY,SAAS,GAAGZ,GAAG,CAAC,CAAC,CAAC;IACxB,MAAMa,MAAM,GAAGb,GAAG,CAAC,CAAC,CAAC;IAIrB,MAAMc,eAAe,GAAGd,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMe,eAAe,GAAGf,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMgB,WAAW,GAAGhB,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMiB,eAAe,GAAGjB,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMkB,aAAa,GAAGlB,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMmB,gBAAgB,GAAGnB,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMoB,YAAY,GAAGpB,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMqB,aAAa,GAAGrB,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMsB,cAAc,GAAGtB,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMuB,YAAY,GAAGvB,GAAG,CAAC,EAAE,CAAC;IAE5B,SAASwB,eAAeA,CAACd,OAAO,EAAE;MAChC,MAAMe,KAAK,GAAG,0CAA0C;MACxD,OAAOA,KAAK,CAACC,IAAI,CAAChB,OAAO,CAAC;IAC5B;IAEA,SAASiB,eAAeA,CAAA,EAAE;MACxB1B,KAAK,CAAC2B,IAAI,CAAE,oCAAmCzB,IAAK,EAAC,EAAE0B,cAAc,CAAC,CACjEC,IAAI,CAACC,QAAQ,IAAI;QAChB3B,MAAM,CAAC4B,IAAI,CAAC,QAAQ,CAAC;MACvB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD,CAAC,CAAC;IACN;IAEF,SAASE,YAAYA,CAAA,EAAE;MACrBnC,KAAK,CAACoC,GAAG,CAAC,8CAA8C,CAAC,CACpDP,IAAI,CAACC,QAAQ,IAAI;QAChBI,OAAO,CAACG,GAAG,CAAC,gBAAgB,EAAEP,QAAQ,CAACQ,IAAI,CAAC;QAC5CnB,YAAY,CAACoB,KAAK,GAAGT,QAAQ,CAACQ,IAAI;MACpC,CAAC,CAAC,CACDN,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE,CAAC,CAAC;IACR;IAEA,SAASO,YAAYA,CAAA,EAAG;MACtBpB,aAAa,CAACmB,KAAK,GAAG,EAAE;MACxBlB,cAAc,CAACkB,KAAK,GAAG,EAAE;MACzBjB,YAAY,CAACiB,KAAK,GAAG,EAAE;MAEvB,IAAIE,KAAK,CAAClC,QAAQ,CAACgC,KAAK,CAAC,IAAIhC,QAAQ,CAACgC,KAAK,KAAK,EAAE,EAAE;QAClDnB,aAAa,CAACmB,KAAK,GAAG,2BAA2B;QACjD;MACF;MAEA,IAAIE,KAAK,CAACjC,SAAS,CAAC+B,KAAK,CAAC,IAAI/B,SAAS,CAAC+B,KAAK,KAAK,EAAE,EAAE;QACpDlB,cAAc,CAACkB,KAAK,GAAG,4BAA4B;QACnD;MACF;MAEA,IAAI,CAAChB,eAAe,CAACd,OAAO,CAAC8B,KAAK,CAAC,EAAE;QACnCjB,YAAY,CAACiB,KAAK,GAAG,gFAAgF;QACrG;MACF;MAEA,MAAMG,UAAU,GAAG;QACjBtC,IAAI,EAAEA,IAAI,CAACmC,KAAK;QAChBlC,YAAY,EAAEA,YAAY,CAACkC,KAAK;QAChCjC,MAAM,EAAEA,MAAM,CAACiC,KAAK;QACpBhC,QAAQ,EAAEoC,UAAU,CAACpC,QAAQ,CAACgC,KAAK,CAAC;QACpC/B,SAAS,EAAEmC,UAAU,CAACnC,SAAS,CAAC+B,KAAK,CAAC;QACtC9B,OAAO,EAAEA,OAAO,CAAC8B,KAAK;QACtB7B,QAAQ,EAAEA,QAAQ,CAAC6B,KAAK;QACxB3B,MAAM,EAAEA,MAAM,CAAC2B,KAAK;QACpB5B,SAAS,EAAEA,SAAS,CAAC4B;MACvB,CAAC;MAEDvC,KAAK,CAAC2B,IAAI,CAAC,qCAAqC,EAAEe,UAAU,CAAC,CAC1Db,IAAI,CAACC,QAAQ,IAAI;QAChBI,OAAO,CAACG,GAAG,CAAC,6BAA6B,EAAEP,QAAQ,CAACQ,IAAI,CAAC;QACzDnC,MAAM,CAAC4B,IAAI,CAAC,YAAY,CAAC;MAC3B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE,CAAC,CAAC;IACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}