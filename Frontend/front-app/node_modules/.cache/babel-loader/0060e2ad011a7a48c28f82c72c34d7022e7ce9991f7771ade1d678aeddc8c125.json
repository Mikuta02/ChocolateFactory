{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport { createStore } from 'vuex';\nconst store = createStore({\n  state: {\n    token: null,\n    loginButtonVisible: true // Dodajemo novi state za vidljivost dugmeta\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token;\n    },\n    clearToken(state) {\n      state.token = null;\n    },\n    setLoginButtonVisibility(state, isVisible) {\n      state.loginButtonVisible = isVisible;\n    }\n  },\n  actions: {\n    login({\n      commit\n    }, token) {\n      commit('setToken', token);\n    },\n    logout({\n      commit\n    }) {\n      commit('clearToken');\n    },\n    setLoginButtonVisibility({\n      commit\n    }, isVisible) {\n      commit('setLoginButtonVisibility', isVisible);\n    }\n  },\n  getters: {\n    isAuthenticated(state) {\n      return !!state.token;\n    },\n    userRole(state) {\n      if (state.token) {\n        const payload = JSON.parse(atob(state.token.split('.')[1]));\n        return payload.role;\n      }\n      return null;\n    },\n    loginButtonVisible(state) {\n      return state.loginButtonVisible;\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","token","loginButtonVisible","mutations","setToken","clearToken","setLoginButtonVisibility","isVisible","actions","login","commit","logout","getters","isAuthenticated","userRole","payload","JSON","parse","atob","split","role"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\n\r\nconst store = createStore({\r\n  state: {\r\n    token: null,\r\n    loginButtonVisible: true, // Dodajemo novi state za vidljivost dugmeta\r\n  },\r\n  mutations: {\r\n    setToken(state, token) {\r\n      state.token = token;\r\n    },\r\n    clearToken(state) {\r\n      state.token = null;\r\n    },\r\n    setLoginButtonVisibility(state, isVisible) {\r\n      state.loginButtonVisible = isVisible;\r\n    },\r\n  },\r\n  actions: {\r\n    login({ commit }, token) {\r\n      commit('setToken', token);\r\n    },\r\n    logout({ commit }) {\r\n      commit('clearToken');\r\n    },\r\n    setLoginButtonVisibility({ commit }, isVisible) {\r\n      commit('setLoginButtonVisibility', isVisible);\r\n    },\r\n  },\r\n  getters: {\r\n    isAuthenticated(state) {\r\n      return !!state.token;\r\n    },\r\n    userRole(state) {\r\n      if (state.token) {\r\n        const payload = JSON.parse(atob(state.token.split('.')[1]));\r\n        return payload.role;\r\n      }\r\n      return null;\r\n    },\r\n    loginButtonVisible(state) {\r\n      return state.loginButtonVisible;\r\n    },\r\n  },\r\n});\r\n\r\nexport default store;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,KAAK,EAAE;IACLC,KAAK,EAAE,IAAI;IACXC,kBAAkB,EAAE,IAAI,CAAE;EAC5B,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACJ,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDI,UAAUA,CAACL,KAAK,EAAE;MAChBA,KAAK,CAACC,KAAK,GAAG,IAAI;IACpB,CAAC;IACDK,wBAAwBA,CAACN,KAAK,EAAEO,SAAS,EAAE;MACzCP,KAAK,CAACE,kBAAkB,GAAGK,SAAS;IACtC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAET,KAAK,EAAE;MACvBS,MAAM,CAAC,UAAU,EAAET,KAAK,CAAC;IAC3B,CAAC;IACDU,MAAMA,CAAC;MAAED;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;IACDJ,wBAAwBA,CAAC;MAAEI;IAAO,CAAC,EAAEH,SAAS,EAAE;MAC9CG,MAAM,CAAC,0BAA0B,EAAEH,SAAS,CAAC;IAC/C;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,eAAeA,CAACb,KAAK,EAAE;MACrB,OAAO,CAAC,CAACA,KAAK,CAACC,KAAK;IACtB,CAAC;IACDa,QAAQA,CAACd,KAAK,EAAE;MACd,IAAIA,KAAK,CAACC,KAAK,EAAE;QACf,MAAMc,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAAClB,KAAK,CAACC,KAAK,CAACkB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,OAAOJ,OAAO,CAACK,IAAI;MACrB;MACA,OAAO,IAAI;IACb,CAAC;IACDlB,kBAAkBA,CAACF,KAAK,EAAE;MACxB,OAAOA,KAAK,CAACE,kBAAkB;IACjC;EACF;AACF,CAAC,CAAC;AAEF,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}