{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport Factories from '../components/Factories.vue';\nimport AddFactory from '../components/AddFactory.vue';\nimport FactoryDetails from '../components/FactoryDetails.vue';\nimport AddChocolate from '../components/AddChocolate.vue';\nimport LoginView from '../views/LoginView.vue'; // Importujte Login komponentu\n\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/factories',\n  name: 'Factories',\n  component: Factories,\n  meta: {\n    requiresAuth: true\n  } // Dodajte requiresAuth meta polje\n}, {\n  path: '/add-factory',\n  name: 'AddFactory',\n  component: AddFactory,\n  meta: {\n    requiresAuth: true\n  } // Dodajte requiresAuth meta polje\n}, {\n  path: '/factory-detailed/:id',\n  name: 'FactoryDetailed',\n  component: FactoryDetails,\n  props: true,\n  meta: {\n    requiresAuth: true\n  } // Dodajte requiresAuth meta polje\n}, {\n  path: '/add-chocolate',\n  name: 'AddChocolate',\n  component: AddChocolate,\n  props: route => ({\n    factoryId: route.query.factoryId\n  }),\n  meta: {\n    requiresAuth: true\n  } // Dodajte requiresAuth meta polje\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginView // Dodajte rutu za login stranicu\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!token) {\n      next('/login');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","Factories","AddFactory","FactoryDetails","AddChocolate","LoginView","routes","path","name","component","meta","requiresAuth","props","route","factoryId","query","router","history","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","matched","some","record"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomeView from '../views/HomeView.vue';\r\nimport Factories from '../components/Factories.vue';\r\nimport AddFactory from '../components/AddFactory.vue';\r\nimport FactoryDetails from '../components/FactoryDetails.vue';\r\nimport AddChocolate from '../components/AddChocolate.vue';\r\nimport LoginView from '../views/LoginView.vue'; // Importujte Login komponentu\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: HomeView,\r\n    meta: { requiresAuth: true } \r\n  },\r\n  {\r\n    path: '/factories',\r\n    name: 'Factories',\r\n    component: Factories,\r\n    meta: { requiresAuth: true } // Dodajte requiresAuth meta polje\r\n  },\r\n  {\r\n    path: '/add-factory',\r\n    name: 'AddFactory',\r\n    component: AddFactory,\r\n    meta: { requiresAuth: true } // Dodajte requiresAuth meta polje\r\n  },\r\n  {\r\n    path: '/factory-detailed/:id',\r\n    name: 'FactoryDetailed',\r\n    component: FactoryDetails,\r\n    props: true,\r\n    meta: { requiresAuth: true } // Dodajte requiresAuth meta polje\r\n  },\r\n  {\r\n    path: '/add-chocolate',\r\n    name: 'AddChocolate',\r\n    component: AddChocolate,\r\n    props: route => ({ factoryId: route.query.factoryId }),\r\n    meta: { requiresAuth: true } // Dodajte requiresAuth meta polje\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: LoginView // Dodajte rutu za login stranicu\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const token = localStorage.getItem('token');\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!token) {\r\n      next('/login');\r\n    } else {\r\n      next();\r\n    }\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;;AAEhD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAET,QAAQ;EACnBU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAER,SAAS;EACpBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEP,UAAU;EACrBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,EACD;EACEJ,IAAI,EAAE,uBAAuB;EAC7BC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEN,cAAc;EACzBS,KAAK,EAAE,IAAI;EACXF,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,EACD;EACEJ,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEL,YAAY;EACvBQ,KAAK,EAAEC,KAAK,KAAK;IAAEC,SAAS,EAAED,KAAK,CAACE,KAAK,CAACD;EAAU,CAAC,CAAC;EACtDJ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEJ,SAAS,CAAC;AACvB,CAAC,CACF;AAED,MAAMW,MAAM,GAAGlB,YAAY,CAAC;EAC1BmB,OAAO,EAAElB,gBAAgB,CAACmB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cd;AACF,CAAC,CAAC;AAEFU,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACpB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACc,KAAK,EAAE;MACVD,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}