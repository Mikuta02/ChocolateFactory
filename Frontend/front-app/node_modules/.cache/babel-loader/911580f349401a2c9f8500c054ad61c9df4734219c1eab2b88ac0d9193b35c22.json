{"ast":null,"code":"import axios from 'axios';\nimport SearchFilter from './SearchFilter.vue';\nexport default {\n  components: {\n    SearchFilter\n  },\n  data() {\n    return {\n      factories: []\n    };\n  },\n  created() {\n    this.fetchFactories();\n  },\n  methods: {\n    fetchFactories(params = {}) {\n      axios.get('http://localhost:3001/api/search/factories', {\n        params\n      }).then(response => {\n        this.factories = response.data;\n      }).catch(error => {\n        console.error('Error fetching factories:', error);\n      });\n    },\n    handleSearch(searchParams) {\n      this.fetchFactories(searchParams);\n    }\n  }\n};","map":{"version":3,"names":["axios","SearchFilter","components","data","factories","created","fetchFactories","methods","params","get","then","response","catch","error","console","handleSearch","searchParams"],"sources":["C:\\Programiranje\\veb\\projekat\\chocolate-factoryapp\\Frontend\\front-app\\src\\components\\Factories.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <SearchFilter @search=\"handleSearch\"/>\r\n    <ul v-if=\"factories.length\">\r\n      <li v-for=\"factory in factories\" :key=\"factory.id\">\r\n        <router-link :to=\"{ name: 'FactoryDetailed', params: { id: factory.id } }\">\r\n          {{ factory.name }}\r\n        </router-link>\r\n        - {{ factory.location.address }} - Rating: {{ factory.rating }}\r\n      </li>\r\n    </ul>\r\n    <p v-else>No factories found.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport SearchFilter from './SearchFilter.vue';\r\n\r\nexport default {\r\n  components: {\r\n    SearchFilter\r\n  },\r\n  data() {\r\n    return {\r\n      factories: []\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchFactories();\r\n  },\r\n  methods: {\r\n    fetchFactories(params = {}) {\r\n      axios.get('http://localhost:3001/api/search/factories', { params })\r\n        .then(response => {\r\n          this.factories = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching factories:', error);\r\n        });\r\n    },\r\n    handleSearch(searchParams) {\r\n      this.fetchFactories(searchParams);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  margin: 5px 0;\r\n}\r\n</style>\r\n"],"mappings":"AAgBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,YAAW,MAAO,oBAAoB;AAE7C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACPD,cAAcA,CAACE,MAAK,GAAI,CAAC,CAAC,EAAE;MAC1BR,KAAK,CAACS,GAAG,CAAC,4CAA4C,EAAE;QAAED;MAAO,CAAC,EAC/DE,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACP,SAAQ,GAAIO,QAAQ,CAACR,IAAI;MAChC,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN,CAAC;IACDE,YAAYA,CAACC,YAAY,EAAE;MACzB,IAAI,CAACV,cAAc,CAACU,YAAY,CAAC;IACnC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}