{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport Comments from './Comments.vue';\nimport { useStore } from 'vuex';\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport { fromLonLat } from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { Icon, Style } from 'ol/style';\nexport default {\n  __name: 'FactoryDetails',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const factory = ref(null);\n    const chocolates = ref([]);\n    const approvedComments = ref([]);\n    const comments = ref([]);\n    const managerId = ref('');\n    const workers = ref([]);\n    const loadingChocolates = ref(false);\n    const showModal = ref(false);\n    const chocolateToDelete = ref(null);\n    const showDeleteFactoryModal = ref(false);\n    const showRegisterForm = ref(false);\n    const workerUsername = ref('');\n    const workerPassword = ref('');\n    const workerName = ref('');\n    const workerLastName = ref('');\n    const workerGender = ref('');\n    const workerBirthDate = ref('');\n    const isManagerOrAdmin = computed(() => {\n      const role = store.getters.userRole;\n      return role === 'Manager' || role === 'Administrator';\n    });\n    const isCustomer = computed(() => {\n      return store.getters.userRole === 'Customer';\n    });\n    const filteredChocolates = computed(() => {\n      if (isCustomer.value) {\n        return chocolates.value.filter(chocolate => chocolate.amount > 0);\n      }\n      return chocolates.value;\n    });\n    onMounted(() => {\n      loadFactory();\n      loadComments();\n    });\n    function registerWorker() {\n      const userToRegister = {\n        username: workerUsername.value,\n        password: workerPassword.value,\n        name: workerName.value,\n        lastName: workerLastName.value,\n        gender: workerGender.value,\n        birthDate: workerBirthDate.value,\n        worksAtFactoryId: route.params.id\n      };\n      axios.post(`http://localhost:3001/api/signupworker`, userToRegister).then(response => {\n        showRegisterForm.value = false;\n      }).catch(error => {\n        console.error('There was an error registering the worker!', error);\n      });\n    }\n    function initMap() {\n      if (factory.value && factory.value.location) {\n        const coordinates = [factory.value.location.longitude, factory.value.location.latitude];\n        const transformedCoordinates = fromLonLat(coordinates);\n        const map = new Map({\n          target: 'map',\n          layers: [new TileLayer({\n            source: new OSM()\n          })],\n          view: new View({\n            center: transformedCoordinates,\n            zoom: 15\n          })\n        });\n        const iconFeature = new Feature({\n          geometry: new Point(transformedCoordinates)\n        });\n        const iconStyle = new Style({\n          image: new Icon({\n            anchor: [0.5, 1],\n            src: 'https://openlayers.org/en/latest/examples/data/icon.png'\n          })\n        });\n        iconFeature.setStyle(iconStyle);\n        const vectorSource = new VectorSource({\n          features: [iconFeature]\n        });\n        const vectorLayer = new VectorLayer({\n          source: vectorSource\n        });\n        map.addLayer(vectorLayer);\n      }\n    }\n    function loadFactory() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/factories/${factoryId}`).then(response => {\n        factory.value = response.data;\n        loadChocolates(factoryId);\n        initMap();\n      }).catch(error => {\n        console.error('Error fetching factory details:', error);\n      });\n    }\n    function loadComments() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/comments/factory/${factoryId}`).then(response => {\n        comments.value = response.data;\n        approvedComments.value = comments.value.filter(comment => comment.status === 'approved');\n        console.log('Fetched comments:', comments.value);\n        console.log('Filtered approved comments:', approvedComments.value);\n      }).catch(error => {\n        console.error('Error fetching comments:', error);\n      });\n    }\n    function loadManager() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/users/managers/${factoryId}`).then(response => {\n        managerId.value = response.data.id;\n      }).catch(error => {\n        console.error('Error fetching manager details:', error);\n      });\n    }\n    function loadWorkers() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/users/workers/${factoryId}`).then(response => {\n        workers.value = response.data;\n      }).catch(error => {\n        console.error('Error fetching worker details:', error);\n      });\n    }\n    function loadChocolates(factoryId) {\n      loadingChocolates.value = true;\n      axios.get(`http://localhost:3001/api/chocolates?factoryId=${factoryId}`).then(response => {\n        chocolates.value = response.data.map(chocolate => ({\n          ...chocolate,\n          quantity: 1\n        }));\n        loadingChocolates.value = false;\n      }).catch(error => {\n        console.error('Error fetching chocolates:', error);\n        loadingChocolates.value = false;\n      });\n    }\n    function addNewChocolate() {\n      const factoryId = route.params.id;\n      router.push({\n        name: 'AddChocolate',\n        query: {\n          factoryId\n        }\n      });\n    }\n    function editChocolate(chocolateId) {\n      router.push({\n        name: 'EditChocolate',\n        params: {\n          factoryId: factory.value.id,\n          chocolateId\n        }\n      });\n    }\n    function editAmount(chocolateId) {\n      router.push({\n        name: 'EditAmount',\n        params: {\n          id: chocolateId,\n          factoryId: factory.value.id\n        }\n      });\n    }\n    function confirmDelete(id) {\n      chocolateToDelete.value = id;\n      showModal.value = true;\n    }\n    function deleteChocolate() {\n      axios.delete(`http://localhost:3001/api/chocolates/${chocolateToDelete.value}`).then(() => {\n        chocolates.value = chocolates.value.filter(chocolate => chocolate.id !== chocolateToDelete.value);\n        showModal.value = false;\n        chocolateToDelete.value = null;\n      }).catch(error => {\n        console.error('Error deleting chocolate:', error);\n      });\n    }\n    function cancelDelete() {\n      showModal.value = false;\n      chocolateToDelete.value = null;\n    }\n    function addToCart(chocolateId, quantity) {\n      const chocolate = chocolates.value.find(choc => choc.id === chocolateId);\n      if (quantity > chocolate.amount) {\n        alert(`Cannot add more than ${chocolate.amount} of this chocolate. Please adjust the quantity.`);\n        chocolate.quantity = chocolate.amount; // Reset quantity to max available\n        return;\n      }\n      const userId = store.getters.userId;\n      const tokenPayload = store.state.token ? JSON.parse(atob(store.state.token.split('.')[1])) : {};\n      const username = tokenPayload.username || '';\n      axios.post('http://localhost:3001/api/cart/add', {\n        userId,\n        username,\n        chocolateId,\n        quantity\n      }, {\n        headers: {\n          'Authorization': `Bearer ${store.state.token}`\n        }\n      }).then(response => {\n        console.log('Added to cart:', response.data);\n        alert('Chocolate successfully added to the cart.');\n        loadChocolates(route.params.id); // Ponovo učitaj čokolade nakon dodavanja u korpu\n      }).catch(error => {\n        console.error('Error adding to cart:', error);\n        alert('Failed to add chocolate to the cart.');\n      });\n    }\n    function validateQuantity(chocolate) {\n      if (chocolate.quantity < 1) {\n        chocolate.quantity = 1;\n      }\n    }\n    function getFactoryLogoUrl(path) {\n      return `http://localhost:3001/images/${path}`;\n    }\n    function getChocolatePictureUrl(path) {\n      return `http://localhost:3001/images/${path}`;\n    }\n    function goToAddComment() {\n      const factoryId = route.params.id;\n      router.push({\n        name: 'AddComment',\n        params: {\n          factoryId\n        }\n      });\n    }\n    function canEditAmount(chocolate) {\n      loadWorkers();\n      const loggedInUserId = store.getters.userId;\n      const role = store.getters.userRole;\n      const isWorker = workers.value.some(worker => worker.id === loggedInUserId);\n      return role === 'Worker' && isWorker;\n    }\n    function canEditChocolate(chocolate) {\n      loadManager();\n      const loggedInUserId = store.getters.userId;\n      const role = store.getters.userRole;\n      return role === 'Manager' && managerId.value === loggedInUserId;\n    }\n    function canDeleteFactory() {\n      const role = store.getters.userRole;\n      return role === 'Administrator';\n    }\n    function confirmDeleteFactory() {\n      showDeleteFactoryModal.value = true;\n    }\n    function cancelDeleteFactory() {\n      showDeleteFactoryModal.value = false;\n    }\n    function deleteFactory() {\n      const factoryId = route.params.id;\n      axios.delete(`http://localhost:3001/api/factories/${factoryId}`).then(() => {\n        showDeleteFactoryModal.value = false;\n        router.push('/factories');\n      }).catch(error => {});\n    }\n    const __returned__ = {\n      store,\n      route,\n      router,\n      factory,\n      chocolates,\n      approvedComments,\n      comments,\n      managerId,\n      workers,\n      loadingChocolates,\n      showModal,\n      chocolateToDelete,\n      showDeleteFactoryModal,\n      showRegisterForm,\n      workerUsername,\n      workerPassword,\n      workerName,\n      workerLastName,\n      workerGender,\n      workerBirthDate,\n      isManagerOrAdmin,\n      isCustomer,\n      filteredChocolates,\n      registerWorker,\n      initMap,\n      loadFactory,\n      loadComments,\n      loadManager,\n      loadWorkers,\n      loadChocolates,\n      addNewChocolate,\n      editChocolate,\n      editAmount,\n      confirmDelete,\n      deleteChocolate,\n      cancelDelete,\n      addToCart,\n      validateQuantity,\n      getFactoryLogoUrl,\n      getChocolatePictureUrl,\n      goToAddComment,\n      canEditAmount,\n      canEditChocolate,\n      canDeleteFactory,\n      confirmDeleteFactory,\n      cancelDeleteFactory,\n      deleteFactory,\n      ref,\n      computed,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      Comments,\n      get useStore() {\n        return useStore;\n      },\n      get Map() {\n        return Map;\n      },\n      get View() {\n        return View;\n      },\n      get TileLayer() {\n        return TileLayer;\n      },\n      get OSM() {\n        return OSM;\n      },\n      get fromLonLat() {\n        return fromLonLat;\n      },\n      get Feature() {\n        return Feature;\n      },\n      get Point() {\n        return Point;\n      },\n      get VectorLayer() {\n        return VectorLayer;\n      },\n      get VectorSource() {\n        return VectorSource;\n      },\n      get Icon() {\n        return Icon;\n      },\n      get Style() {\n        return Style;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRoute","useRouter","axios","Comments","useStore","Map","View","TileLayer","OSM","fromLonLat","Feature","Point","VectorLayer","VectorSource","Icon","Style","store","route","router","factory","chocolates","approvedComments","comments","managerId","workers","loadingChocolates","showModal","chocolateToDelete","showDeleteFactoryModal","showRegisterForm","workerUsername","workerPassword","workerName","workerLastName","workerGender","workerBirthDate","isManagerOrAdmin","role","getters","userRole","isCustomer","filteredChocolates","value","filter","chocolate","amount","loadFactory","loadComments","registerWorker","userToRegister","username","password","name","lastName","gender","birthDate","worksAtFactoryId","params","id","post","then","response","catch","error","console","initMap","location","coordinates","longitude","latitude","transformedCoordinates","map","target","layers","source","view","center","zoom","iconFeature","geometry","iconStyle","image","anchor","src","setStyle","vectorSource","features","vectorLayer","addLayer","factoryId","get","data","loadChocolates","comment","status","log","loadManager","loadWorkers","quantity","addNewChocolate","push","query","editChocolate","chocolateId","editAmount","confirmDelete","deleteChocolate","delete","cancelDelete","addToCart","find","choc","alert","userId","tokenPayload","state","token","JSON","parse","atob","split","headers","validateQuantity","getFactoryLogoUrl","path","getChocolatePictureUrl","goToAddComment","canEditAmount","loggedInUserId","isWorker","some","worker","canEditChocolate","canDeleteFactory","confirmDeleteFactory","cancelDeleteFactory","deleteFactory"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/components/FactoryDetails.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\" class=\"map\"></div>\r\n  <div class=\"factory-details\" v-if=\"factory\">\r\n    <h1>DETAILED VIEW</h1>\r\n    <h2>{{ factory.name }}</h2>\r\n    <img :src=\"getFactoryLogoUrl(factory.logoPath)\" :alt=\"factory.name + ' logo'\" class=\"factory-logo\" />\r\n    <p>Working Hours: {{ factory.workingHours }}</p>\r\n    <p>Status: {{ factory.status }}</p>\r\n    <p>Location: {{ factory.location.address }}</p>\r\n    <p>Latitude: {{ factory.location.latitude }}</p>\r\n    <p>Longitude: {{ factory.location.longitude }}</p>\r\n    <p>Rating: {{ factory.rating }}</p>\r\n  \r\n    <h2>Chocolates</h2>\r\n    <ul v-if=\"chocolates.length\">\r\n      <li v-for=\"chocolate in filteredChocolates\" :key=\"chocolate.id\" class=\"chocolate-item\">\r\n        <button @click=\"editChocolate(chocolate.id)\" v-if=\"canEditChocolate(chocolate)\" class=\"edit-button\">Edit</button>\r\n        <button @click=\"editAmount(chocolate.id)\" v-if=\"canEditAmount(chocolate)\" class=\"edit-amount-button\">Edit Amount</button>\r\n        <button @click=\"confirmDelete(chocolate.id)\" v-if=\"canEditChocolate(chocolate)\" class=\"delete-button\">X</button>\r\n        <img :src=\"getChocolatePictureUrl(chocolate.picturePath)\" :alt=\"chocolate.name + ' picture'\" class=\"chocolate-picture\" />\r\n        <div class=\"chocolate-details\">\r\n          <h3 class=\"chocolate-name\">{{ chocolate.name }}</h3>\r\n          <p>Type: {{ chocolate.chocolateType }}</p>\r\n          <p>Variety: {{ chocolate.chocolateVariety }}</p>\r\n          <p>Price: {{ chocolate.price }}</p>\r\n          <p>Grams: {{ chocolate.grams }}</p>\r\n          <p class=\"chocolate-description\">Description: {{ chocolate.description }}</p>\r\n          <p>Status: {{ chocolate.status }}</p>\r\n          <p>Amount: {{ chocolate.amount }}</p>\r\n          <div v-if=\"isCustomer\">\r\n            <label for=\"quantity\">Quantity:</label>\r\n            <input type=\"number\" v-model.number=\"chocolate.quantity\" :max=\"chocolate.amount\" min=\"1\" @input=\"validateQuantity(chocolate)\" />\r\n          </div>\r\n          <button v-if=\"isCustomer\" @click=\"addToCart(chocolate.id, chocolate.quantity)\" class=\"add-to-cart-button\">Add to Cart</button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <p v-else>No chocolates available for this factory.</p>\r\n      \r\n    <button @click.prevent=\"showRegisterForm = true\" v-if=\"canEditChocolate()\" class=\"add-button\">Register New Worker</button>\r\n\r\n    <div v-if=\"showRegisterForm\" class=\"register-worker-form\">\r\n      <h3>Register New Worker</h3>\r\n      <div>\r\n        <label>Username:</label>\r\n        <input type=\"text\" v-model=\"workerUsername\" placeholder=\"Username\" />\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input type=\"password\" v-model=\"workerPassword\" placeholder=\"Password\" />\r\n      </div>\r\n      <div>\r\n        <label>First Name:</label>\r\n        <input type=\"text\" v-model=\"workerName\" placeholder=\"First Name\" />\r\n      </div>\r\n      <div>\r\n        <label>Last Name:</label>\r\n        <input type=\"text\" v-model=\"workerLastName\" placeholder=\"Last Name\" />\r\n      </div>\r\n      <div>\r\n        <label>Gender:</label>\r\n        <input type=\"text\" v-model=\"workerGender\" placeholder=\"Gender\" />\r\n      </div>\r\n      <div>\r\n        <label>Birth Date:</label>\r\n        <input type=\"date\" v-model=\"workerBirthDate\" />\r\n      </div>\r\n      <button @click.prevent=\"registerWorker\" class=\"register-button\">Register Worker</button>\r\n    </div>\r\n\r\n    <button @click=\"addNewChocolate\" v-if=\"canEditChocolate()\" class=\"add-button\">Add New Chocolate</button>\r\n\r\n    <div v-if=\"showModal\" class=\"modal-overlay\">\r\n      <div class=\"modal\">\r\n        <p>Are you sure you want to remove this chocolate from the system?</p>\r\n        <button @click=\"deleteChocolate\" class=\"confirm-button\">Yes</button>\r\n        <button @click=\"cancelDelete\" class=\"cancel-button\">No</button>\r\n      </div>\r\n    </div>\r\n\r\n    <button v-if=\"canDeleteFactory()\" @click=\"confirmDeleteFactory\" class=\"delete-factory-button\">Delete Factory</button>\r\n\r\n    <div v-if=\"showDeleteFactoryModal\" class=\"modal-overlay\">\r\n      <div class=\"modal\">\r\n        <p>Are you sure you want to delete this factory?</p>\r\n        <button @click=\"deleteFactory\" class=\"confirm-button\">Yes</button>\r\n        <button @click=\"cancelDeleteFactory\" class=\"cancel-button\">No</button>\r\n      </div>\r\n    </div>\r\n\r\n    <Comments v-if=\"isManagerOrAdmin\" :factoryId=\"factory.id\" />\r\n    <p v-else>You do not have permission to view comments.</p>\r\n\r\n    <h2>Approved Comments</h2>\r\n    <div v-if=\"approvedComments.length\">\r\n      <div v-for=\"comment in approvedComments\" :key=\"comment.id\" class=\"comment-item\">\r\n        <p><strong>User:</strong> {{ comment.user.username }}</p>\r\n        <p><strong>Comment:</strong> {{ comment.text }}</p>\r\n        <p><strong>Rating:</strong> {{ comment.rating }}</p>\r\n      </div>\r\n    </div>\r\n    <p v-else>No approved comments available for this factory.</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\nimport Comments from './Comments.vue'; \r\nimport { useStore } from 'vuex';\r\n\r\nimport 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport { Icon, Style } from 'ol/style';\r\n\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst factory = ref(null);\r\nconst chocolates = ref([]);\r\nconst approvedComments = ref([]);\r\nconst comments = ref([]);  \r\nconst managerId = ref('');\r\nconst workers = ref([]);\r\nconst loadingChocolates = ref(false);\r\nconst showModal = ref(false);\r\nconst chocolateToDelete = ref(null);\r\nconst showDeleteFactoryModal = ref(false);\r\n\r\nconst showRegisterForm = ref(false);\r\nconst workerUsername = ref('');\r\nconst workerPassword = ref('');\r\nconst workerName = ref('');\r\nconst workerLastName = ref('');\r\nconst workerGender = ref('');\r\nconst workerBirthDate = ref('');\r\n\r\nconst isManagerOrAdmin = computed(() => {\r\n  const role = store.getters.userRole;\r\n  return role === 'Manager' || role === 'Administrator';\r\n});\r\n\r\nconst isCustomer = computed(() => {\r\n  return store.getters.userRole === 'Customer';\r\n});\r\n\r\nconst filteredChocolates = computed(() => {\r\n  if (isCustomer.value) {\r\n    return chocolates.value.filter(chocolate => chocolate.amount > 0);\r\n  }\r\n  return chocolates.value;\r\n});\r\n\r\nonMounted(() => {\r\n  loadFactory();\r\n  loadComments();\r\n});\r\n\r\nfunction registerWorker() {\r\n  const userToRegister = {\r\n    username: workerUsername.value,\r\n    password: workerPassword.value,\r\n    name: workerName.value,\r\n    lastName: workerLastName.value,\r\n    gender: workerGender.value,\r\n    birthDate: workerBirthDate.value,\r\n    worksAtFactoryId: route.params.id\r\n  };\r\n\r\n  axios.post(`http://localhost:3001/api/signupworker`, userToRegister)\r\n    .then(response => {\r\n      showRegisterForm.value = false;\r\n    })\r\n    .catch(error => {\r\n      console.error('There was an error registering the worker!', error);\r\n    });\r\n}\r\n\r\nfunction initMap() {\r\n  if (factory.value && factory.value.location) {\r\n    const coordinates = [factory.value.location.longitude, factory.value.location.latitude];\r\n    const transformedCoordinates = fromLonLat(coordinates);\r\n\r\n    const map = new Map({\r\n      target: 'map',\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM()\r\n        })\r\n      ],\r\n      view: new View({\r\n        center: transformedCoordinates,\r\n        zoom: 15\r\n      })\r\n    });\r\n\r\n    const iconFeature = new Feature({\r\n      geometry: new Point(transformedCoordinates),\r\n    });\r\n\r\n    const iconStyle = new Style({\r\n      image: new Icon({\r\n        anchor: [0.5, 1],\r\n        src: 'https://openlayers.org/en/latest/examples/data/icon.png'\r\n      })\r\n    });\r\n\r\n    iconFeature.setStyle(iconStyle);\r\n\r\n    const vectorSource = new VectorSource({\r\n      features: [iconFeature],\r\n    });\r\n\r\n    const vectorLayer = new VectorLayer({\r\n      source: vectorSource,\r\n    });\r\n\r\n    map.addLayer(vectorLayer);\r\n  }\r\n}\r\n\r\nfunction loadFactory() {\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/factories/${factoryId}`)\r\n    .then(response => {\r\n      factory.value = response.data;\r\n      loadChocolates(factoryId);\r\n      initMap();\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching factory details:', error);\r\n    });\r\n}\r\n\r\nfunction loadComments() {\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/comments/factory/${factoryId}`)\r\n    .then(response => {\r\n      comments.value = response.data;\r\n      approvedComments.value = comments.value.filter(comment => comment.status === 'approved');\r\n      console.log('Fetched comments:', comments.value);\r\n      console.log('Filtered approved comments:', approvedComments.value);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching comments:', error);\r\n    });\r\n}\r\n\r\nfunction loadManager(){\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/users/managers/${factoryId}`)\r\n  .then(response => {\r\n    managerId.value = response.data.id;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching manager details:', error);\r\n    });\r\n}\r\n\r\nfunction loadWorkers(){\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/users/workers/${factoryId}`)\r\n  .then(response => {\r\n    workers.value = response.data;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching worker details:', error);\r\n    });\r\n}\r\n\r\nfunction loadChocolates(factoryId) {\r\n  loadingChocolates.value = true;\r\n  axios.get(`http://localhost:3001/api/chocolates?factoryId=${factoryId}`)\r\n    .then(response => {\r\n      chocolates.value = response.data.map(chocolate => ({ ...chocolate, quantity: 1 }));\r\n      loadingChocolates.value = false;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching chocolates:', error);\r\n      loadingChocolates.value = false;\r\n    });\r\n}\r\n\r\nfunction addNewChocolate() {\r\n  const factoryId = route.params.id;\r\n  router.push({ name: 'AddChocolate', query: { factoryId } });\r\n}\r\n\r\nfunction editChocolate(chocolateId) {\r\n  router.push({ name: 'EditChocolate', params: { factoryId: factory.value.id, chocolateId } });\r\n}\r\n\r\nfunction editAmount(chocolateId) {\r\n  router.push({ name: 'EditAmount', params: { id: chocolateId, factoryId: factory.value.id } });\r\n}\r\n\r\nfunction confirmDelete(id) {\r\n  chocolateToDelete.value = id;\r\n  showModal.value = true;\r\n}\r\n\r\nfunction deleteChocolate() {\r\n  axios.delete(`http://localhost:3001/api/chocolates/${chocolateToDelete.value}`)\r\n    .then(() => {\r\n      chocolates.value = chocolates.value.filter(chocolate => chocolate.id !== chocolateToDelete.value);\r\n      showModal.value = false;\r\n      chocolateToDelete.value = null;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error deleting chocolate:', error);\r\n    });\r\n}\r\n\r\nfunction cancelDelete() {\r\n  showModal.value = false;\r\n  chocolateToDelete.value = null;\r\n}\r\n\r\nfunction addToCart(chocolateId, quantity) {\r\n  const chocolate = chocolates.value.find(choc => choc.id === chocolateId);\r\n  if (quantity > chocolate.amount) {\r\n    alert(`Cannot add more than ${chocolate.amount} of this chocolate. Please adjust the quantity.`);\r\n    chocolate.quantity = chocolate.amount; // Reset quantity to max available\r\n    return;\r\n  }\r\n\r\n  const userId = store.getters.userId;\r\n  const tokenPayload = store.state.token ? JSON.parse(atob(store.state.token.split('.')[1])) : {};\r\n  const username = tokenPayload.username || '';\r\n\r\n  axios.post('http://localhost:3001/api/cart/add', { userId, username, chocolateId, quantity }, {\r\n    headers: {\r\n      'Authorization': `Bearer ${store.state.token}`\r\n    }\r\n  })\r\n    .then(response => {\r\n      console.log('Added to cart:', response.data);\r\n      alert('Chocolate successfully added to the cart.');\r\n      loadChocolates(route.params.id); // Ponovo učitaj čokolade nakon dodavanja u korpu\r\n    })\r\n    .catch(error => {\r\n      console.error('Error adding to cart:', error);\r\n      alert('Failed to add chocolate to the cart.');\r\n    });\r\n}\r\n\r\nfunction validateQuantity(chocolate) {\r\n  if (chocolate.quantity < 1) {\r\n    chocolate.quantity = 1;\r\n  }\r\n}\r\n\r\nfunction getFactoryLogoUrl(path) {\r\n  return `http://localhost:3001/images/${path}`;\r\n}\r\n\r\nfunction getChocolatePictureUrl(path) {\r\n  return `http://localhost:3001/images/${path}`;\r\n}\r\n\r\nfunction goToAddComment() {\r\n  const factoryId = route.params.id;\r\n  router.push({ name: 'AddComment', params: { factoryId } });\r\n}\r\n\r\nfunction canEditAmount(chocolate) {\r\n  loadWorkers(); \r\n  const loggedInUserId = store.getters.userId;\r\n  const role = store.getters.userRole;\r\n  \r\n  const isWorker = workers.value.some(worker => worker.id === loggedInUserId);\r\n  \r\n  return role === 'Worker' && isWorker;\r\n}\r\n\r\nfunction canEditChocolate(chocolate) {\r\n  loadManager();\r\n  const loggedInUserId = store.getters.userId;\r\n  const role = store.getters.userRole;\r\n  return role === 'Manager' && managerId.value === loggedInUserId;\r\n}\r\n\r\nfunction canDeleteFactory(){\r\n  const role = store.getters.userRole;\r\n  return role === 'Administrator';\r\n}\r\n\r\nfunction confirmDeleteFactory() {\r\n  showDeleteFactoryModal.value = true;\r\n}\r\n\r\nfunction cancelDeleteFactory() {\r\n  showDeleteFactoryModal.value = false;\r\n}\r\n\r\nfunction deleteFactory() {\r\n  const factoryId = route.params.id;\r\n  axios.delete(`http://localhost:3001/api/factories/${factoryId}`)\r\n    .then(() => {\r\n      showDeleteFactoryModal.value = false;\r\n      router.push('/factories'); \r\n    })\r\n    .catch(error => {\r\n\r\n    });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.factory-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 20px;\r\n}\r\n.factory-logo {\r\n  width: 500px;\r\n  height: auto;\r\n  margin: 20px 0;\r\n}\r\n.chocolate-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 20px 0;\r\n  border: 1px solid #000;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n}\r\n.chocolate-picture {\r\n  width: 300px;\r\n  height: auto;\r\n  margin-right: 20px;\r\n}\r\n.chocolate-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n}\r\n.chocolate-name {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n.chocolate-description {\r\n  white-space: pre-line;\r\n}\r\n.delete-button, .edit-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  width: 30px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  color: white;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n.delete-button {\r\n  right: 45px;\r\n  background-color: red;\r\n}\r\n.edit-button {\r\n  right: 10px;\r\n  background-color: blue;\r\n}\r\n.add-button {\r\n  background-color: green;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n}\r\n.add-to-cart-button {\r\n  background-color: orange;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n.add-comment-button {\r\n  background-color: blue;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n}\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n.confirm-button, .cancel-button {\r\n  margin: 10px;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.confirm-button {\r\n  background-color: red;\r\n  color: white;\r\n}\r\n.cancel-button {\r\n  background-color: gray;\r\n  color: white;\r\n}\r\n\r\n.register-worker-form {\r\n  margin-top: 20px;\r\n  background-color: #e9ecef;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.register-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.register-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.edit-amount-button {\r\n  position: absolute;\r\n  top: 10px; \r\n  right: 10px; \r\n  background-color: purple;\r\n  width: 100px; \r\n  height: 30px; \r\n  border: none;\r\n  border-radius: 5px; \r\n  color: white;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.comment-item {\r\n  margin: 15px 0;\r\n  padding: 15px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  background-color: #ffffff; \r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); \r\n  transition: transform 0.2s, box-shadow 0.2s; \r\n}\r\n\r\n.comment-item:hover {\r\n  transform: translateY(-5px); \r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); \r\n}\r\n\r\n.comment-item p {\r\n  margin: 0;\r\n  padding: 5px 0;\r\n  color: #333333; \r\n  font-family: 'Arial', sans-serif; \r\n}\r\n\r\n.comment-item p strong {\r\n  color: #007bff; \r\n}\r\n\r\n.comment-item p:first-of-type {\r\n  font-size: 1.1em;\r\n  font-weight: bold; \r\n}\r\n\r\n.comment-item p:nth-of-type(2) {\r\n  font-size: 1em;\r\n  color: #555555; \r\n}\r\n\r\n.comment-item p:last-of-type {\r\n  font-size: 0.9em;\r\n  color: #777777; \r\n}\r\n\r\n\r\n.delete-factory-button {\r\n  background-color: red;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n}\r\n.map {\r\n  width: 100%;\r\n  height: 400px;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}