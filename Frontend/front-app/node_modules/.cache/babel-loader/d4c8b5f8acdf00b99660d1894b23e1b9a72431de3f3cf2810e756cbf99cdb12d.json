{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * @module ol/renderer/vector\r\n */\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n\n/**\r\n * Feature callback. The callback will be called with three arguments. The first\r\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\r\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\r\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\r\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\r\n * @template T\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\r\n */\n\n/**\r\n * Tolerance for geometry simplification in device pixels.\r\n * @type {number}\r\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\r\n * @const\r\n * @type {Object<import(\"../geom/Geometry.js\").Type,\r\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\r\n *                         import(\"../style/Style.js\").default, Object): void>}\r\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\r\n * @return {number} Order.\r\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Squared pixel tolerance.\r\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Pixel tolerance.\r\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n * @param {number} [index] Render order index..\r\n * @return {boolean} `true` if style is loading.\r\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, transform, declutter, index) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance, transform, declutter, index);\n  return loading;\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n * @param {number} [index] Render order index..\r\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, transform, declutter, index) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, transform);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature, index, declutter);\n  }\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */geometry.getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom( /** @type {import(\"../geom/SimpleGeometry.js\").default} */geometry, feature, style.getRenderer(), style.getHitDetectionRenderer(), index);\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n * @param {number} [index] Render order index.\r\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, declutterBuilderGroup, index) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature, declutterBuilderGroup, index);\n  }\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, index) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, index) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, index, declutter) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText = declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, index, declutter) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText = declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}","map":{"version":3,"names":["ImageState","getUid","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","parseInt","getSquaredTolerance","resolution","pixelRatio","tolerance","getTolerance","builderGroup","geometry","style","feature","index","fillStyle","getFill","strokeStyle","getStroke","circleReplay","getBuilder","getZIndex","setFillStrokeStyle","drawCircle","textStyle","getText","textReplay","setTextStyle","drawText","renderFeature","replayGroup","squaredTolerance","listener","transform","declutter","loadingPromises","imageStyle","getImage","loading","imageState","getImageState","LOADED","ERROR","IDLE","load","push","ready","length","Promise","all","then","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","simplifyTransformed","renderer","getRenderer","renderGeometry","geometryRenderer","getType","geometries","getGeometries","i","ii","replay","drawCustom","getHitDetectionRenderer","declutterBuilderGroup","getGeometriesArray","lineStringReplay","drawLineString","drawMultiLineString","polygonReplay","drawMultiPolygon","hasText","declutterImageWithText","undefined","imageReplay","setImageStyle","drawPoint","hasImage","getOpacity","drawMultiPoint","drawPolygon"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/node_modules/ol/renderer/vector.js"],"sourcesContent":["/**\r\n * @module ol/renderer/vector\r\n */\r\nimport ImageState from '../ImageState.js';\r\nimport {getUid} from '../util.js';\r\n\r\n/**\r\n * Feature callback. The callback will be called with three arguments. The first\r\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\r\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\r\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\r\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\r\n * @template T\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\r\n */\r\n\r\n/**\r\n * Tolerance for geometry simplification in device pixels.\r\n * @type {number}\r\n */\r\nconst SIMPLIFY_TOLERANCE = 0.5;\r\n\r\n/**\r\n * @const\r\n * @type {Object<import(\"../geom/Geometry.js\").Type,\r\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\r\n *                         import(\"../style/Style.js\").default, Object): void>}\r\n */\r\nconst GEOMETRY_RENDERERS = {\r\n  'Point': renderPointGeometry,\r\n  'LineString': renderLineStringGeometry,\r\n  'Polygon': renderPolygonGeometry,\r\n  'MultiPoint': renderMultiPointGeometry,\r\n  'MultiLineString': renderMultiLineStringGeometry,\r\n  'MultiPolygon': renderMultiPolygonGeometry,\r\n  'GeometryCollection': renderGeometryCollectionGeometry,\r\n  'Circle': renderCircleGeometry,\r\n};\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\r\n * @return {number} Order.\r\n */\r\nexport function defaultOrder(feature1, feature2) {\r\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\r\n}\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Squared pixel tolerance.\r\n */\r\nexport function getSquaredTolerance(resolution, pixelRatio) {\r\n  const tolerance = getTolerance(resolution, pixelRatio);\r\n  return tolerance * tolerance;\r\n}\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Pixel tolerance.\r\n */\r\nexport function getTolerance(resolution, pixelRatio) {\r\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\r\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    circleReplay.drawCircle(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n * @param {number} [index] Render order index..\r\n * @return {boolean} `true` if style is loading.\r\n */\r\nexport function renderFeature(\r\n  replayGroup,\r\n  feature,\r\n  style,\r\n  squaredTolerance,\r\n  listener,\r\n  transform,\r\n  declutter,\r\n  index,\r\n) {\r\n  const loadingPromises = [];\r\n  const imageStyle = style.getImage();\r\n  if (imageStyle) {\r\n    let loading = true;\r\n    const imageState = imageStyle.getImageState();\r\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\r\n      loading = false;\r\n    } else {\r\n      if (imageState == ImageState.IDLE) {\r\n        imageStyle.load();\r\n      }\r\n    }\r\n    if (loading) {\r\n      loadingPromises.push(imageStyle.ready());\r\n    }\r\n  }\r\n  const fillStyle = style.getFill();\r\n  if (fillStyle && fillStyle.loading()) {\r\n    loadingPromises.push(fillStyle.ready());\r\n  }\r\n  const loading = loadingPromises.length > 0;\r\n  if (loading) {\r\n    Promise.all(loadingPromises).then(() => listener(null));\r\n  }\r\n  renderFeatureInternal(\r\n    replayGroup,\r\n    feature,\r\n    style,\r\n    squaredTolerance,\r\n    transform,\r\n    declutter,\r\n    index,\r\n  );\r\n\r\n  return loading;\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n * @param {number} [index] Render order index..\r\n */\r\nfunction renderFeatureInternal(\r\n  replayGroup,\r\n  feature,\r\n  style,\r\n  squaredTolerance,\r\n  transform,\r\n  declutter,\r\n  index,\r\n) {\r\n  const geometry = style.getGeometryFunction()(feature);\r\n  if (!geometry) {\r\n    return;\r\n  }\r\n  const simplifiedGeometry = geometry.simplifyTransformed(\r\n    squaredTolerance,\r\n    transform,\r\n  );\r\n  const renderer = style.getRenderer();\r\n  if (renderer) {\r\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\r\n  } else {\r\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\r\n    geometryRenderer(\r\n      replayGroup,\r\n      simplifiedGeometry,\r\n      style,\r\n      feature,\r\n      index,\r\n      declutter,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\r\n  if (geometry.getType() == 'GeometryCollection') {\r\n    const geometries =\r\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\r\n        geometry\r\n      ).getGeometries();\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\r\n    }\r\n    return;\r\n  }\r\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\r\n  replay.drawCustom(\r\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\r\n    feature,\r\n    style.getRenderer(),\r\n    style.getHitDetectionRenderer(),\r\n    index,\r\n  );\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderGeometryCollectionGeometry(\r\n  replayGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup,\r\n  index,\r\n) {\r\n  const geometries = geometry.getGeometriesArray();\r\n  let i, ii;\r\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\r\n    geometryRenderer(\r\n      replayGroup,\r\n      geometries[i],\r\n      style,\r\n      feature,\r\n      declutterBuilderGroup,\r\n      index,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderLineStringGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n) {\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    const lineStringReplay = builderGroup.getBuilder(\r\n      style.getZIndex(),\r\n      'LineString',\r\n    );\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawLineString(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderMultiLineStringGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n) {\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    const lineStringReplay = builderGroup.getBuilder(\r\n      style.getZIndex(),\r\n      'LineString',\r\n    );\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderMultiPolygonGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle || fillStyle) {\r\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n */\r\nfunction renderPointGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n  declutter,\r\n) {\r\n  const imageStyle = style.getImage();\r\n  const textStyle = style.getText();\r\n  const hasText = textStyle && textStyle.getText();\r\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\r\n  const declutterImageWithText =\r\n    declutter && imageStyle && hasText ? {} : undefined;\r\n  if (imageStyle) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\r\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\r\n    imageReplay.drawPoint(geometry, feature, index);\r\n  }\r\n  if (hasText) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n * @param {boolean} [declutter] Enable decluttering.\r\n */\r\nfunction renderMultiPointGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  index,\r\n  declutter,\r\n) {\r\n  const imageStyle = style.getImage();\r\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\r\n  const textStyle = style.getText();\r\n  const hasText = textStyle && textStyle.getText();\r\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\r\n  const declutterImageWithText =\r\n    declutter && hasImage && hasText ? {} : undefined;\r\n  if (hasImage) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\r\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\r\n    imageReplay.drawMultiPoint(geometry, feature, index);\r\n  }\r\n  if (hasText) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} [index] Render order index.\r\n */\r\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawPolygon(geometry, feature, index);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature, index);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}