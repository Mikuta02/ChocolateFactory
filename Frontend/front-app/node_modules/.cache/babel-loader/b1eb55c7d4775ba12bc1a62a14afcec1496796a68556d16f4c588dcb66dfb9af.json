{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport Comments from './Comments.vue';\nimport { useStore } from 'vuex';\nimport 'ol/ol.css';\nimport { Map, View } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport { fromLonLat } from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorSource from 'ol/source/Vector';\nimport VectorLayer from 'ol/layer/Vector';\nimport { Style, Icon } from 'ol/style';\nexport default {\n  __name: 'FactoryDetails',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const factory = ref(null);\n    const chocolates = ref([]);\n    const approvedComments = ref([]);\n    const comments = ref([]);\n    const managerId = ref('');\n    const workers = ref([]);\n    const loadingChocolates = ref(false);\n    const showModal = ref(false);\n    const chocolateToDelete = ref(null);\n    const showDeleteFactoryModal = ref(false);\n    const showRegisterForm = ref(false);\n    const workerUsername = ref('');\n    const workerPassword = ref('');\n    const workerName = ref('');\n    const workerLastName = ref('');\n    const workerGender = ref('');\n    const workerBirthDate = ref('');\n    const isManagerOrAdmin = computed(() => {\n      const role = store.getters.userRole;\n      return role === 'Manager' || role === 'Administrator';\n    });\n    const isCustomer = computed(() => {\n      return store.getters.userRole === 'Customer';\n    });\n    onMounted(() => {\n      loadFactory();\n      loadComments();\n    });\n    function registerWorker() {\n      const userToRegister = {\n        username: workerUsername.value,\n        password: workerPassword.value,\n        name: workerName.value,\n        lastName: workerLastName.value,\n        gender: workerGender.value,\n        birthDate: workerBirthDate.value,\n        worksAtFactoryId: route.params.id\n      };\n      axios.post(`http://localhost:3001/api/signupworker`, userToRegister).then(response => {\n        showRegisterForm.value = false;\n      }).catch(error => {\n        console.error('There was an error registering the worker!', error);\n      });\n    }\n    function loadFactory() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/factories/${factoryId}`).then(response => {\n        factory.value = response.data;\n        loadChocolates(factoryId);\n        initializeMap(response.data.location.latitude, response.data.location.longitude);\n      }).catch(error => {\n        console.error('Error fetching factory details:', error);\n      });\n    }\n    function loadComments() {\n      const factoryId = route.params.id;\n      axios.get(`http://localhost:3001/api/comments/factory/${factoryId}`).then(response => {\n        comments.value = response.data;\n        approvedComments.value = comments.value.filter(comment => comment.status === 'approved');\n        console.log('Fetched comments:', comments.value);\n        console.log('Filtered approved comments:', approvedComments.value);\n      }).catch(error => {\n        console.error('Error fetching comments:', error);\n      });\n    }\n    function loadChocolates(factoryId) {\n      axios.get(`http://localhost:3001/api/factories/${factoryId}/chocolates`).then(response => {\n        chocolates.value = response.data;\n        loadingChocolates.value = false;\n      }).catch(error => {\n        console.error('Error fetching chocolates:', error);\n        loadingChocolates.value = false;\n      });\n    }\n    function addNewChocolate() {\n      router.push(`/factory/${route.params.id}/new-chocolate`);\n    }\n    function canEditChocolate() {\n      return store.getters.userRole === 'Administrator' || store.getters.userRole === 'Manager';\n    }\n    function editChocolate(chocolateId) {\n      router.push(`/chocolate/${chocolateId}/edit`);\n    }\n    function editAmount(chocolateId) {\n      router.push(`/chocolate/${chocolateId}/edit-amount`);\n    }\n    function canEditAmount(chocolate) {\n      return store.getters.userRole === 'Administrator' || store.getters.userRole === 'Manager' && chocolate.status === 'approved';\n    }\n    function confirmDelete(chocolateId) {\n      showModal.value = true;\n      chocolateToDelete.value = chocolateId;\n    }\n    function deleteChocolate() {\n      const factoryId = route.params.id;\n      axios.delete(`http://localhost:3001/api/factories/${factoryId}/chocolates/${chocolateToDelete.value}`).then(() => {\n        chocolates.value = chocolates.value.filter(chocolate => chocolate.id !== chocolateToDelete.value);\n        showModal.value = false;\n      }).catch(error => {\n        console.error('Error deleting chocolate:', error);\n      });\n    }\n    function cancelDelete() {\n      showModal.value = false;\n      chocolateToDelete.value = null;\n    }\n    function confirmDeleteFactory() {\n      showDeleteFactoryModal.value = true;\n    }\n    function deleteFactory() {\n      const factoryId = route.params.id;\n      axios.delete(`http://localhost:3001/api/factories/${factoryId}`).then(() => {\n        router.push('/factories');\n      }).catch(error => {\n        console.error('Error deleting factory:', error);\n      });\n    }\n    function cancelDeleteFactory() {\n      showDeleteFactoryModal.value = false;\n    }\n    function getFactoryLogoUrl(logoPath) {\n      return `http://localhost:3001/images/factory-logos/${logoPath}`;\n    }\n    function getChocolatePictureUrl(picturePath) {\n      return `http://localhost:3001/images/chocolates/${picturePath}`;\n    }\n    function addToCart(chocolateId, quantity) {\n      store.dispatch('addToCart', {\n        chocolateId,\n        quantity\n      });\n    }\n    function initializeMap(latitude, longitude) {\n      const map = new Map({\n        target: 'factory-map',\n        layers: [new TileLayer({\n          source: new OSM()\n        })],\n        view: new View({\n          center: fromLonLat([longitude, latitude]),\n          zoom: 14\n        })\n      });\n      const marker = new Feature({\n        geometry: new Point(fromLonLat([longitude, latitude]))\n      });\n      const iconStyle = new Style({\n        image: new Icon({\n          src: 'https://openlayers.org/en/v4.6.5/examples/data/icon.png',\n          // Example icon, you can replace it with your own\n          anchor: [0.5, 1]\n        })\n      });\n      marker.setStyle(iconStyle);\n      const vectorSource = new VectorSource({\n        features: [marker]\n      });\n      const vectorLayer = new VectorLayer({\n        source: vectorSource\n      });\n      map.addLayer(vectorLayer);\n    }\n    const __returned__ = {\n      store,\n      route,\n      router,\n      factory,\n      chocolates,\n      approvedComments,\n      comments,\n      managerId,\n      workers,\n      loadingChocolates,\n      showModal,\n      chocolateToDelete,\n      showDeleteFactoryModal,\n      showRegisterForm,\n      workerUsername,\n      workerPassword,\n      workerName,\n      workerLastName,\n      workerGender,\n      workerBirthDate,\n      isManagerOrAdmin,\n      isCustomer,\n      registerWorker,\n      loadFactory,\n      loadComments,\n      loadChocolates,\n      addNewChocolate,\n      canEditChocolate,\n      editChocolate,\n      editAmount,\n      canEditAmount,\n      confirmDelete,\n      deleteChocolate,\n      cancelDelete,\n      confirmDeleteFactory,\n      deleteFactory,\n      cancelDeleteFactory,\n      getFactoryLogoUrl,\n      getChocolatePictureUrl,\n      addToCart,\n      initializeMap,\n      ref,\n      computed,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      Comments,\n      get useStore() {\n        return useStore;\n      },\n      get Map() {\n        return Map;\n      },\n      get View() {\n        return View;\n      },\n      get TileLayer() {\n        return TileLayer;\n      },\n      get OSM() {\n        return OSM;\n      },\n      get fromLonLat() {\n        return fromLonLat;\n      },\n      get Feature() {\n        return Feature;\n      },\n      get Point() {\n        return Point;\n      },\n      get VectorSource() {\n        return VectorSource;\n      },\n      get VectorLayer() {\n        return VectorLayer;\n      },\n      get Style() {\n        return Style;\n      },\n      get Icon() {\n        return Icon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRoute","useRouter","axios","Comments","useStore","Map","View","TileLayer","OSM","fromLonLat","Feature","Point","VectorSource","VectorLayer","Style","Icon","store","route","router","factory","chocolates","approvedComments","comments","managerId","workers","loadingChocolates","showModal","chocolateToDelete","showDeleteFactoryModal","showRegisterForm","workerUsername","workerPassword","workerName","workerLastName","workerGender","workerBirthDate","isManagerOrAdmin","role","getters","userRole","isCustomer","loadFactory","loadComments","registerWorker","userToRegister","username","value","password","name","lastName","gender","birthDate","worksAtFactoryId","params","id","post","then","response","catch","error","console","factoryId","get","data","loadChocolates","initializeMap","location","latitude","longitude","filter","comment","status","log","addNewChocolate","push","canEditChocolate","editChocolate","chocolateId","editAmount","canEditAmount","chocolate","confirmDelete","deleteChocolate","delete","cancelDelete","confirmDeleteFactory","deleteFactory","cancelDeleteFactory","getFactoryLogoUrl","logoPath","getChocolatePictureUrl","picturePath","addToCart","quantity","dispatch","map","target","layers","source","view","center","zoom","marker","geometry","iconStyle","image","src","anchor","setStyle","vectorSource","features","vectorLayer","addLayer"],"sources":["C:/FTN/treca/drugi_sem/veb/chocolate-factoryapp/Frontend/front-app/src/components/FactoryDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"factory-details\" v-if=\"factory\">\r\n    <h1>DETAILED VIEW</h1>\r\n    <h2>{{ factory.name }}</h2>\r\n    <img :src=\"getFactoryLogoUrl(factory.logoPath)\" :alt=\"factory.name + ' logo'\" class=\"factory-logo\" />\r\n    <p>Working Hours: {{ factory.workingHours }}</p>\r\n    <p>Status: {{ factory.status }}</p>\r\n    <p>Location: {{ factory.location.address }}</p>\r\n    <p>Latitude: {{ factory.location.latitude }}</p>\r\n    <p>Longitude: {{ factory.location.longitude }}</p>\r\n    <p>Rating: {{ factory.rating }}</p>\r\n    \r\n    <div id=\"factory-map\" class=\"map\"></div>\r\n    \r\n    <h2>Chocolates</h2>\r\n    <ul v-if=\"chocolates.length\">\r\n      <li v-for=\"chocolate in chocolates\" :key=\"chocolate.id\" class=\"chocolate-item\">\r\n        <button @click=\"editChocolate(chocolate.id)\" v-if=\"canEditChocolate(chocolate)\" class=\"edit-button\">Edit</button>\r\n        <button @click=\"editAmount(chocolate.id)\" v-if=\"canEditAmount(chocolate)\" class=\"edit-amount-button\">Edit Amount</button>\r\n        <button @click=\"confirmDelete(chocolate.id)\" v-if=\"canEditChocolate(chocolate)\" class=\"delete-button\">X</button>\r\n        <img :src=\"getChocolatePictureUrl(chocolate.picturePath)\" :alt=\"chocolate.name + ' picture'\" class=\"chocolate-picture\" />\r\n        <div class=\"chocolate-details\">\r\n          <h3 class=\"chocolate-name\">{{ chocolate.name }}</h3>\r\n          <p>Type: {{ chocolate.chocolateType }}</p>\r\n          <p>Variety: {{ chocolate.chocolateVariety }}</p>\r\n          <p>Price: {{ chocolate.price }}</p>\r\n          <p>Grams: {{ chocolate.grams }}</p>\r\n          <p class=\"chocolate-description\">Description: {{ chocolate.description }}</p>\r\n          <p>Status: {{ chocolate.status }}</p>\r\n          <p>Amount: {{ chocolate.amount }}</p>\r\n          <div v-if=\"isCustomer\">\r\n            <label for=\"quantity\">Quantity:</label>\r\n            <input type=\"number\" v-model.number=\"chocolate.quantity\" :max=\"chocolate.amount\" min=\"1\" />\r\n          </div>\r\n          <button v-if=\"isCustomer\" @click=\"addToCart(chocolate.id, chocolate.quantity)\" class=\"add-to-cart-button\">Add to Cart</button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <p v-else>No chocolates available for this factory.</p>\r\n      \r\n    <button @click.prevent=\"showRegisterForm = true\" v-if=\"canEditChocolate()\" class=\"add-button\">Register New Worker</button>\r\n\r\n    <div v-if=\"showRegisterForm\" class=\"register-worker-form\">\r\n      <h3>Register New Worker</h3>\r\n      <div>\r\n        <label>Username:</label>\r\n        <input type=\"text\" v-model=\"workerUsername\" placeholder=\"Username\" />\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input type=\"password\" v-model=\"workerPassword\" placeholder=\"Password\" />\r\n      </div>\r\n      <div>\r\n        <label>First Name:</label>\r\n        <input type=\"text\" v-model=\"workerName\" placeholder=\"First Name\" />\r\n      </div>\r\n      <div>\r\n        <label>Last Name:</label>\r\n        <input type=\"text\" v-model=\"workerLastName\" placeholder=\"Last Name\" />\r\n      </div>\r\n      <div>\r\n        <label>Gender:</label>\r\n        <input type=\"text\" v-model=\"workerGender\" placeholder=\"Gender\" />\r\n      </div>\r\n      <div>\r\n        <label>Birth Date:</label>\r\n        <input type=\"date\" v-model=\"workerBirthDate\" />\r\n      </div>\r\n      <button @click.prevent=\"registerWorker\" class=\"register-button\">Register Worker</button>\r\n    </div>\r\n\r\n    <button @click=\"addNewChocolate\" v-if=\"canEditChocolate()\" class=\"add-button\">Add New Chocolate</button>\r\n\r\n    <div v-if=\"showModal\" class=\"modal-overlay\">\r\n      <div class=\"modal\">\r\n        <p>Are you sure you want to remove this chocolate from the system?</p>\r\n        <button @click=\"deleteChocolate\" class=\"confirm-button\">Yes</button>\r\n        <button @click=\"cancelDelete\" class=\"cancel-button\">No</button>\r\n      </div>\r\n    </div>\r\n\r\n    <button v-if=\"canDeleteFactory()\" @click=\"confirmDeleteFactory\" class=\"delete-factory-button\">Delete Factory</button>\r\n\r\n    <div v-if=\"showDeleteFactoryModal\" class=\"modal-overlay\">\r\n      <div class=\"modal\">\r\n        <p>Are you sure you want to delete this factory?</p>\r\n        <button @click=\"deleteFactory\" class=\"confirm-button\">Yes</button>\r\n        <button @click=\"cancelDeleteFactory\" class=\"cancel-button\">No</button>\r\n      </div>\r\n    </div>\r\n\r\n    <Comments v-if=\"isManagerOrAdmin\" :factoryId=\"factory.id\" />\r\n    <p v-else>You do not have permission to view comments.</p>\r\n\r\n    <h2>Approved Comments</h2>\r\n    <div v-if=\"approvedComments.length\">\r\n      <div v-for=\"comment in approvedComments\" :key=\"comment.id\" class=\"comment-item\">\r\n        <p><strong>User:</strong> {{ comment.user.username }}</p>\r\n        <p><strong>Comment:</strong> {{ comment.text }}</p>\r\n        <p><strong>Rating:</strong> {{ comment.rating }}</p>\r\n      </div>\r\n    </div>\r\n    <p v-else>No approved comments available for this factory.</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\nimport Comments from './Comments.vue'; \r\nimport { useStore } from 'vuex';\r\nimport 'ol/ol.css';\r\nimport { Map, View } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport { Style, Icon } from 'ol/style';\r\n\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst factory = ref(null);\r\nconst chocolates = ref([]);\r\nconst approvedComments = ref([]);\r\nconst comments = ref([]);  \r\nconst managerId = ref('');\r\nconst workers = ref([]);\r\nconst loadingChocolates = ref(false);\r\nconst showModal = ref(false);\r\nconst chocolateToDelete = ref(null);\r\nconst showDeleteFactoryModal = ref(false);\r\n\r\nconst showRegisterForm = ref(false);\r\nconst workerUsername = ref('');\r\nconst workerPassword = ref('');\r\nconst workerName = ref('');\r\nconst workerLastName = ref('');\r\nconst workerGender = ref('');\r\nconst workerBirthDate = ref('');\r\n\r\nconst isManagerOrAdmin = computed(() => {\r\n  const role = store.getters.userRole;\r\n  return role === 'Manager' || role === 'Administrator';\r\n});\r\n\r\nconst isCustomer = computed(() => {\r\n  return store.getters.userRole === 'Customer';\r\n});\r\n\r\nonMounted(() => {\r\n  loadFactory();\r\n  loadComments();\r\n});\r\n\r\nfunction registerWorker() {\r\n  const userToRegister = {\r\n    username: workerUsername.value,\r\n    password: workerPassword.value,\r\n    name: workerName.value,\r\n    lastName: workerLastName.value,\r\n    gender: workerGender.value,\r\n    birthDate: workerBirthDate.value,\r\n    worksAtFactoryId: route.params.id\r\n  };\r\n\r\n  axios.post(`http://localhost:3001/api/signupworker`, userToRegister)\r\n    .then(response => {\r\n      showRegisterForm.value = false;\r\n    })\r\n    .catch(error => {\r\n      console.error('There was an error registering the worker!', error);\r\n    });\r\n}\r\n\r\nfunction loadFactory() {\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/factories/${factoryId}`)\r\n    .then(response => {\r\n      factory.value = response.data;\r\n      loadChocolates(factoryId);\r\n      initializeMap(response.data.location.latitude, response.data.location.longitude);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching factory details:', error);\r\n    });\r\n}\r\n\r\nfunction loadComments() {\r\n  const factoryId = route.params.id;\r\n  axios.get(`http://localhost:3001/api/comments/factory/${factoryId}`)\r\n    .then(response => {\r\n      comments.value = response.data;\r\n      approvedComments.value = comments.value.filter(comment => comment.status === 'approved');\r\n      console.log('Fetched comments:', comments.value);\r\n      console.log('Filtered approved comments:', approvedComments.value);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching comments:', error);\r\n    });\r\n}\r\n\r\n\r\nfunction loadChocolates(factoryId) {\r\n  axios.get(`http://localhost:3001/api/factories/${factoryId}/chocolates`)\r\n    .then(response => {\r\n      chocolates.value = response.data;\r\n      loadingChocolates.value = false;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching chocolates:', error);\r\n      loadingChocolates.value = false;\r\n    });\r\n}\r\n\r\nfunction addNewChocolate() {\r\n  router.push(`/factory/${route.params.id}/new-chocolate`);\r\n}\r\n\r\nfunction canEditChocolate() {\r\n  return store.getters.userRole === 'Administrator' || store.getters.userRole === 'Manager';\r\n}\r\n\r\nfunction editChocolate(chocolateId) {\r\n  router.push(`/chocolate/${chocolateId}/edit`);\r\n}\r\n\r\nfunction editAmount(chocolateId) {\r\n  router.push(`/chocolate/${chocolateId}/edit-amount`);\r\n}\r\n\r\nfunction canEditAmount(chocolate) {\r\n  return store.getters.userRole === 'Administrator' || \r\n         (store.getters.userRole === 'Manager' && chocolate.status === 'approved');\r\n}\r\n\r\nfunction confirmDelete(chocolateId) {\r\n  showModal.value = true;\r\n  chocolateToDelete.value = chocolateId;\r\n}\r\n\r\nfunction deleteChocolate() {\r\n  const factoryId = route.params.id;\r\n  axios.delete(`http://localhost:3001/api/factories/${factoryId}/chocolates/${chocolateToDelete.value}`)\r\n    .then(() => {\r\n      chocolates.value = chocolates.value.filter(chocolate => chocolate.id !== chocolateToDelete.value);\r\n      showModal.value = false;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error deleting chocolate:', error);\r\n    });\r\n}\r\n\r\nfunction cancelDelete() {\r\n  showModal.value = false;\r\n  chocolateToDelete.value = null;\r\n}\r\n\r\nfunction confirmDeleteFactory() {\r\n  showDeleteFactoryModal.value = true;\r\n}\r\n\r\nfunction deleteFactory() {\r\n  const factoryId = route.params.id;\r\n  axios.delete(`http://localhost:3001/api/factories/${factoryId}`)\r\n    .then(() => {\r\n      router.push('/factories');\r\n    })\r\n    .catch(error => {\r\n      console.error('Error deleting factory:', error);\r\n    });\r\n}\r\n\r\nfunction cancelDeleteFactory() {\r\n  showDeleteFactoryModal.value = false;\r\n}\r\n\r\nfunction getFactoryLogoUrl(logoPath) {\r\n  return `http://localhost:3001/images/factory-logos/${logoPath}`;\r\n}\r\n\r\nfunction getChocolatePictureUrl(picturePath) {\r\n  return `http://localhost:3001/images/chocolates/${picturePath}`;\r\n}\r\n\r\nfunction addToCart(chocolateId, quantity) {\r\n  store.dispatch('addToCart', { chocolateId, quantity });\r\n}\r\n\r\nfunction initializeMap(latitude, longitude) {\r\n  const map = new Map({\r\n    target: 'factory-map',\r\n    layers: [\r\n      new TileLayer({\r\n        source: new OSM(),\r\n      }),\r\n    ],\r\n    view: new View({\r\n      center: fromLonLat([longitude, latitude]),\r\n      zoom: 14,\r\n    }),\r\n  });\r\n\r\n  const marker = new Feature({\r\n    geometry: new Point(fromLonLat([longitude, latitude])),\r\n  });\r\n\r\n  const iconStyle = new Style({\r\n    image: new Icon({\r\n      src: 'https://openlayers.org/en/v4.6.5/examples/data/icon.png', // Example icon, you can replace it with your own\r\n      anchor: [0.5, 1],\r\n    }),\r\n  });\r\n\r\n  marker.setStyle(iconStyle);\r\n\r\n  const vectorSource = new VectorSource({\r\n    features: [marker],\r\n  });\r\n\r\n  const vectorLayer = new VectorLayer({\r\n    source: vectorSource,\r\n  });\r\n\r\n  map.addLayer(vectorLayer);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.factory-logo {\r\n  max-width: 150px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chocolate-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chocolate-picture {\r\n  max-width: 100px;\r\n  margin-right: 20px;\r\n}\r\n\r\n.chocolate-details {\r\n  flex-grow: 1;\r\n}\r\n\r\n.add-button {\r\n  margin-top: 20px;\r\n}\r\n\r\n.delete-button, .edit-button, .edit-amount-button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.confirm-button, .cancel-button {\r\n  margin: 10px;\r\n}\r\n\r\n.delete-factory-button {\r\n  margin-top: 20px;\r\n}\r\n\r\n#factory-map {\r\n  width: 100%;\r\n  height: 400px;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AA2GA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAO,WAAW;AAClB,SAASC,GAAG,EAAEC,IAAI,QAAQ,IAAI;AAC9B,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,GAAG,MAAM,eAAe;AAC/B,SAASC,UAAU,QAAQ,SAAS;AACpC,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,WAAW,MAAM,iBAAiB;AACzC,SAASC,KAAK,EAAEC,IAAI,QAAQ,UAAU;;;;;;;IAEtC,MAAMC,KAAK,GAAGZ,QAAQ,CAAC,CAAC;IACxB,MAAMa,KAAK,GAAGjB,QAAQ,CAAC,CAAC;IACxB,MAAMkB,MAAM,GAAGjB,SAAS,CAAC,CAAC;IAC1B,MAAMkB,OAAO,GAAGtB,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMuB,UAAU,GAAGvB,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMwB,gBAAgB,GAAGxB,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMyB,QAAQ,GAAGzB,GAAG,CAAC,EAAE,CAAC;IACxB,MAAM0B,SAAS,GAAG1B,GAAG,CAAC,EAAE,CAAC;IACzB,MAAM2B,OAAO,GAAG3B,GAAG,CAAC,EAAE,CAAC;IACvB,MAAM4B,iBAAiB,GAAG5B,GAAG,CAAC,KAAK,CAAC;IACpC,MAAM6B,SAAS,GAAG7B,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAM8B,iBAAiB,GAAG9B,GAAG,CAAC,IAAI,CAAC;IACnC,MAAM+B,sBAAsB,GAAG/B,GAAG,CAAC,KAAK,CAAC;IAEzC,MAAMgC,gBAAgB,GAAGhC,GAAG,CAAC,KAAK,CAAC;IACnC,MAAMiC,cAAc,GAAGjC,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMkC,cAAc,GAAGlC,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMmC,UAAU,GAAGnC,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMoC,cAAc,GAAGpC,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMqC,YAAY,GAAGrC,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMsC,eAAe,GAAGtC,GAAG,CAAC,EAAE,CAAC;IAE/B,MAAMuC,gBAAgB,GAAGtC,QAAQ,CAAC,MAAM;MACtC,MAAMuC,IAAI,GAAGrB,KAAK,CAACsB,OAAO,CAACC,QAAQ;MACnC,OAAOF,IAAI,KAAK,SAAS,IAAIA,IAAI,KAAK,eAAe;IACvD,CAAC,CAAC;IAEF,MAAMG,UAAU,GAAG1C,QAAQ,CAAC,MAAM;MAChC,OAAOkB,KAAK,CAACsB,OAAO,CAACC,QAAQ,KAAK,UAAU;IAC9C,CAAC,CAAC;IAEFxC,SAAS,CAAC,MAAM;MACd0C,WAAW,CAAC,CAAC;MACbC,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC;IAEF,SAASC,cAAcA,CAAA,EAAG;MACxB,MAAMC,cAAc,GAAG;QACrBC,QAAQ,EAAEf,cAAc,CAACgB,KAAK;QAC9BC,QAAQ,EAAEhB,cAAc,CAACe,KAAK;QAC9BE,IAAI,EAAEhB,UAAU,CAACc,KAAK;QACtBG,QAAQ,EAAEhB,cAAc,CAACa,KAAK;QAC9BI,MAAM,EAAEhB,YAAY,CAACY,KAAK;QAC1BK,SAAS,EAAEhB,eAAe,CAACW,KAAK;QAChCM,gBAAgB,EAAEnC,KAAK,CAACoC,MAAM,CAACC;MACjC,CAAC;MAEDpD,KAAK,CAACqD,IAAI,CAAE,wCAAuC,EAAEX,cAAc,CAAC,CACjEY,IAAI,CAACC,QAAQ,IAAI;QAChB5B,gBAAgB,CAACiB,KAAK,GAAG,KAAK;MAChC,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE,CAAC,CAAC;IACN;IAEA,SAASlB,WAAWA,CAAA,EAAG;MACrB,MAAMoB,SAAS,GAAG5C,KAAK,CAACoC,MAAM,CAACC,EAAE;MACjCpD,KAAK,CAAC4D,GAAG,CAAE,uCAAsCD,SAAU,EAAC,CAAC,CAC1DL,IAAI,CAACC,QAAQ,IAAI;QAChBtC,OAAO,CAAC2B,KAAK,GAAGW,QAAQ,CAACM,IAAI;QAC7BC,cAAc,CAACH,SAAS,CAAC;QACzBI,aAAa,CAACR,QAAQ,CAACM,IAAI,CAACG,QAAQ,CAACC,QAAQ,EAAEV,QAAQ,CAACM,IAAI,CAACG,QAAQ,CAACE,SAAS,CAAC;MAClF,CAAC,CAAC,CACDV,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD,CAAC,CAAC;IACN;IAEA,SAASjB,YAAYA,CAAA,EAAG;MACtB,MAAMmB,SAAS,GAAG5C,KAAK,CAACoC,MAAM,CAACC,EAAE;MACjCpD,KAAK,CAAC4D,GAAG,CAAE,8CAA6CD,SAAU,EAAC,CAAC,CACjEL,IAAI,CAACC,QAAQ,IAAI;QAChBnC,QAAQ,CAACwB,KAAK,GAAGW,QAAQ,CAACM,IAAI;QAC9B1C,gBAAgB,CAACyB,KAAK,GAAGxB,QAAQ,CAACwB,KAAK,CAACuB,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAK,UAAU,CAAC;QACxFX,OAAO,CAACY,GAAG,CAAC,mBAAmB,EAAElD,QAAQ,CAACwB,KAAK,CAAC;QAChDc,OAAO,CAACY,GAAG,CAAC,6BAA6B,EAAEnD,gBAAgB,CAACyB,KAAK,CAAC;MACpE,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN;IAGA,SAASK,cAAcA,CAACH,SAAS,EAAE;MACjC3D,KAAK,CAAC4D,GAAG,CAAE,uCAAsCD,SAAU,aAAY,CAAC,CACrEL,IAAI,CAACC,QAAQ,IAAI;QAChBrC,UAAU,CAAC0B,KAAK,GAAGW,QAAQ,CAACM,IAAI;QAChCtC,iBAAiB,CAACqB,KAAK,GAAG,KAAK;MACjC,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDlC,iBAAiB,CAACqB,KAAK,GAAG,KAAK;MACjC,CAAC,CAAC;IACN;IAEA,SAAS2B,eAAeA,CAAA,EAAG;MACzBvD,MAAM,CAACwD,IAAI,CAAE,YAAWzD,KAAK,CAACoC,MAAM,CAACC,EAAG,gBAAe,CAAC;IAC1D;IAEA,SAASqB,gBAAgBA,CAAA,EAAG;MAC1B,OAAO3D,KAAK,CAACsB,OAAO,CAACC,QAAQ,KAAK,eAAe,IAAIvB,KAAK,CAACsB,OAAO,CAACC,QAAQ,KAAK,SAAS;IAC3F;IAEA,SAASqC,aAAaA,CAACC,WAAW,EAAE;MAClC3D,MAAM,CAACwD,IAAI,CAAE,cAAaG,WAAY,OAAM,CAAC;IAC/C;IAEA,SAASC,UAAUA,CAACD,WAAW,EAAE;MAC/B3D,MAAM,CAACwD,IAAI,CAAE,cAAaG,WAAY,cAAa,CAAC;IACtD;IAEA,SAASE,aAAaA,CAACC,SAAS,EAAE;MAChC,OAAOhE,KAAK,CAACsB,OAAO,CAACC,QAAQ,KAAK,eAAe,IACzCvB,KAAK,CAACsB,OAAO,CAACC,QAAQ,KAAK,SAAS,IAAIyC,SAAS,CAACT,MAAM,KAAK,UAAW;IAClF;IAEA,SAASU,aAAaA,CAACJ,WAAW,EAAE;MAClCnD,SAAS,CAACoB,KAAK,GAAG,IAAI;MACtBnB,iBAAiB,CAACmB,KAAK,GAAG+B,WAAW;IACvC;IAEA,SAASK,eAAeA,CAAA,EAAG;MACzB,MAAMrB,SAAS,GAAG5C,KAAK,CAACoC,MAAM,CAACC,EAAE;MACjCpD,KAAK,CAACiF,MAAM,CAAE,uCAAsCtB,SAAU,eAAclC,iBAAiB,CAACmB,KAAM,EAAC,CAAC,CACnGU,IAAI,CAAC,MAAM;QACVpC,UAAU,CAAC0B,KAAK,GAAG1B,UAAU,CAAC0B,KAAK,CAACuB,MAAM,CAACW,SAAS,IAAIA,SAAS,CAAC1B,EAAE,KAAK3B,iBAAiB,CAACmB,KAAK,CAAC;QACjGpB,SAAS,CAACoB,KAAK,GAAG,KAAK;MACzB,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN;IAEA,SAASyB,YAAYA,CAAA,EAAG;MACtB1D,SAAS,CAACoB,KAAK,GAAG,KAAK;MACvBnB,iBAAiB,CAACmB,KAAK,GAAG,IAAI;IAChC;IAEA,SAASuC,oBAAoBA,CAAA,EAAG;MAC9BzD,sBAAsB,CAACkB,KAAK,GAAG,IAAI;IACrC;IAEA,SAASwC,aAAaA,CAAA,EAAG;MACvB,MAAMzB,SAAS,GAAG5C,KAAK,CAACoC,MAAM,CAACC,EAAE;MACjCpD,KAAK,CAACiF,MAAM,CAAE,uCAAsCtB,SAAU,EAAC,CAAC,CAC7DL,IAAI,CAAC,MAAM;QACVtC,MAAM,CAACwD,IAAI,CAAC,YAAY,CAAC;MAC3B,CAAC,CAAC,CACDhB,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN;IAEA,SAAS4B,mBAAmBA,CAAA,EAAG;MAC7B3D,sBAAsB,CAACkB,KAAK,GAAG,KAAK;IACtC;IAEA,SAAS0C,iBAAiBA,CAACC,QAAQ,EAAE;MACnC,OAAQ,8CAA6CA,QAAS,EAAC;IACjE;IAEA,SAASC,sBAAsBA,CAACC,WAAW,EAAE;MAC3C,OAAQ,2CAA0CA,WAAY,EAAC;IACjE;IAEA,SAASC,SAASA,CAACf,WAAW,EAAEgB,QAAQ,EAAE;MACxC7E,KAAK,CAAC8E,QAAQ,CAAC,WAAW,EAAE;QAAEjB,WAAW;QAAEgB;MAAS,CAAC,CAAC;IACxD;IAEA,SAAS5B,aAAaA,CAACE,QAAQ,EAAEC,SAAS,EAAE;MAC1C,MAAM2B,GAAG,GAAG,IAAI1F,GAAG,CAAC;QAClB2F,MAAM,EAAE,aAAa;QACrBC,MAAM,EAAE,CACN,IAAI1F,SAAS,CAAC;UACZ2F,MAAM,EAAE,IAAI1F,GAAG,CAAC;QAClB,CAAC,CAAC,CACH;QACD2F,IAAI,EAAE,IAAI7F,IAAI,CAAC;UACb8F,MAAM,EAAE3F,UAAU,CAAC,CAAC2D,SAAS,EAAED,QAAQ,CAAC,CAAC;UACzCkC,IAAI,EAAE;QACR,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAG,IAAI5F,OAAO,CAAC;QACzB6F,QAAQ,EAAE,IAAI5F,KAAK,CAACF,UAAU,CAAC,CAAC2D,SAAS,EAAED,QAAQ,CAAC,CAAC;MACvD,CAAC,CAAC;MAEF,MAAMqC,SAAS,GAAG,IAAI1F,KAAK,CAAC;QAC1B2F,KAAK,EAAE,IAAI1F,IAAI,CAAC;UACd2F,GAAG,EAAE,yDAAyD;UAAE;UAChEC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,CAAC;MACH,CAAC,CAAC;MAEFL,MAAM,CAACM,QAAQ,CAACJ,SAAS,CAAC;MAE1B,MAAMK,YAAY,GAAG,IAAIjG,YAAY,CAAC;QACpCkG,QAAQ,EAAE,CAACR,MAAM;MACnB,CAAC,CAAC;MAEF,MAAMS,WAAW,GAAG,IAAIlG,WAAW,CAAC;QAClCqF,MAAM,EAAEW;MACV,CAAC,CAAC;MAEFd,GAAG,CAACiB,QAAQ,CAACD,WAAW,CAAC;IAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}