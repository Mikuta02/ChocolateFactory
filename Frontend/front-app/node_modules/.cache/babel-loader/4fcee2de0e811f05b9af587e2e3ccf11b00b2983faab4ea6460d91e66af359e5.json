{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport Factories from '../components/Factories.vue';\nimport AddFactory from '../components/AddFactory.vue';\nimport FactoryDetails from '../components/FactoryDetails.vue';\nimport AddChocolate from '../components/AddChocolate.vue';\nimport EditChocolate from '../components/EditChocolate.vue';\nimport EditAmount from '../components/EditAmount.vue';\nimport Cart from '../components/Cart.vue';\nimport AddComment from '../components/AddComment.vue';\nimport Login from '../components/Login.vue';\nimport Register from '../components/Register.vue';\nimport UserPurchases from '../components/UserPurchases.vue';\nimport Profile from '../components/Profile.vue';\nimport RegisterManager from '../components/RegisterManager.vue';\nimport RegisterWorker from '../components/RegisterWorker.vue';\nimport ManagerPurchases from '../components/ManagerPurchases.vue';\nimport ManagerComments from '../components/ManagerComments.vue';\nimport store from '../store';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView\n}, {\n  path: '/factories',\n  name: 'Factories',\n  component: Factories\n}, {\n  path: '/add-factory',\n  name: 'AddFactory',\n  component: AddFactory,\n  meta: {\n    requiresAdmin: true\n  }\n}, {\n  path: '/factory-detailed/:id',\n  name: 'FactoryDetailed',\n  component: FactoryDetails,\n  props: true\n}, {\n  path: '/add-chocolate',\n  name: 'AddChocolate',\n  component: AddChocolate,\n  props: route => ({\n    factoryId: route.query.factoryId\n  })\n}, {\n  path: '/edit-chocolate/:id/:factoryId',\n  name: 'EditChocolate',\n  component: EditChocolate,\n  props: true\n}, {\n  path: '/edit-amount/:id/:factoryId',\n  name: 'EditAmount',\n  component: EditAmount,\n  props: true\n}, {\n  path: '/cart',\n  name: 'Cart',\n  component: Cart,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/purchases',\n  name: 'UserPurchases',\n  component: UserPurchases,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/add-comment/:factoryId',\n  name: 'AddComment',\n  component: AddComment,\n  props: true\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  props: true\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  props: true\n}, {\n  path: '/profile',\n  component: Profile,\n  meta: {\n    requiresAuth: true\n  },\n  children: [{\n    path: '',\n    name: 'Profile',\n    component: Profile\n  }, {\n    path: 'my-purchases',\n    name: 'MyPurchases',\n    component: UserPurchases\n  }, {\n    path: 'factory-purchases',\n    name: 'FactoryPurchases',\n    component: ManagerPurchases,\n    meta: {\n      requiresManager: true\n    }\n  }, {\n    path: 'manage-comments',\n    name: 'ManagerComments',\n    component: ManagerComments,\n    meta: {\n      requiresManager: true\n    }\n  }, {\n    path: 'register-manager',\n    name: 'RegisterManager',\n    component: RegisterManager,\n    meta: {\n      requiresAdmin: true\n    }\n  }, {\n    path: 'register-worker',\n    name: 'RegisterWorker',\n    component: RegisterWorker,\n    meta: {\n      requiresManager: true\n    }\n  }]\n}, {\n  path: '/factory/:factoryId/comments',\n  name: 'ManagerComments',\n  component: ManagerComments,\n  props: true,\n  meta: {\n    requiresManager: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const requiresAdmin = to.matched.some(record => record.meta.requiresAdmin);\n  const requiresManager = to.matched.some(record => record.meta.requiresManager);\n  const isAuthenticated = store.getters.isAuthenticated;\n  const isAdministrator = store.getters.isAdministrator;\n  const isManager = store.getters.isManager;\n  if (requiresAuth && !isAuthenticated) {\n    alert('You must be logged in to access this page.');\n    next('/login');\n  } else if (requiresAdmin && !isAdministrator) {\n    alert('You must be an administrator to access this page.');\n    next('/');\n  } else if (requiresManager && !isManager) {\n    alert('You must be a manager to access this page.');\n    next('/');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","Factories","AddFactory","FactoryDetails","AddChocolate","EditChocolate","EditAmount","Cart","AddComment","Login","Register","UserPurchases","Profile","RegisterManager","RegisterWorker","ManagerPurchases","ManagerComments","store","routes","path","name","component","meta","requiresAdmin","props","route","factoryId","query","requiresAuth","children","requiresManager","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","isAuthenticated","getters","isAdministrator","isManager","alert"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomeView from '../views/HomeView.vue';\r\nimport Factories from '../components/Factories.vue';\r\nimport AddFactory from '../components/AddFactory.vue';\r\nimport FactoryDetails from '../components/FactoryDetails.vue';\r\nimport AddChocolate from '../components/AddChocolate.vue';\r\nimport EditChocolate from '../components/EditChocolate.vue';\r\nimport EditAmount from '../components/EditAmount.vue';\r\nimport Cart from '../components/Cart.vue';\r\nimport AddComment from '../components/AddComment.vue'; \r\nimport Login from '../components/Login.vue';\r\nimport Register from '../components/Register.vue';\r\nimport UserPurchases from '../components/UserPurchases.vue';\r\nimport Profile from '../components/Profile.vue';\r\nimport RegisterManager from '../components/RegisterManager.vue';\r\nimport RegisterWorker from '../components/RegisterWorker.vue';\r\nimport ManagerPurchases from '../components/ManagerPurchases.vue';\r\nimport ManagerComments from '../components/ManagerComments.vue';\r\nimport store from '../store';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path: '/factories',\r\n    name: 'Factories',\r\n    component: Factories\r\n  },\r\n  {\r\n    path: '/add-factory',\r\n    name: 'AddFactory',\r\n    component: AddFactory,\r\n    meta: { requiresAdmin: true }\r\n  },\r\n  {\r\n    path: '/factory-detailed/:id',\r\n    name: 'FactoryDetailed',\r\n    component: FactoryDetails,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/add-chocolate',\r\n    name: 'AddChocolate',\r\n    component: AddChocolate,\r\n    props: route => ({ factoryId: route.query.factoryId }) \r\n  },\r\n  {\r\n    path: '/edit-chocolate/:id/:factoryId',\r\n    name: 'EditChocolate',\r\n    component: EditChocolate,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/edit-amount/:id/:factoryId', \r\n    name: 'EditAmount',\r\n    component: EditAmount,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/cart',\r\n    name: 'Cart',\r\n    component: Cart,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/purchases',\r\n    name: 'UserPurchases',\r\n    component: UserPurchases,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/add-comment/:factoryId',\r\n    name: 'AddComment',\r\n    component: AddComment,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: Register,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/profile',\r\n    component: Profile,\r\n    meta: { requiresAuth: true },\r\n    children: [\r\n      { path: '', name: 'Profile', component: Profile },\r\n      { path: 'my-purchases', name: 'MyPurchases', component: UserPurchases },\r\n      { path: 'factory-purchases', name: 'FactoryPurchases', component: ManagerPurchases, meta: { requiresManager: true } },\r\n      { path: 'manage-comments', name: 'ManagerComments', component: ManagerComments, meta: { requiresManager: true } },\r\n      { path: 'register-manager', name: 'RegisterManager', component: RegisterManager, meta: { requiresAdmin: true } },\r\n      { path: 'register-worker', name: 'RegisterWorker', component: RegisterWorker, meta: { requiresManager: true } }\r\n    ]\r\n  },\r\n  {\r\n    path: '/factory/:factoryId/comments',\r\n    name: 'ManagerComments',\r\n    component: ManagerComments,\r\n    props: true,\r\n    meta: { requiresManager: true }\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n  const requiresAdmin = to.matched.some(record => record.meta.requiresAdmin);\r\n  const requiresManager = to.matched.some(record => record.meta.requiresManager);\r\n\r\n  const isAuthenticated = store.getters.isAuthenticated;\r\n  const isAdministrator = store.getters.isAdministrator;\r\n  const isManager = store.getters.isManager;\r\n\r\n  if (requiresAuth && !isAuthenticated) {\r\n    alert('You must be logged in to access this page.');\r\n    next('/login');\r\n  } else if (requiresAdmin && !isAdministrator) {\r\n    alert('You must be an administrator to access this page.');\r\n    next('/');\r\n  } else if (requiresManager && !isManager) {\r\n    alert('You must be a manager to access this page.');\r\n    next('/');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}