{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * @module ol/layer/Group\r\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n\n/**\r\n * @typedef {'addlayer'|'removelayer'} GroupEventType\r\n */\n\n/**\r\n * @classdesc\r\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\r\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\r\n * a single event will be triggered (instead of one per layer in the group added or removed).\r\n */\nexport class GroupEvent extends Event {\n  /**\r\n   * @param {GroupEventType} type The event type.\r\n   * @param {BaseLayer} layer The layer.\r\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\r\n     * The added or removed layer.\r\n     * @type {BaseLayer}\r\n     * @api\r\n     */\n    this.layer = layer;\n  }\n}\n\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\r\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\r\n */\n\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\n\n/**\r\n * @enum {string}\r\n * @private\r\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n/**\r\n * @classdesc\r\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\r\n *\r\n * A generic `change` event is triggered when the group/Collection changes.\r\n *\r\n * @api\r\n */\nclass LayerGroup extends BaseLayer {\n  /**\r\n   * @param {Options} [options] Layer options.\r\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */Object.assign({}, options);\n    delete baseOptions.layers;\n    let layers = options.layers;\n    super(baseOptions);\n\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\n    this.on;\n\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\n    this.once;\n\n    /***\r\n     * @type {GroupOnSignature<void>}\r\n     */\n    this.un;\n\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\n    this.listenerKeys_ = {};\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof ( /** @type {?} */layers.getArray) === 'function', 'Expected `layers` to be an array or a `Collection`');\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n    this.setLayers(layers);\n  }\n\n  /**\r\n   * @private\r\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\r\n   * @private\r\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\r\n   * @param {BaseLayer} layer The layer.\r\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(listen(layer, 'addlayer', this.handleLayerGroupAdd_, this), listen(layer, 'removelayer', this.handleLayerGroupRemove_, this));\n    }\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\r\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */(\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\r\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\r\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\r\n   * Get the layer states list and use this groups z-index as the default\r\n   * for all layers in this and nested groups, if it is unset at this point.\r\n   * If dest is not provided and this group's z-index is undefined\r\n   * 0 is used a the default z-index.\r\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\r\n   * of layer states (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n    return states;\n  }\n\n  /**\r\n   * @return {import(\"../source/Source.js\").State} Source state.\r\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\nexport default LayerGroup;","map":{"version":3,"names":["BaseLayer","Collection","CollectionEventType","Event","EventType","ObjectEventType","assert","clear","getIntersection","getUid","listen","unlistenByKey","GroupEvent","constructor","type","layer","Property","LAYERS","LayerGroup","options","baseOptions","Object","assign","layers","on","once","un","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","Array","isArray","slice","unique","getArray","undefined","setLayers","handleLayerChange_","changed","forEach","length","getLayers","push","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","id","layersArray","i","ii","registerLayerListeners_","dispatchEvent","listenerKeys","PROPERTYCHANGE","CHANGE","handleLayerGroupAdd_","handleLayerGroupRemove_","event","collectionEvent","element","key","get","collection","currentLayers","set","getLayersArray","array","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","zIndex","layerState","opacity","visible","maxResolution","Math","min","minResolution","max","minZoom","maxZoom","extent","getSourceState"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/node_modules/ol/layer/Group.js"],"sourcesContent":["/**\r\n * @module ol/layer/Group\r\n */\r\nimport BaseLayer from './Base.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport {assert} from '../asserts.js';\r\nimport {clear} from '../obj.js';\r\nimport {getIntersection} from '../extent.js';\r\nimport {getUid} from '../util.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n/**\r\n * @typedef {'addlayer'|'removelayer'} GroupEventType\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\r\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\r\n * a single event will be triggered (instead of one per layer in the group added or removed).\r\n */\r\nexport class GroupEvent extends Event {\r\n  /**\r\n   * @param {GroupEventType} type The event type.\r\n   * @param {BaseLayer} layer The layer.\r\n   */\r\n  constructor(type, layer) {\r\n    super(type);\r\n\r\n    /**\r\n     * The added or removed layer.\r\n     * @type {BaseLayer}\r\n     * @api\r\n     */\r\n    this.layer = layer;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\r\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  LAYERS: 'layers',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\r\n *\r\n * A generic `change` event is triggered when the group/Collection changes.\r\n *\r\n * @api\r\n */\r\nclass LayerGroup extends BaseLayer {\r\n  /**\r\n   * @param {Options} [options] Layer options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\r\n    delete baseOptions.layers;\r\n\r\n    let layers = options.layers;\r\n\r\n    super(baseOptions);\r\n\r\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {GroupOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.layersListenerKeys_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\r\n    this.listenerKeys_ = {};\r\n\r\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\r\n\r\n    if (layers) {\r\n      if (Array.isArray(layers)) {\r\n        layers = new Collection(layers.slice(), {unique: true});\r\n      } else {\r\n        assert(\r\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\r\n          'Expected `layers` to be an array or a `Collection`',\r\n        );\r\n      }\r\n    } else {\r\n      layers = new Collection(undefined, {unique: true});\r\n    }\r\n\r\n    this.setLayers(layers);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayerChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayersChanged_() {\r\n    this.layersListenerKeys_.forEach(unlistenByKey);\r\n    this.layersListenerKeys_.length = 0;\r\n\r\n    const layers = this.getLayers();\r\n    this.layersListenerKeys_.push(\r\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\r\n      listen(\r\n        layers,\r\n        CollectionEventType.REMOVE,\r\n        this.handleLayersRemove_,\r\n        this,\r\n      ),\r\n    );\r\n\r\n    for (const id in this.listenerKeys_) {\r\n      this.listenerKeys_[id].forEach(unlistenByKey);\r\n    }\r\n    clear(this.listenerKeys_);\r\n\r\n    const layersArray = layers.getArray();\r\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\r\n      const layer = layersArray[i];\r\n      this.registerLayerListeners_(layer);\r\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {BaseLayer} layer The layer.\r\n   */\r\n  registerLayerListeners_(layer) {\r\n    const listenerKeys = [\r\n      listen(\r\n        layer,\r\n        ObjectEventType.PROPERTYCHANGE,\r\n        this.handleLayerChange_,\r\n        this,\r\n      ),\r\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\r\n    ];\r\n\r\n    if (layer instanceof LayerGroup) {\r\n      listenerKeys.push(\r\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\r\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\r\n      );\r\n    }\r\n\r\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\r\n  }\r\n\r\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\r\n  handleLayerGroupAdd_(event) {\r\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\r\n  }\r\n\r\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\r\n  handleLayerGroupRemove_(event) {\r\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersAdd_(collectionEvent) {\r\n    const layer = collectionEvent.element;\r\n    this.registerLayerListeners_(layer);\r\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersRemove_(collectionEvent) {\r\n    const layer = collectionEvent.element;\r\n    const key = getUid(layer);\r\n    this.listenerKeys_[key].forEach(unlistenByKey);\r\n    delete this.listenerKeys_[key];\r\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLayers() {\r\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\r\n      this.get(Property.LAYERS)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setLayers(layers) {\r\n    const collection = this.getLayers();\r\n    if (collection) {\r\n      const currentLayers = collection.getArray();\r\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\r\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\r\n      }\r\n    }\r\n\r\n    this.set(Property.LAYERS, layers);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n   */\r\n  getLayersArray(array) {\r\n    array = array !== undefined ? array : [];\r\n    this.getLayers().forEach(function (layer) {\r\n      layer.getLayersArray(array);\r\n    });\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * Get the layer states list and use this groups z-index as the default\r\n   * for all layers in this and nested groups, if it is unset at this point.\r\n   * If dest is not provided and this group's z-index is undefined\r\n   * 0 is used a the default z-index.\r\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\r\n   * of layer states (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n   */\r\n  getLayerStatesArray(dest) {\r\n    const states = dest !== undefined ? dest : [];\r\n    const pos = states.length;\r\n\r\n    this.getLayers().forEach(function (layer) {\r\n      layer.getLayerStatesArray(states);\r\n    });\r\n\r\n    const ownLayerState = this.getLayerState();\r\n    let defaultZIndex = ownLayerState.zIndex;\r\n    if (!dest && ownLayerState.zIndex === undefined) {\r\n      defaultZIndex = 0;\r\n    }\r\n    for (let i = pos, ii = states.length; i < ii; i++) {\r\n      const layerState = states[i];\r\n      layerState.opacity *= ownLayerState.opacity;\r\n      layerState.visible = layerState.visible && ownLayerState.visible;\r\n      layerState.maxResolution = Math.min(\r\n        layerState.maxResolution,\r\n        ownLayerState.maxResolution,\r\n      );\r\n      layerState.minResolution = Math.max(\r\n        layerState.minResolution,\r\n        ownLayerState.minResolution,\r\n      );\r\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\r\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\r\n      if (ownLayerState.extent !== undefined) {\r\n        if (layerState.extent !== undefined) {\r\n          layerState.extent = getIntersection(\r\n            layerState.extent,\r\n            ownLayerState.extent,\r\n          );\r\n        } else {\r\n          layerState.extent = ownLayerState.extent;\r\n        }\r\n      }\r\n      if (layerState.zIndex === undefined) {\r\n        layerState.zIndex = defaultZIndex;\r\n      }\r\n    }\r\n\r\n    return states;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../source/Source.js\").State} Source state.\r\n   */\r\n  getSourceState() {\r\n    return 'ready';\r\n  }\r\n}\r\n\r\nexport default LayerGroup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}