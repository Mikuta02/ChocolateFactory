{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5792f1ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"add-comment\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add Comment\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"text\"\n}, \"Comment:\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"rating\"\n}, \"Rating:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.submitComment, [\"prevent\"])\n  }, [_createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.text = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.text]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    id: \"rating\",\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.rating = $event),\n    min: \"1\",\n    max: \"5\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.rating]])]), _hoisted_5], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_withModifiers","$setup","submitComment","_hoisted_3","id","_cache","$event","text","required","_hoisted_4","rating","min","max","_hoisted_5"],"sources":["C:\\Programiranje\\veb\\projekat\\chocolate-factoryapp\\Frontend\\front-app\\src\\components\\AddComment.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-comment\">\r\n    <h2>Add Comment</h2>\r\n    <form @submit.prevent=\"submitComment\">\r\n      <div>\r\n        <label for=\"text\">Comment:</label>\r\n        <textarea id=\"text\" v-model=\"text\" required></textarea>\r\n      </div>\r\n      <div>\r\n        <label for=\"rating\">Rating:</label>\r\n        <input id=\"rating\" type=\"number\" v-model=\"rating\" min=\"1\" max=\"5\" required />\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport axios from 'axios';\r\n\r\nconst text = ref('');\r\nconst rating = ref(5);\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst factoryId = ref(route.params.factoryId); // Dodato za primanje factoryId parametra\r\n\r\nconst submitComment = () => {\r\n  const userId = store.getters.userId;\r\n  const token = store.state.token;\r\n\r\n  if (!userId) {\r\n    console.error('User is not defined or user.id is missing');\r\n    return;\r\n  }\r\n\r\n  axios.post('http://localhost:3001/api/comments', {\r\n    userId,\r\n    factoryId: factoryId.value, // Koristi se factoryId iz parametara rute\r\n    text: text.value,\r\n    rating: rating.value,\r\n  }, {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  .then(response => {\r\n    console.log('Comment added:', response.data);\r\n    router.push('/purchases');\r\n  })\r\n  .catch(error => {\r\n    console.error('Error adding comment:', error);\r\n  });\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.add-comment {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.add-comment h2 {\r\n  text-align: center;\r\n  color: #333;\r\n  font-size: 1.5em;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-comment form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.add-comment label {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.add-comment textarea,\r\n.add-comment input {\r\n  padding: 8px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.add-comment button {\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.add-comment button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAAoB,YAAhB,aAAW;gEAGXA,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAM,GAAC,UAAQ;gEAI1BD,mBAAA,CAAmC;EAA5BC,GAAG,EAAC;AAAQ,GAAC,SAAO;gEAG7BD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;;uBAXhCC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,UAAoB,EACpBL,mBAAA,CAUO;IAVAM,QAAM,EAHjBC,cAAA,CAG2BC,MAAA,CAAAC,aAAa;MAClCT,mBAAA,CAGM,cAFJU,UAAkC,E,gBAClCV,mBAAA,CAAuD;IAA7CW,EAAE,EAAC,MAAM;IAN3B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMqCL,MAAA,CAAAM,IAAI,GAAAD,MAAA;IAAEE,QAAQ,EAAR;iDAANP,MAAA,CAAAM,IAAI,E,KAEnCd,mBAAA,CAGM,cAFJgB,UAAmC,E,gBACnChB,mBAAA,CAA6E;IAAtEW,EAAE,EAAC,QAAQ;IAACT,IAAI,EAAC,QAAQ;IAVxC,uBAAAU,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUkDL,MAAA,CAAAS,MAAM,GAAAJ,MAAA;IAAEK,GAAG,EAAC,GAAG;IAACC,GAAG,EAAC,GAAG;IAACJ,QAAQ,EAAR;iDAAxBP,MAAA,CAAAS,MAAM,E,KAElDG,UAAqC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}