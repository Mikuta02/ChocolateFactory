{"ast":null,"code":"import { ref, onMounted, reactive, computed } from 'vue';\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'ManagerPurchases',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const purchases = ref([]);\n    const filteredPurchases = ref([]);\n    const initialSearchFilters = {\n      minPrice: '',\n      maxPrice: '',\n      startDate: '',\n      endDate: ''\n    };\n    const initialSortOptions = {\n      sortBy: '',\n      sortOrder: 'asc'\n    };\n    const searchFilters = reactive({\n      ...initialSearchFilters\n    });\n    const sortOptions = reactive({\n      ...initialSortOptions\n    });\n    onMounted(() => {\n      loadPurchases();\n    });\n    function loadPurchases() {\n      const params = {\n        minPrice: searchFilters.minPrice || '',\n        maxPrice: searchFilters.maxPrice || '',\n        startDate: searchFilters.startDate || '',\n        endDate: searchFilters.endDate || '',\n        sortBy: sortOptions.sortBy || '',\n        sortOrder: sortOptions.sortOrder || 'asc'\n      };\n      console.log('Loading purchases with params:', params);\n      axios.get('http://localhost:3001/api/purchases/manager', {\n        headers: {\n          'Authorization': `Bearer ${store.state.token}`\n        },\n        params\n      }).then(response => {\n        console.log('Purchases received:', response.data);\n        purchases.value = response.data.map(purchase => ({\n          ...purchase,\n          newStatus: '',\n          reason: ''\n        }));\n        applyFiltersAndSort(); // Apply filters and sort immediately after loading\n      }).catch(error => {\n        console.error('Error fetching purchases:', error);\n      });\n    }\n    function applyFiltersAndSort() {\n      console.log('Applying filters and sorting with params:', searchFilters, sortOptions);\n\n      // Apply filters\n      let tempPurchases = purchases.value.filter(purchase => {\n        let matchesPrice = true;\n        let matchesDate = true;\n        if (searchFilters.minPrice) {\n          matchesPrice = purchase.totalPrice >= Number(searchFilters.minPrice);\n        }\n        if (searchFilters.maxPrice) {\n          matchesPrice = matchesPrice && purchase.totalPrice <= Number(searchFilters.maxPrice);\n        }\n        if (searchFilters.startDate) {\n          matchesDate = new Date(purchase.date) >= new Date(searchFilters.startDate);\n        }\n        if (searchFilters.endDate) {\n          matchesDate = matchesDate && new Date(purchase.date) <= new Date(searchFilters.endDate);\n        }\n        return matchesPrice && matchesDate;\n      });\n\n      // Apply sorting\n      if (sortOptions.sortBy) {\n        tempPurchases.sort((a, b) => {\n          let fieldA = a[sortOptions.sortBy];\n          let fieldB = b[sortOptions.sortBy];\n          if (fieldA < fieldB) return sortOptions.sortOrder === 'asc' ? -1 : 1;\n          if (fieldA > fieldB) return sortOptions.sortOrder === 'asc' ? 1 : -1;\n          return 0;\n        });\n      }\n      filteredPurchases.value = tempPurchases;\n    }\n    function resetFilters() {\n      Object.assign(searchFilters, {\n        ...initialSearchFilters\n      });\n      Object.assign(sortOptions, {\n        ...initialSortOptions\n      });\n      console.log('Filters reset');\n      applyFiltersAndSort();\n    }\n    function updatePurchaseStatus(purchase) {\n      const updateData = {\n        purchaseId: purchase.id,\n        status: purchase.newStatus,\n        reason: purchase.newStatus === 'Odbijeno' ? purchase.reason : ''\n      };\n      axios.post('http://localhost:3001/api/purchases/update-status', updateData, {\n        headers: {\n          'Authorization': `Bearer ${store.state.token}`\n        }\n      }).then(response => {\n        console.log('Purchase status updated:', response.data);\n        loadPurchases();\n      }).catch(error => {\n        console.error('Error updating purchase status:', error);\n      });\n    }\n    const __returned__ = {\n      store,\n      purchases,\n      filteredPurchases,\n      initialSearchFilters,\n      initialSortOptions,\n      searchFilters,\n      sortOptions,\n      loadPurchases,\n      applyFiltersAndSort,\n      resetFilters,\n      updatePurchaseStatus,\n      ref,\n      onMounted,\n      reactive,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","computed","axios","useStore","store","purchases","filteredPurchases","initialSearchFilters","minPrice","maxPrice","startDate","endDate","initialSortOptions","sortBy","sortOrder","searchFilters","sortOptions","loadPurchases","params","console","log","get","headers","state","token","then","response","data","value","map","purchase","newStatus","reason","applyFiltersAndSort","catch","error","tempPurchases","filter","matchesPrice","matchesDate","totalPrice","Number","Date","date","sort","a","b","fieldA","fieldB","resetFilters","Object","assign","updatePurchaseStatus","updateData","purchaseId","id","status","post"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/components/ManagerPurchases.vue"],"sourcesContent":["<template>\r\n  <div class=\"manager-purchases\">\r\n    <h1>Manager's Purchases</h1>\r\n\r\n    <!-- Search filters -->\r\n    <div class=\"search-filters\">\r\n      <label>Price Range:</label>\r\n      <input v-model=\"searchFilters.minPrice\" type=\"number\" placeholder=\"Min Price\">\r\n      <input v-model=\"searchFilters.maxPrice\" type=\"number\" placeholder=\"Max Price\">\r\n      \r\n      <label>Date Range:</label>\r\n      <input v-model=\"searchFilters.startDate\" type=\"date\">\r\n      <input v-model=\"searchFilters.endDate\" type=\"date\">\r\n      \r\n      <button @click=\"applyFiltersAndSort\">Apply Filters & Sort</button>\r\n      <button @click=\"resetFilters\">Reset Filters</button>\r\n    </div>\r\n    \r\n    <!-- Sorting options -->\r\n    <div class=\"sorting-options\">\r\n      <label>Sort By:</label>\r\n      <select v-model=\"sortOptions.sortBy\">\r\n        <option value=\"\">Select</option>\r\n        <option value=\"totalPrice\">Total Price</option>\r\n        <option value=\"date\">Date</option>\r\n      </select>\r\n      <label>Order:</label>\r\n      <select v-model=\"sortOptions.sortOrder\">\r\n        <option value=\"asc\">Ascending</option>\r\n        <option value=\"desc\">Descending</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Purchases list -->\r\n    <div v-if=\"filteredPurchases.length\">\r\n      <div v-for=\"purchase in filteredPurchases\" :key=\"purchase.id\" class=\"purchase-item\">\r\n        <h3>Purchase ID: {{ purchase.id }}</h3>\r\n        <p>Date: {{ new Date(purchase.date).toLocaleString() }}</p>\r\n        <p>Total Price: {{ purchase.totalPrice }}</p>\r\n        <p>Status: {{ purchase.status }}</p>\r\n        <p>Customer Name: {{ purchase.customerName }}</p>\r\n        <div v-for=\"item in purchase.chocolates\" :key=\"item.chocolate.id\" class=\"chocolate-item\">\r\n          <h4>{{ item.chocolate.name }}</h4>\r\n          <p>Quantity: {{ item.quantity }}</p>\r\n          <p>Price: {{ item.chocolate.price }}</p>\r\n        </div>\r\n        <div v-if=\"purchase.status === 'Obrada'\" class=\"status-update\">\r\n          <label for=\"status\" class=\"status-label\">Update Status:</label>\r\n          <select v-model=\"purchase.newStatus\" class=\"status-select\">\r\n            <option value=\"Odobreno\">Odobreno</option>\r\n            <option value=\"Odbijeno\">Odbijeno</option>\r\n          </select>\r\n          <div v-if=\"purchase.newStatus === 'Odbijeno'\" class=\"reason-container\">\r\n            <label for=\"reason\" class=\"reason-label\">Reason:</label>\r\n            <textarea v-model=\"purchase.reason\" class=\"reason-textarea\"></textarea>\r\n          </div>\r\n          <button @click=\"updatePurchaseStatus(purchase)\" class=\"update-button\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <p v-else>No purchases found.</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive, computed } from 'vue';\r\nimport axios from 'axios';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\nconst purchases = ref([]);\r\nconst filteredPurchases = ref([]);\r\n\r\nconst initialSearchFilters = {\r\n  minPrice: '',\r\n  maxPrice: '',\r\n  startDate: '',\r\n  endDate: '',\r\n};\r\n\r\nconst initialSortOptions = {\r\n  sortBy: '',\r\n  sortOrder: 'asc',\r\n};\r\n\r\nconst searchFilters = reactive({ ...initialSearchFilters });\r\nconst sortOptions = reactive({ ...initialSortOptions });\r\n\r\nonMounted(() => {\r\n  loadPurchases();\r\n});\r\n\r\nfunction loadPurchases() {\r\n  const params = {\r\n    minPrice: searchFilters.minPrice || '',\r\n    maxPrice: searchFilters.maxPrice || '',\r\n    startDate: searchFilters.startDate || '',\r\n    endDate: searchFilters.endDate || '',\r\n    sortBy: sortOptions.sortBy || '',\r\n    sortOrder: sortOptions.sortOrder || 'asc'\r\n  };\r\n\r\n  console.log('Loading purchases with params:', params);\r\n\r\n  axios.get('http://localhost:3001/api/purchases/manager', {\r\n    headers: {\r\n      'Authorization': `Bearer ${store.state.token}`\r\n    },\r\n    params\r\n  })\r\n    .then(response => {\r\n      console.log('Purchases received:', response.data);\r\n      purchases.value = response.data.map(purchase => ({\r\n        ...purchase,\r\n        newStatus: '',\r\n        reason: ''\r\n      }));\r\n      applyFiltersAndSort(); // Apply filters and sort immediately after loading\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching purchases:', error);\r\n    });\r\n}\r\n\r\nfunction applyFiltersAndSort() {\r\n  console.log('Applying filters and sorting with params:', searchFilters, sortOptions);\r\n  \r\n  // Apply filters\r\n  let tempPurchases = purchases.value.filter(purchase => {\r\n    let matchesPrice = true;\r\n    let matchesDate = true;\r\n\r\n    if (searchFilters.minPrice) {\r\n      matchesPrice = purchase.totalPrice >= Number(searchFilters.minPrice);\r\n    }\r\n    if (searchFilters.maxPrice) {\r\n      matchesPrice = matchesPrice && purchase.totalPrice <= Number(searchFilters.maxPrice);\r\n    }\r\n    if (searchFilters.startDate) {\r\n      matchesDate = new Date(purchase.date) >= new Date(searchFilters.startDate);\r\n    }\r\n    if (searchFilters.endDate) {\r\n      matchesDate = matchesDate && new Date(purchase.date) <= new Date(searchFilters.endDate);\r\n    }\r\n\r\n    return matchesPrice && matchesDate;\r\n  });\r\n\r\n  // Apply sorting\r\n  if (sortOptions.sortBy) {\r\n    tempPurchases.sort((a, b) => {\r\n      let fieldA = a[sortOptions.sortBy];\r\n      let fieldB = b[sortOptions.sortBy];\r\n\r\n      if (fieldA < fieldB) return sortOptions.sortOrder === 'asc' ? -1 : 1;\r\n      if (fieldA > fieldB) return sortOptions.sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  filteredPurchases.value = tempPurchases;\r\n}\r\n\r\nfunction resetFilters() {\r\n  Object.assign(searchFilters, { ...initialSearchFilters });\r\n  Object.assign(sortOptions, { ...initialSortOptions });\r\n  console.log('Filters reset');\r\n  applyFiltersAndSort();\r\n}\r\n\r\nfunction updatePurchaseStatus(purchase) {\r\n  const updateData = {\r\n    purchaseId: purchase.id,\r\n    status: purchase.newStatus,\r\n    reason: purchase.newStatus === 'Odbijeno' ? purchase.reason : ''\r\n  };\r\n\r\n  axios.post('http://localhost:3001/api/purchases/update-status', updateData, {\r\n    headers: {\r\n      'Authorization': `Bearer ${store.state.token}`\r\n    }\r\n  })\r\n    .then(response => {\r\n      console.log('Purchase status updated:', response.data);\r\n      loadPurchases();\r\n    })\r\n    .catch(error => {\r\n      console.error('Error updating purchase status:', error);\r\n    });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.manager-purchases {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.purchase-item {\r\n  margin: 20px 0;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.chocolate-item {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.status-update {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-top: 1px solid #eee;\r\n  background-color: #f9f9f9;\r\n  border-radius: 5px;\r\n}\r\n\r\n.status-label, .reason-label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.status-select, .reason-textarea {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.reason-container {\r\n  margin-top: 15px;\r\n}\r\n\r\n.update-button {\r\n  margin-top: 15px;\r\n  padding: 10px 15px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\n.update-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.search-filters, .sorting-options {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.search-filters label, .sorting-options label {\r\n  margin-right: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-filters input, .search-filters select, .sorting-options select {\r\n  padding: 8px;\r\n  margin-right: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  width: 150px;\r\n}\r\n\r\n.search-filters button, .sorting-options button {\r\n  padding: 8px 15px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.search-filters button:hover, .sorting-options button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}