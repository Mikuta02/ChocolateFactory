{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  __name: 'EditAmount',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const amount = ref(0);\n    onMounted(() => {\n      loadChocolate();\n    });\n    function loadChocolate() {\n      const chocolateId = route.params.id;\n      const token = localStorage.getItem('token'); // Ensure token is fetched from localStorage\n      axios.get(`http://localhost:3001/api/chocolates/${chocolateId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        amount.value = response.data.amount;\n      }).catch(error => {\n        console.error('Error fetching chocolate details:', error);\n      });\n    }\n    function updateAmount() {\n      const chocolateId = route.params.id;\n      const token = localStorage.getItem('token'); // Ensure token is fetched from localStorage\n      axios.put(`http://localhost:3001/api/chocolates/${chocolateId}/amount`, {\n        amount: amount.value\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(() => {\n        router.push({\n          name: 'FactoryDetailed',\n          params: {\n            id: route.params.factoryId\n          }\n        });\n      }).catch(error => {\n        console.error('Error updating amount:', error);\n      });\n    }\n    const __returned__ = {\n      route,\n      router,\n      amount,\n      loadChocolate,\n      updateAmount,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","axios","route","router","amount","loadChocolate","chocolateId","params","id","token","localStorage","getItem","get","headers","Authorization","then","response","value","data","catch","error","console","updateAmount","put","push","name","factoryId"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/components/EditAmount.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-amount\">\r\n    <h1>Edit Chocolate Amount</h1>\r\n    <form @submit.prevent=\"updateAmount\">\r\n      <div>\r\n        <label for=\"amount\">Amount:</label>\r\n        <input type=\"number\" v-model.number=\"amount\" required />\r\n      </div>\r\n      <button type=\"submit\">Update Amount</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst amount = ref(0);\r\n\r\nonMounted(() => {\r\n  loadChocolate();\r\n});\r\n\r\nfunction loadChocolate() {\r\n  const chocolateId = route.params.id;\r\n  const token = localStorage.getItem('token'); // Ensure token is fetched from localStorage\r\n  axios.get(`http://localhost:3001/api/chocolates/${chocolateId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n    .then(response => {\r\n      amount.value = response.data.amount;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching chocolate details:', error);\r\n    });\r\n}\r\n\r\nfunction updateAmount() {\r\n  const chocolateId = route.params.id;\r\n  const token = localStorage.getItem('token'); // Ensure token is fetched from localStorage\r\n  axios.put(`http://localhost:3001/api/chocolates/${chocolateId}/amount`, \r\n    { amount: amount.value },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    }\r\n  )\r\n    .then(() => {\r\n      router.push({ name: 'FactoryDetailed', params: { id: route.params.factoryId } });\r\n    })\r\n    .catch(error => {\r\n      console.error('Error updating amount:', error);\r\n    });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.edit-amount {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n"],"mappings":";AAcA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,MAAM,GAAGP,GAAG,CAAC,CAAC,CAAC;IAErBC,SAAS,CAAC,MAAM;MACdO,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,SAASA,aAAaA,CAAA,EAAG;MACvB,MAAMC,WAAW,GAAGJ,KAAK,CAACK,MAAM,CAACC,EAAE;MACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7CV,KAAK,CAACW,GAAG,CAAE,wCAAuCN,WAAY,EAAC,EAAE;QAC7DO,OAAO,EAAE;UACPC,aAAa,EAAG,UAASL,KAAM;QACjC;MACF,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAI;QAChBZ,MAAM,CAACa,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACd,MAAM;MACrC,CAAC,CAAC,CACDe,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,CAAC;IACN;IAEA,SAASE,YAAYA,CAAA,EAAG;MACtB,MAAMhB,WAAW,GAAGJ,KAAK,CAACK,MAAM,CAACC,EAAE;MACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7CV,KAAK,CAACsB,GAAG,CAAE,wCAAuCjB,WAAY,SAAQ,EACpE;QAAEF,MAAM,EAAEA,MAAM,CAACa;MAAM,CAAC,EACxB;QACEJ,OAAO,EAAE;UACPC,aAAa,EAAG,UAASL,KAAM;QACjC;MACF,CACF,CAAC,CACEM,IAAI,CAAC,MAAM;QACVZ,MAAM,CAACqB,IAAI,CAAC;UAAEC,IAAI,EAAE,iBAAiB;UAAElB,MAAM,EAAE;YAAEC,EAAE,EAAEN,KAAK,CAACK,MAAM,CAACmB;UAAU;QAAE,CAAC,CAAC;MAClF,CAAC,CAAC,CACDP,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}