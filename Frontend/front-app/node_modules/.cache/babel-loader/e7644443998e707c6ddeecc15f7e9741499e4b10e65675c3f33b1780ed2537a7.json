{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { ref, onMounted, reactive, computed } from 'vue';\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'UserPurchases',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const router = useRouter();\n    const purchases = ref([]);\n    const factories = ref([]);\n    const initialSearchFilters = {\n      factoryName: '',\n      minPrice: '',\n      maxPrice: '',\n      startDate: '',\n      endDate: ''\n    };\n    const initialSortOptions = {\n      sortBy: '',\n      sortOrder: 'asc' // 'asc' for ascending, 'desc' for descending\n    };\n    const searchFilters = reactive({\n      ...initialSearchFilters\n    });\n    const sortOptions = reactive({\n      ...initialSortOptions\n    });\n    const selectedFactory = ref('');\n    const isCustomer = computed(() => store.getters.userRole === 'Customer');\n    onMounted(() => {\n      loadPurchases();\n    });\n    function loadPurchases() {\n      const userId = store.getters.userId;\n      const params = {\n        factoryName: searchFilters.factoryName || '',\n        minPrice: searchFilters.minPrice || '',\n        maxPrice: searchFilters.maxPrice || '',\n        startDate: searchFilters.startDate || '',\n        endDate: searchFilters.endDate || '',\n        sortBy: sortOptions.sortBy || '',\n        sortOrder: sortOptions.sortOrder || 'asc'\n      };\n      console.log('Loading purchases with params:', params);\n      axios.get(`http://localhost:3001/api/purchases/user/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${store.state.token}`\n        },\n        params\n      }).then(response => {\n        console.log('Purchases received:', response.data);\n        purchases.value = response.data;\n        loadFactoriesFromPurchases(response.data);\n      }).catch(error => {\n        console.error('Error fetching purchases:', error);\n      });\n    }\n    function loadFactoriesFromPurchases(purchases) {\n      const factoryIds = [...new Set(purchases.flatMap(purchase => purchase.chocolates.map(chocolate => chocolate.chocolate.factoryId)))];\n      axios.post('http://localhost:3001/api/factories/by-ids', {\n        ids: factoryIds\n      }).then(response => {\n        factories.value = response.data;\n      }).catch(error => {\n        console.error('Error fetching factories:', error);\n      });\n    }\n    function applyFiltersAndSort() {\n      loadPurchases();\n    }\n    function resetFilters() {\n      Object.assign(searchFilters, {\n        ...initialSearchFilters\n      });\n      Object.assign(sortOptions, {\n        ...initialSortOptions\n      });\n      loadPurchases();\n    }\n    function cancelPurchase(purchaseId) {\n      const userId = store.getters.userId;\n      axios.post('http://localhost:3001/api/purchases/cancel', {\n        purchaseId,\n        userId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${store.state.token}`\n        }\n      }).then(response => {\n        console.log('Purchase canceled:', response.data);\n        loadPurchases();\n      }).catch(error => {\n        console.error('Error canceling purchase:', error);\n      });\n    }\n    function getFactoryNameById(factoryId) {\n      const factory = factories.value.find(factory => factory.id === factoryId);\n      return factory ? factory.name : 'Unknown Factory';\n    }\n    function getFactoryNamesFromPurchase(purchase) {\n      if (!purchase || !purchase.chocolates) {\n        return [];\n      }\n      const factoryIds = new Set(purchase.chocolates.map(item => item.chocolate.factoryId));\n      return Array.from(factoryIds).map(factoryId => ({\n        id: factoryId,\n        name: getFactoryNameById(factoryId)\n      }));\n    }\n    function navigateToAddComment(factoryId) {\n      if (factoryId) {\n        router.push({\n          name: 'AddComment',\n          params: {\n            factoryId\n          }\n        });\n      }\n    }\n    const __returned__ = {\n      store,\n      router,\n      purchases,\n      factories,\n      initialSearchFilters,\n      initialSortOptions,\n      searchFilters,\n      sortOptions,\n      selectedFactory,\n      isCustomer,\n      loadPurchases,\n      loadFactoriesFromPurchases,\n      applyFiltersAndSort,\n      resetFilters,\n      cancelPurchase,\n      getFactoryNameById,\n      getFactoryNamesFromPurchase,\n      navigateToAddComment,\n      ref,\n      onMounted,\n      reactive,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","computed","axios","useStore","useRouter","store","router","purchases","factories","initialSearchFilters","factoryName","minPrice","maxPrice","startDate","endDate","initialSortOptions","sortBy","sortOrder","searchFilters","sortOptions","selectedFactory","isCustomer","getters","userRole","loadPurchases","userId","params","console","log","get","headers","state","token","then","response","data","value","loadFactoriesFromPurchases","catch","error","factoryIds","Set","flatMap","purchase","chocolates","map","chocolate","factoryId","post","ids","applyFiltersAndSort","resetFilters","Object","assign","cancelPurchase","purchaseId","getFactoryNameById","factory","find","id","name","getFactoryNamesFromPurchase","item","Array","from","navigateToAddComment","push"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/components/UserPurchases.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-purchases\">\r\n    <h1>Your Purchases</h1>\r\n    \r\n    <!-- Search filters -->\r\n    <div class=\"search-filters\">\r\n      <div v-if=\"isCustomer\">\r\n        <label>Factory Name:</label>\r\n        <input v-model=\"searchFilters.factoryName\" type=\"text\" placeholder=\"Enter factory name\" >\r\n      </div>\r\n      \r\n      <label>Price Range:</label>\r\n      <input v-model=\"searchFilters.minPrice\" type=\"number\" placeholder=\"Min\">\r\n      <input v-model=\"searchFilters.maxPrice\" type=\"number\" placeholder=\"Max\">\r\n      \r\n      <label>Date Range:</label>\r\n      <input v-model=\"searchFilters.startDate\" type=\"date\">\r\n      <input v-model=\"searchFilters.endDate\" type=\"date\">\r\n      \r\n      <button @click=\"applyFiltersAndSort\">Apply Filters & Sort</button>\r\n      <button @click=\"resetFilters\">Reset Filters</button>\r\n    </div>\r\n\r\n    <!-- Sorting options -->\r\n    <div class=\"sorting-options\">\r\n      <label>Sort By:</label>\r\n      <select v-model=\"sortOptions.sortBy\">\r\n        <option value=\"\">Select</option>\r\n        <option value=\"factoryName\" v-if=\"isCustomer\">Factory Name</option>\r\n        <option value=\"totalPrice\">Total Price</option>\r\n        <option value=\"date\">Date</option>\r\n      </select>\r\n      <label>Order:</label>\r\n      <select v-model=\"sortOptions.sortOrder\">\r\n        <option value=\"asc\">Ascending</option>\r\n        <option value=\"desc\">Descending</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Purchases list -->\r\n    <div v-if=\"purchases.length\">\r\n      <div v-for=\"purchase in purchases\" :key=\"purchase.id\" class=\"purchase-item\">\r\n        <h3>Purchase ID: {{ purchase.id }}</h3>\r\n        <p>Date: {{ new Date(purchase.date).toLocaleString() }}</p>\r\n        <p>Total Price: {{ purchase.totalPrice }}</p>\r\n        <p>Status: {{ purchase.status }}</p>\r\n        <div v-for=\"item in purchase.chocolates\" :key=\"item.chocolate.id\" class=\"chocolate-item\">\r\n          <h4>{{ item.chocolate.name }}</h4>\r\n          <p>Quantity: {{ item.quantity }}</p>\r\n          <p>Price: {{ item.chocolate.price }}</p>\r\n          <p>Factory Name: {{ getFactoryNameById(item.chocolate.factoryId) }}</p>\r\n        </div>\r\n        <div v-if=\"purchase.status === 'Odobreno'\">\r\n          <label>Add Comment for Factory:</label>\r\n          <select v-model=\"selectedFactory\" @change=\"navigateToAddComment(selectedFactory)\">\r\n            <option v-for=\"factory in getFactoryNamesFromPurchase(purchase)\" :key=\"factory.id\" :value=\"factory.id\">\r\n              {{ factory.name }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <button v-if=\"purchase.status === 'Obrada'\" @click=\"cancelPurchase(purchase.id)\">Cancel</button>\r\n      </div>\r\n    </div>\r\n    <p v-else>You have no purchases.</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive, computed } from 'vue';\r\nimport axios from 'axios';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst purchases = ref([]);\r\nconst factories = ref([]);\r\nconst initialSearchFilters = {\r\n  factoryName: '',\r\n  minPrice: '',\r\n  maxPrice: '',\r\n  startDate: '',\r\n  endDate: '',\r\n};\r\nconst initialSortOptions = {\r\n  sortBy: '',\r\n  sortOrder: 'asc', // 'asc' for ascending, 'desc' for descending\r\n};\r\nconst searchFilters = reactive({ ...initialSearchFilters });\r\nconst sortOptions = reactive({ ...initialSortOptions });\r\nconst selectedFactory = ref('');\r\n\r\nconst isCustomer = computed(() => store.getters.userRole === 'Customer');\r\n\r\nonMounted(() => {\r\n  loadPurchases();\r\n});\r\n\r\nfunction loadPurchases() {\r\n  const userId = store.getters.userId;\r\n  const params = {\r\n    factoryName: searchFilters.factoryName || '',\r\n    minPrice: searchFilters.minPrice || '',\r\n    maxPrice: searchFilters.maxPrice || '',\r\n    startDate: searchFilters.startDate || '',\r\n    endDate: searchFilters.endDate || '',\r\n    sortBy: sortOptions.sortBy || '',\r\n    sortOrder: sortOptions.sortOrder || 'asc'\r\n  };\r\n\r\n  console.log('Loading purchases with params:', params);\r\n\r\n  axios.get(`http://localhost:3001/api/purchases/user/${userId}`, {\r\n    headers: {\r\n      'Authorization': `Bearer ${store.state.token}`\r\n    },\r\n    params\r\n  })\r\n    .then(response => {\r\n      console.log('Purchases received:', response.data);\r\n      purchases.value = response.data;\r\n      loadFactoriesFromPurchases(response.data);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching purchases:', error);\r\n    });\r\n}\r\n\r\nfunction loadFactoriesFromPurchases(purchases) {\r\n  const factoryIds = [...new Set(purchases.flatMap(purchase => purchase.chocolates.map(chocolate => chocolate.chocolate.factoryId)))];\r\n  axios.post('http://localhost:3001/api/factories/by-ids', { ids: factoryIds })\r\n    .then(response => {\r\n      factories.value = response.data;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching factories:', error);\r\n    });\r\n}\r\n\r\nfunction applyFiltersAndSort() {\r\n  loadPurchases();\r\n}\r\n\r\nfunction resetFilters() {\r\n  Object.assign(searchFilters, { ...initialSearchFilters });\r\n  Object.assign(sortOptions, { ...initialSortOptions });\r\n  loadPurchases();\r\n}\r\n\r\nfunction cancelPurchase(purchaseId) {\r\n  const userId = store.getters.userId;\r\n  axios.post('http://localhost:3001/api/purchases/cancel', { purchaseId, userId }, {\r\n    headers: {\r\n      'Authorization': `Bearer ${store.state.token}`\r\n    }\r\n  })\r\n    .then(response => {\r\n      console.log('Purchase canceled:', response.data);\r\n      loadPurchases();\r\n    })\r\n    .catch(error => {\r\n      console.error('Error canceling purchase:', error);\r\n    });\r\n}\r\n\r\nfunction getFactoryNameById(factoryId) {\r\n  const factory = factories.value.find(factory => factory.id === factoryId);\r\n  return factory ? factory.name : 'Unknown Factory';\r\n}\r\n\r\nfunction getFactoryNamesFromPurchase(purchase) {\r\n  if (!purchase || !purchase.chocolates) {\r\n    return [];\r\n  }\r\n  const factoryIds = new Set(purchase.chocolates.map(item => item.chocolate.factoryId));\r\n  return Array.from(factoryIds).map(factoryId => ({\r\n    id: factoryId,\r\n    name: getFactoryNameById(factoryId)\r\n  }));\r\n}\r\n\r\nfunction navigateToAddComment(factoryId) {\r\n  if (factoryId) {\r\n    router.push({ name: 'AddComment', params: { factoryId } });\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-purchases {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.purchase-item {\r\n  margin: 20px 0;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.chocolate-item {\r\n  margin-top: 10px;\r\n  padding: 5px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.search-filters, .sorting-options {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.search-filters label, .sorting-options label {\r\n  margin-right: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-filters input, .search-filters select, .sorting-options select {\r\n  padding: 8px;\r\n  margin-right: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  width: 150px;\r\n}\r\n\r\n.search-filters button {\r\n  padding: 8px 15px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.search-filters button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.sorting-options select {\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  width: 150px;\r\n}\r\n\r\n.sorting-options label {\r\n  margin-right: 10px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}