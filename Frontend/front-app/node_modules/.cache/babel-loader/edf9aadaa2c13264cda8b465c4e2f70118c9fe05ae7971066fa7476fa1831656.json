{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport Factories from '../components/Factories.vue';\nimport AddFactory from '../components/AddFactory.vue';\nimport FactoryDetails from '../components/FactoryDetails.vue';\nimport AddChocolate from '../components/AddChocolate.vue';\nimport EditChocolate from '../components/EditChocolate.vue';\nimport EditAmount from '../components/EditAmount.vue';\nimport Cart from '../components/Cart.vue';\nimport AddComment from '../components/AddComment.vue';\nimport Login from '../components/Login.vue';\nimport Register from '../components/Register.vue';\nimport UserPurchases from '../components/UserPurchases.vue';\nimport Profile from '../components/Profile.vue';\nimport RegisterManager from '../components/RegisterManager.vue';\nimport RegisterWorker from '../components/RegisterWorker.vue';\nimport ManagerPurchases from '../components/ManagerPurchases.vue';\nimport ManagerComments from '../components/ManagerComments.vue';\nimport store from '../store';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView\n}, {\n  path: '/factories',\n  name: 'Factories',\n  component: Factories\n}, {\n  path: '/add-factory',\n  name: 'AddFactory',\n  component: AddFactory\n}, {\n  path: '/factory-detailed/:id',\n  name: 'FactoryDetailed',\n  component: FactoryDetails,\n  props: true\n}, {\n  path: '/add-chocolate',\n  name: 'AddChocolate',\n  component: AddChocolate,\n  props: route => ({\n    factoryId: route.query.factoryId\n  })\n}, {\n  path: '/edit-chocolate/:id/:factoryId',\n  name: 'EditChocolate',\n  component: EditChocolate,\n  props: true\n}, {\n  path: '/edit-amount/:id/:factoryId',\n  name: 'EditAmount',\n  component: EditAmount,\n  props: true\n}, {\n  path: '/cart',\n  name: 'Cart',\n  component: Cart\n}, {\n  path: '/purchases',\n  name: 'UserPurchases',\n  component: UserPurchases\n}, {\n  path: '/add-comment/:factoryId',\n  name: 'AddComment',\n  component: AddComment,\n  props: true\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  props: true\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  props: true\n}, {\n  path: '/registerManager',\n  name: 'RegisterManager',\n  component: RegisterManager,\n  props: true\n}, {\n  path: '/registerWorker',\n  name: 'RegisterWorker',\n  component: RegisterWorker,\n  props: true\n}, {\n  path: '/profile',\n  name: 'Profile',\n  component: Profile,\n  props: true\n}, {\n  path: '/manager-purchases',\n  name: 'ManagerPurchases',\n  component: ManagerPurchases\n}, {\n  path: '/factory/:factoryId/comments',\n  name: 'ManagerComments',\n  component: ManagerComments,\n  props: true\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const requiresAdmin = to.matched.some(record => record.meta.requiresAdmin);\n  const requiresManager = to.matched.some(record => record.meta.requiresManager);\n  const requiresAdminOnly = to.matched.some(record => record.name === 'AddFactory');\n  if (requiresAuth && !store.getters.isAuthenticated) {\n    next('/login');\n  } else if (requiresAdmin && !store.getters.isAdministrator) {\n    next('/login');\n  } else if (requiresManager && !store.getters.isManager) {\n    next('/login');\n  } else if (requiresAdminOnly && !store.getters.isAdministrator) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","Factories","AddFactory","FactoryDetails","AddChocolate","EditChocolate","EditAmount","Cart","AddComment","Login","Register","UserPurchases","Profile","RegisterManager","RegisterWorker","ManagerPurchases","ManagerComments","store","routes","path","name","component","props","route","factoryId","query","router","history","process","env","BASE_URL","beforeEach","to","from","next","requiresAuth","matched","some","record","meta","requiresAdmin","requiresManager","requiresAdminOnly","getters","isAuthenticated","isAdministrator","isManager"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomeView from '../views/HomeView.vue';\r\nimport Factories from '../components/Factories.vue';\r\nimport AddFactory from '../components/AddFactory.vue';\r\nimport FactoryDetails from '../components/FactoryDetails.vue';\r\nimport AddChocolate from '../components/AddChocolate.vue';\r\nimport EditChocolate from '../components/EditChocolate.vue';\r\nimport EditAmount from '../components/EditAmount.vue';\r\nimport Cart from '../components/Cart.vue';\r\nimport AddComment from '../components/AddComment.vue'; \r\nimport Login from '../components/Login.vue';\r\nimport Register from '../components/Register.vue';\r\nimport UserPurchases from '../components/UserPurchases.vue';\r\nimport Profile from '../components/Profile.vue';\r\nimport RegisterManager from '../components/RegisterManager.vue';\r\nimport RegisterWorker from '../components/RegisterWorker.vue';\r\nimport ManagerPurchases from '../components/ManagerPurchases.vue';\r\nimport ManagerComments from '../components/ManagerComments.vue';\r\nimport store from '../store';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path: '/factories',\r\n    name: 'Factories',\r\n    component: Factories\r\n  },\r\n  {\r\n    path: '/add-factory',\r\n    name: 'AddFactory',\r\n    component: AddFactory\r\n  },\r\n  {\r\n    path: '/factory-detailed/:id',\r\n    name: 'FactoryDetailed',\r\n    component: FactoryDetails,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/add-chocolate',\r\n    name: 'AddChocolate',\r\n    component: AddChocolate,\r\n    props: route => ({ factoryId: route.query.factoryId }) \r\n  },\r\n  {\r\n    path: '/edit-chocolate/:id/:factoryId',\r\n    name: 'EditChocolate',\r\n    component: EditChocolate,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/edit-amount/:id/:factoryId', \r\n    name: 'EditAmount',\r\n    component: EditAmount,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/cart',\r\n    name: 'Cart',\r\n    component: Cart \r\n  },\r\n  {\r\n    path: '/purchases',\r\n    name: 'UserPurchases',\r\n    component: UserPurchases\r\n  },\r\n  {\r\n    path: '/add-comment/:factoryId',\r\n    name: 'AddComment',\r\n    component: AddComment,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: Register,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/registerManager',\r\n    name: 'RegisterManager',\r\n    component: RegisterManager,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/registerWorker',\r\n    name: 'RegisterWorker',\r\n    component: RegisterWorker,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/profile',\r\n    name: 'Profile',\r\n    component: Profile,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/manager-purchases',\r\n    name: 'ManagerPurchases',\r\n    component: ManagerPurchases\r\n  },\r\n  {\r\n    path: '/factory/:factoryId/comments',\r\n    name: 'ManagerComments',\r\n    component: ManagerComments,\r\n    props: true\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n  const requiresAdmin = to.matched.some(record => record.meta.requiresAdmin);\r\n  const requiresManager = to.matched.some(record => record.meta.requiresManager);\r\n  const requiresAdminOnly = to.matched.some(record => record.name === 'AddFactory');\r\n\r\n  if (requiresAuth && !store.getters.isAuthenticated) {\r\n    next('/login');\r\n  } else if (requiresAdmin && !store.getters.isAdministrator) {\r\n    next('/login');\r\n  } else if (requiresManager && !store.getters.isManager) {\r\n    next('/login');\r\n  } else if (requiresAdminOnly && !store.getters.isAdministrator) {\r\n    next('/login');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}