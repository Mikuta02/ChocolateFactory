{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport Factories from '../components/Factories.vue';\nimport AddFactory from '../components/AddFactory.vue';\nimport FactoryDetails from '../components/FactoryDetails.vue';\nimport AddChocolate from '../components/AddChocolate.vue';\nimport EditChocolate from '../components/EditChocolate.vue';\nimport Cart from '../components/Cart.vue';\nimport EditAmount from '../components/EditAmount.vue';\nimport AddComment from '../components/AddComment.vue';\nimport Login from '../components/Login.vue';\nimport Register from '../components/Register.vue';\nimport store from '../store';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView\n}, {\n  path: '/factories',\n  name: 'Factories',\n  component: Factories\n}, {\n  path: '/add-factory',\n  name: 'AddFactory',\n  component: AddFactory\n}, {\n  path: '/factory-detailed/:id',\n  name: 'FactoryDetailed',\n  component: FactoryDetails,\n  props: true\n}, {\n  path: '/add-chocolate',\n  name: 'AddChocolate',\n  component: AddChocolate,\n  props: route => ({\n    factoryId: route.query.factoryId\n  })\n}, {\n  path: '/edit-chocolate/:id/:factoryId',\n  name: 'EditChocolate',\n  component: EditChocolate,\n  props: true\n}, {\n  path: '/edit-amount/:id/:factoryId',\n  name: 'EditAmount',\n  component: EditAmount,\n  props: true\n}, {\n  path: '/cart',\n  name: 'Cart',\n  component: Cart\n}, {\n  path: '/add-comment/:factoryId',\n  name: 'AddComment',\n  component: AddComment,\n  props: true\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  props: true\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  props: true\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Route guard\nrouter.beforeEach((to, from, next) => {\n  if (to.name === 'AddFactory') {\n    const token = store.state.token; // Get token from the store\n    if (token) {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      if (payload.role === 'Administrator') {\n        next();\n      } else {\n        next('/login'); // Redirect to login if not an Administrator\n      }\n    } else {\n      next('/login'); // Redirect to login if not logged in\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","Factories","AddFactory","FactoryDetails","AddChocolate","EditChocolate","Cart","EditAmount","AddComment","Login","Register","store","routes","path","name","component","props","route","factoryId","query","router","history","process","env","BASE_URL","beforeEach","to","from","next","token","state","payload","JSON","parse","atob","split","role"],"sources":["C:/Programiranje/veb/projekat/chocolate-factoryapp/Frontend/front-app/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomeView from '../views/HomeView.vue';\r\nimport Factories from '../components/Factories.vue';\r\nimport AddFactory from '../components/AddFactory.vue';\r\nimport FactoryDetails from '../components/FactoryDetails.vue';\r\nimport AddChocolate from '../components/AddChocolate.vue';\r\nimport EditChocolate from '../components/EditChocolate.vue';\r\nimport Cart from '../components/Cart.vue';\r\nimport EditAmount from '../components/EditAmount.vue';\r\nimport AddComment from '../components/AddComment.vue'; \r\nimport Login from '../components/Login.vue';\r\nimport Register from '../components/Register.vue';\r\nimport store from '../store';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path: '/factories',\r\n    name: 'Factories',\r\n    component: Factories\r\n  },\r\n  {\r\n    path: '/add-factory',\r\n    name: 'AddFactory',\r\n    component: AddFactory\r\n  },\r\n  {\r\n    path: '/factory-detailed/:id',\r\n    name: 'FactoryDetailed',\r\n    component: FactoryDetails,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/add-chocolate',\r\n    name: 'AddChocolate',\r\n    component: AddChocolate,\r\n    props: route => ({ factoryId: route.query.factoryId }) \r\n  },\r\n  {\r\n    path: '/edit-chocolate/:id/:factoryId',\r\n    name: 'EditChocolate',\r\n    component: EditChocolate,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/edit-amount/:id/:factoryId', \r\n    name: 'EditAmount',\r\n    component: EditAmount,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/cart',\r\n    name: 'Cart',\r\n    component: Cart \r\n  },\r\n  {\r\n    path: '/add-comment/:factoryId',\r\n    name: 'AddComment',\r\n    component: AddComment,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: Register,\r\n    props: true\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\n// Route guard\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.name === 'AddFactory') {\r\n    const token = store.state.token; // Get token from the store\r\n    if (token) {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      if (payload.role === 'Administrator') {\r\n        next();\r\n      } else {\r\n        next('/login'); // Redirect to login if not an Administrator\r\n      }\r\n    } else {\r\n      next('/login'); // Redirect to login if not logged in\r\n    }\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}